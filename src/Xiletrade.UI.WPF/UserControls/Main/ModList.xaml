<UserControl x:Class="Xiletrade.UI.WPF.UserControls.Main.ModList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Xiletrade.UI.WPF.UserControls.Main"
             xmlns:ext="clr-namespace:Xiletrade.UI.WPF.Util.Extensions"
             xmlns:t="clr-namespace:Xiletrade.Library.ViewModels.Main;assembly=Xiletrade.Library" 
             mc:Ignorable="d" 
             d:DesignHeight="272" d:DesignWidth="510"
             d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
    <UserControl.Resources>
        
    </UserControl.Resources>

    <Grid>
        <!-- Header -->
        <StackPanel Width="510" Orientation="Horizontal" Margin="-2,-1,0,0" Height="17" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding Form.Visible.HeaderMod, Converter={StaticResource bool2VisibilityConverter}}">
            <!--
            <TextBlock Width="72" Text="{ext:Localization Main059_lbAffix}" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" FontSize="10" Style="{StaticResource TextBlockTitle}" TextAlignment="Center" />
            <TextBlock Width="260" Text="{ext:Localization Main060_lbMod}" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" FontSize="10" Style="{StaticResource TextBlockTitle}" TextAlignment="Center" />
            <TextBlock Width="60" Text="{ext:Localization Main094_lbTier}" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" FontSize="10" Style="{StaticResource TextBlockTitle}" TextAlignment="Center" />
            -->
            <TextBlock Width="72" Text="" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" FontSize="10" Style="{StaticResource TextBlockTitle}" TextAlignment="Center" />
            <TextBlock Width="260" Text="" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" FontSize="10" Style="{StaticResource TextBlockTitle}" TextAlignment="Center" />
            <TextBlock Width="60" Text="" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" FontSize="10" Style="{StaticResource TextBlockTitle}" TextAlignment="Center" />
            <CheckBox Margin="0,1,0,0" Style="{StaticResource checkBoxStat}" IsChecked="{Binding ShowMinMax}" ToolTip="min / max" Command="{Binding Commands.ShowMinMaxModsCommand}" Visibility="Collapsed"/>
            <ToggleButton Width="84" Margin="0,0,0,0" Content="{ext:Localization Main232_tbMinMax}" ToolTip="{ext:Localization Main233_tbMinMaxTip}" IsChecked="{Binding ShowMinMax}" Style="{StaticResource ToggleSwitchContentSmall}" Command="{Binding Commands.ShowMinMaxModsCommand}" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand">
                <ToggleButton.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                    </TransformGroup>
                </ToggleButton.LayoutTransform>
            </ToggleButton>
            <TextBlock Visibility="Collapsed" Text="{ext:Localization General093_lbSearch}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="10" Style="{StaticResource TextBlockTitle}" Width="84" TextAlignment="Center" />
            <!--<CheckBox Margin="474,1,0,0" Width="38" Style="{StaticResource checkBoxStat}" IsChecked="{Binding Form.AllCheck}" ToolTip="{ext:Localization Main082_lbCheckAll}" Visibility="{Binding Form.Visible.CheckAll, Converter={StaticResource bool2VisibilityConverter}}" Command="{Binding Commands.CheckAllModsCommand}"/>-->
            <ToggleButton Margin="20,0,0,0" Content="{ext:Localization Main082_lbCheckAll}" ToolTip="{ext:Localization Main082_lbCheckAll}" IsChecked="{Binding Form.AllCheck}" Style="{StaticResource ToggleSwitchContentSmall}" Visibility="{Binding Form.Visible.CheckAll, Converter={StaticResource bool2VisibilityConverter}}" Command="{Binding Commands.CheckAllModsCommand}" HorizontalAlignment="Left" VerticalAlignment="Top">
                <ToggleButton.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                    </TransformGroup>
                </ToggleButton.LayoutTransform>
            </ToggleButton>
            <TextBlock Visibility="Collapsed" Text="{ext:Localization Main064_lbSelect}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="10" Style="{StaticResource TextBlockTitle}" TextAlignment="Center" />
            <!--
            <TextBlock Text="{ext:Localization Main061_lbMin}" HorizontalAlignment="Left" Margin="390,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="41" TextAlignment="Center" Height="17" Visibility="Hidden"/>
            <TextBlock Text="{ext:Localization Main062_lbCurrent}" HorizontalAlignment="Left" Margin="341,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Width="51" Height="17" Visibility="Hidden"/>
            <TextBlock Text="{ext:Localization Main063_lbMax}" HorizontalAlignment="Left" Margin="433,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="41" TextAlignment="Center" Height="17" Visibility="Hidden"/>
            -->
        </StackPanel>
        <!-- Mod list -->
        <Grid Margin="0,12,0,0">
            <ListBox x:Name="listMods" BorderThickness="0" Padding="0" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Background="Transparent" HorizontalContentAlignment="Stretch" Height="272" Width="511" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                     ItemsSource="{Binding Form.ModList}" d:ItemsSource="{d:SampleData ItemCount=10}" Focusable="False">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="BorderThickness" Value="0,0,0,0" />
                        <Setter Property="Focusable" Value="False" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel>
                        </VirtualizingStackPanel>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="25" Margin="0" VerticalAlignment="Top">
                            <ComboBox x:Name="affix" HorizontalAlignment="Left" Margin="0,1,0,0" VerticalAlignment="Top" Width="60" Height="22" Tag="combobox" FontSize="10" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"   
                           VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Affix}" SelectedIndex="{Binding AffixIndex}" >
                                <ComboBox.Resources>
                                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                                </ComboBox.Resources>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" FontFamily="{StaticResource FontinSmallCaps}" d:Text="Affix" d:Foreground="DarkKhaki" Cursor="">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithCraftedConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource EnchantAndCraftBrush}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithCrucibleConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="IndianRed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithEnchantConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="SpringGreen"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithFracturedConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource FractureBrush}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithImplicitConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="DarkKhaki"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithPseudoConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="PowderBlue"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithScourgeConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="Orange"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithUltimatumConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="Tomato"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithVeiledConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="DimGray"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithRuneConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="GreenYellow"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithSkillConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource SkillBrush}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithDesecratedConverter}}" Value="True">
                                                            <Setter Property="Foreground" Value="Green"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsUniqueExplicit}" Value="True">
                                                            <Setter Property="Foreground" Value="Peru"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsCorruptionImplicit}" Value="True">
                                                            <Setter Property="Foreground" Value="Red"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding AffixCanBeEnabled}" Value="False">
                                                <Setter Property="IsEnabled" Value="{Binding AffixEnable}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding AffixCanBeEnabled}" Value="True">
                                                <Setter Property="IsEnabled" Value="{Binding ElementName=select, Path=IsChecked}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <Image x:Name="modimg" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="20" Margin="60,3,0,0" Tag="tag" Visibility="{Binding TagVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                <!-- ToolTip="{Binding Tag}"-->
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="{StaticResource ImgPillGrey}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Source" Value="{StaticResource ImgPillGold}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                                <Image.ToolTip>
                                    <ItemsControl ItemsSource="{Binding TagTip}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Text}" FontWeight="Bold">
                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="{DynamicResource DarkBackgroundBrush}"/>
                                                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                                            <Setter Property="Margin" Value="4,0,0,0"/>
                                                            <Setter Property="Padding" Value="2,2,2,1"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Attack">
                                                                    <Setter Property="Foreground" Value="{StaticResource AttackTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Physical">
                                                                    <Setter Property="Foreground" Value="{StaticResource PhysicalTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Caster">
                                                                    <Setter Property="Foreground" Value="{StaticResource CasterTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Speed">
                                                                    <Setter Property="Foreground" Value="{StaticResource SpeedTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Critical">
                                                                    <Setter Property="Foreground" Value="{StaticResource CriticalTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Fire">
                                                                    <Setter Property="Foreground" Value="{StaticResource FireTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Cold">
                                                                    <Setter Property="Foreground" Value="{StaticResource ColdTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Lightning">
                                                                    <Setter Property="Foreground" Value="{StaticResource LightningTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Chaos">
                                                                    <Setter Property="Foreground" Value="{StaticResource ChaosTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Life">
                                                                    <Setter Property="Foreground" Value="{StaticResource LifeTagBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Defences">
                                                                    <Setter Property="Foreground" Value="{StaticResource DefencesTagBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="3"/>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Image.ToolTip>
                            </Image>
                            
                            <ComboBox x:Name="optionID" HorizontalAlignment="Left" Margin="344,1,0,0" VerticalAlignment="Top" Width="2" Height="22" Tag="combobox" FontSize="10" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Visibility="Hidden"
                                      VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding OptionID}" SelectedIndex="{Binding OptionIndex}"/>

                            <Grid IsEnabled="{Binding Selected}">
                                <TextBlock x:Name="mod" HorizontalAlignment="Left" Margin="80,6,0,0" d:Text="Item modifier full text" VerticalAlignment="Top" Width="250" FontFamily="{StaticResource OptimusPrincepsSemiBold}" FontSize="12" TextTrimming="WordEllipsis" TextWrapping="NoWrap" Tag="mod" Text="{Binding Mod}" ToolTip="{Binding ModTooltip}" Visibility="{Binding ModVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Style.Triggers>
                                                <!--
                                                <DataTrigger Binding="{Binding TagTip, Converter={StaticResource toolTipItemConverter}}" Value="Fire">
                                                    <Setter Property="Foreground" Value="{StaticResource FireTagBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TagTip, Converter={StaticResource toolTipItemConverter}}" Value="Cold">
                                                    <Setter Property="Foreground" Value="{StaticResource ColdTagBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TagTip, Converter={StaticResource toolTipItemConverter}}" Value="Lightning">
                                                    <Setter Property="Foreground" Value="{StaticResource LightningTagBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TagTip, Converter={StaticResource toolTipItemConverter}}" Value="Life">
                                                    <Setter Property="Foreground" Value="{StaticResource LifeTagBrush}"/>
                                                </DataTrigger>
                                                -->
                                                <DataTrigger Binding="{Binding ModKind}" Value="DangerousMod">
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ModKind}" Value="RareMod">
                                                    <Setter Property="Foreground" Value="Gold"/>
                                                </DataTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, ElementName=mod}" Value="True"/>
                                                        <Condition Binding="{Binding SelectedItem, ElementName=affix, Converter={StaticResource getAffixConverter}}" Value="craft"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{StaticResource EnchantAndCraftBrush}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, ElementName=mod}" Value="True"/>
                                                        <Condition Binding="{Binding SelectedItem, ElementName=affix, Converter={StaticResource getAffixConverter}}" Value="fractured"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{StaticResource FractureBrush}"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock x:Name="modbis" HorizontalAlignment="Left" Margin="80,6,0,0" d:Text="" VerticalAlignment="Top" TextTrimming="WordEllipsis" TextWrapping="NoWrap" Width="260" FontFamily="{StaticResource OptimusPrincepsSemiBold}" FontSize="12" Tag="mod" d:Opacity="0" d:Panel.ZIndex="-1" Text="{Binding ModBis}" ToolTip="{Binding ModBisTooltip}" Visibility="{Binding ModBisVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Style.Triggers>
                                                <!--
                                                <DataTrigger Binding="{Binding TagTip, Converter={StaticResource toolTipItemConverter}}" Value="Fire">
                                                    <Setter Property="Foreground" Value="{StaticResource FireTagBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TagTip, Converter={StaticResource toolTipItemConverter}}" Value="Cold">
                                                    <Setter Property="Foreground" Value="{StaticResource ColdTagBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TagTip, Converter={StaticResource toolTipItemConverter}}" Value="Lightning">
                                                    <Setter Property="Foreground" Value="{StaticResource LightningTagBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TagTip, Converter={StaticResource toolTipItemConverter}}" Value="Life">
                                                    <Setter Property="Foreground" Value="{StaticResource LifeTagBrush}"/>
                                                </DataTrigger>
                                                -->
                                                <DataTrigger Binding="{Binding ModKind}" Value="DangerousMod">
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ModKind}" Value="RareMod">
                                                    <Setter Property="Foreground" Value="Gold"/>
                                                </DataTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, ElementName=modbis}" Value="True"/>
                                                        <Condition Binding="{Binding SelectedItem, ElementName=affix, Converter={StaticResource getAffixConverter}}" Value="craft"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{StaticResource EnchantAndCraftBrush}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, ElementName=modbis}" Value="True"/>
                                                        <Condition Binding="{Binding SelectedItem, ElementName=affix, Converter={StaticResource getAffixConverter}}" Value="fractured"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{StaticResource FractureBrush}"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox x:Name="option" MaxDropDownHeight="250" HorizontalAlignment="Left" Margin="344,1,0,0" VerticalAlignment="Top" FontFamily="{StaticResource FontinSmallCaps}" Width="116" Height="22" Tag="combobox" FontSize="12" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"  d:Opacity="0" d:Panel.ZIndex="-1" 
                                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Option}" SelectedIndex="{Binding OptionIndex}" Visibility="{Binding OptionVisible, Converter={StaticResource bool2VisibilityConverter}}"/>
                                <Grid Visibility="{Binding OptionVisible, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                    <Grid Visibility="{Binding PreferMinMax, Converter={StaticResource bool2VisibilityConverter}}">
                                        <TextBox d:Text="10" Width="41" Margin="376,1,0,0" Style="{StaticResource tbStat}" Tag="{ext:Localization Main061_lbMin}" Text="{Binding Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox d:Text="" Width="41" Margin="419,1,0,0" Style="{StaticResource tbStat}" Tag="{ext:Localization Main063_lbMax}" Text="{Binding Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Grid>
                                    <Grid Visibility="{Binding PreferMinMax, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                        <Slider Margin="376,1,0,0" 
                                                Style="{StaticResource sliderFlat}"
                                                Value="{Binding SlideValue}" 
                                                Minimum="{Binding CurrentSlide, Mode=OneTime, Converter={StaticResource getSliderRangeMin}}" 
                                                Maximum="{Binding CurrentSlide, Mode=OneTime, Converter={StaticResource getSliderRangeMax}}" 
                                                IsDirectionReversed="{Binding IsSlideReversed, Mode=TwoWay}" 
                                                MouseRightButtonDown="InverseSlider_MouseRightButtonDown" 
                                                ToolTip="{ext:Localization Main231_SliderToolTip}"/>
                                    </Grid>
                                </Grid>
                            </Grid>

                            <ToggleButton x:Name="select" IsChecked="{Binding Selected}" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <ToggleButton.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                    </TransformGroup>
                                </ToggleButton.LayoutTransform>
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleSwitchContent}">
                                        <Setter Property="Margin" Value="470,6,0,0"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=listMods, Path=ItemsSource, Converter={StaticResource greaterThanTenConverter}}" Value="true">
                                                <Setter Property="Margin" Value="466,6,0,0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <!--
                            <CheckBox x:Name="select" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="{Binding Selected}">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                </CheckBox.LayoutTransform>
                                <CheckBox.Style>
                                    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                                        <Setter Property="Margin" Value="475,3,0,0"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=listMods, Path=ItemsSource, Converter={StaticResource greaterThanTenConverter}}" Value="true">
                                                <Setter Property="Margin" Value="465,3,0,0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            -->
                            <TextBlock x:Name="current" d:Text="" HorizontalAlignment="Left" Margin="340,1,0,0" VerticalAlignment="Top" FontFamily="Arial" Height="22" FontWeight="Bold" Width="30" TextAlignment="Center" Visibility="Hidden" Text="{Binding Current}"/>
                            <TextBlock x:Name="tier" d:Text="S2+S10" d:Foreground="{StaticResource PrefixBrush}" HorizontalAlignment="Left" Margin="330,5,0,0" VerticalAlignment="Top" FontFamily="Arial" FontWeight="Bold" Width="45" TextAlignment="Center" d:Tag="null" Tag="{Binding TierTag}" Text="{Binding Tier}"> <!-- Foreground="#FFB2B0B0"-->
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=option, Path=Visibility}" Value="Visible">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TierKind}" Value="R">
                                                <Setter Property="Foreground" Value="{StaticResource EnchantAndCraftBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TierKind}" Value="I">
                                                <Setter Property="Foreground" Value="DarkKhaki"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TierKind}" Value="P">
                                                <Setter Property="Foreground" Value="{StaticResource PrefixBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TierKind}" Value="S">
                                                <Setter Property="Foreground" Value="{StaticResource SuffixBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TierKind}" Value="U">
                                                <Setter Property="Foreground" Value="{StaticResource UniqueWebBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                <TextBlock.ToolTip>
                                    <ItemsControl ItemsSource="{Binding TierTip}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Text}" Padding="0" Margin="4,0,0,0" FontWeight="Bold">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <!-- todo add triggers -->
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Kind}" Value="Suffix">
                                                                    <Setter Property="Foreground" Value="White"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</UserControl>
