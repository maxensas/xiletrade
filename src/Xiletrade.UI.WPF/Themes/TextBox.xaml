<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:help="clr-namespace:Xiletrade.UI.WPF.Util.Helper">
    
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource DarkBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WindowBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2,2,2,1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <!-- BorderThickness-->
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd"
						BorderBrush="{TemplateBinding BorderBrush}" 
						BorderThickness="{TemplateBinding BorderThickness}" 
						Background="{TemplateBinding Background}"
						CornerRadius="3"
						SnapsToDevicePixels="true">
                        <Border.InputBindings>
                            <MouseBinding Command="{Binding Commands.WheelIncrement}" Gesture="{help:MouseWheel Direction=Up}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            <!-- , Converter={StaticResource getTextObjectConverter}}-->
                            <MouseBinding Command="{Binding Commands.WheelIncrementTenth}" Gesture="{help:MouseWheel Direction=Up, Key=Control}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            <MouseBinding Command="{Binding Commands.WheelIncrementHundredth}" Gesture="{help:MouseWheel Direction=Up, Key=Shift}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            <MouseBinding Command="{Binding Commands.WheelDecrement}" Gesture="{help:MouseWheel Direction=Down}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            <MouseBinding Command="{Binding Commands.WheelDecrementTenth}" Gesture="{help:MouseWheel Direction=Down, Key=Control}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"/>
                            <MouseBinding Command="{Binding Commands.WheelDecrementHundredth}" Gesture="{help:MouseWheel Direction=Down, Key=Shift}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"/>
                        </Border.InputBindings>
                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" 
							            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter Property="Background" TargetName="PART_ContentHost" Value="Transparent"/>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                        </Trigger>
                        <!--
                        <Trigger Property="Tag" Value="tier">
                            <Setter Property="Background" TargetName="PART_ContentHost" Value="Transparent"/>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                        </Trigger>
                        -->
                        <!--
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=Tag}" Value="tier">
                            <Setter Property="Background" TargetName="PART_ContentHost" Value="Transparent"/>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                        </DataTrigger>
                        -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ThemeFirstForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ThemeFirstForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="tbConfig" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Foreground" Value="#FFC8C8C8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ThemeFirstForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ThemeFirstForegroundBrush}"/>
            </Trigger>
            <!--
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            -->
        </Style.Triggers>
    </Style>

    <!--
    <Style x:Key="styleTier" BasedOn="{StaticResource {x:Type Control}}" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2,2,2,1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd"
						BorderBrush="{TemplateBinding BorderBrush}" 
						BorderThickness="{TemplateBinding BorderThickness}" 
						Background="{TemplateBinding Background}"
						CornerRadius="3"
						SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" 
							            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter Property="Background" TargetName="PART_ContentHost" Value="Transparent"/>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=Tag}" Value="tier0" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=Tag}" Value="tier1" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=Tag}" Value="tier2" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=Tag}" Value="tier3" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="PART_ContentHost" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->
    <Style x:Key="tbStatMin" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="34" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
                        <TextBox x:Name="tboxMin" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" VerticalAlignment="Top" TextAlignment="Center" Width="{TemplateBinding Width}" Tag="textbox" FontFamily="Arial"  IsEnabled="{TemplateBinding IsEnabled}" Text="{TemplateBinding Text}"/>
                        <TextBlock IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource ForegroundShadeBrush}" Width="{TemplateBinding Width}" TextAlignment="Center" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=tboxMin}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tbStatMax" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="34" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
                        <TextBox x:Name="tboxMax" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" VerticalAlignment="Top" TextAlignment="Center" Width="{TemplateBinding Width}" Tag="textbox" FontFamily="Arial" IsEnabled="{TemplateBinding IsEnabled}" Text="{TemplateBinding Text}"/>
                        <TextBlock IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource ForegroundShadeBrush}" Width="{TemplateBinding Width}" TextAlignment="Center" FontSize="10">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=tboxMax}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>