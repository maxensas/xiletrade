<view:ViewBase x:Class="Xiletrade.Views.ConfigView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:view="clr-namespace:Xiletrade.Views"
        xmlns:c="clr-namespace:Xiletrade.Util"
        xmlns:t="clr-namespace:Xiletrade.Library.ViewModels;assembly=Xiletrade.Library"
        xmlns:ext="clr-namespace:Xiletrade.Util.Extensions"
        d:DataContext="{d:DesignInstance Type=t:ConfigViewModel}"
        WindowStartupLocation="CenterScreen" FontFamily="Malgun Gothic" FontSize="12" 
        mc:Ignorable="d" ResizeMode="NoResize" SizeToContent="WidthAndHeight" WindowStyle="None" 
        Title="Configuration" Height="484" Width="624" Foreground="{StaticResource ForegroundBrush}" 
        AllowsTransparency="True" Background="Transparent" Opacity="1" RenderTransformOrigin="0.5,0.5">
    <view:ViewBase.RenderTransform>
        <TransformGroup>
            <ScaleTransform x:Name="WindowScaleTransform" />
        </TransformGroup>
    </view:ViewBase.RenderTransform>
    <view:ViewBase.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Triggers>
                <Trigger Property="IsVisible" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Opacity)" From="0" To="1" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Opacity)" From="1" To="0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </view:ViewBase.Style>
    <view:ViewBase.Resources>
        <SolidColorBrush x:Key="LightBg" Color="{StaticResource LightBackgroundColor}" Opacity="1"/>
        <SolidColorBrush x:Key="HotBg" Color="{StaticResource HotColor}" Opacity="1"/>
        <SolidColorBrush x:Key="DarkBg" Color="{StaticResource DarkBackgroundColor}" Opacity="1"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkWhite2Brush}"/>
            <Setter Property="Padding" Value="6,1,6,1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DarkBg}"/>
            <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="Container">
                            <Grid x:Name="Grid" SnapsToDevicePixels="true" Margin="1,0,-12,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Bd" Grid.Column="0" CornerRadius="3,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
					        Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="Content" Margin="6,1,6,1" ContentSource="Header"
						        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
						        RecognizesAccessKey="True"
						        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                </Border>
                                <Path x:Name="RoundedCorner" Grid.Column="1" Grid.Row="0" Width="24" Stretch="Fill"
                          Data="{StaticResource TabItemRoundedCorner}" Fill="{TemplateBinding Background}" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource HotBg}"/>
                                <Setter Property="Fill"  TargetName="RoundedCorner" Value="{DynamicResource HotBg}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource LightBg}"/>
                                <Setter Property="Fill"  TargetName="RoundedCorner" Value="{DynamicResource LightBg}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HotBg}"/>
                                <Setter Property="Fill" TargetName="RoundedCorner" Value="{DynamicResource HotBg}"/>
                            </MultiTrigger>

                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Style" TargetName="RoundedCorner" Value="{StaticResource BottomStyle}"/>
                                <Setter Property="Style" TargetName="Bd" Value="{StaticResource BottomStyle}"/>
                                <Setter Property="Style" TargetName="Content" Value="{StaticResource BottomStyle}"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="Bd" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="Bd" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="RoundedCorner" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="RoundedCorner" Value="0"/>
                                <Setter Property="Style" TargetName="RoundedCorner" Value="{StaticResource RoundedCornerLeftStyle}"/>
                                <Setter Property="Style" TargetName="Bd" Value="{StaticResource LeftStyle}"/>
                                <Setter Property="Style" TargetName="Content" Value="{StaticResource DefaultStyle}"/>
                                <Setter Property="Margin" TargetName="Grid" Value="0,1,0,-16"/>
                                <Setter Property="CornerRadius" TargetName="Bd" Value="0 3 0 0"/>
                                <Setter Property="Margin" TargetName="RoundedCorner" Value="0 4 0 0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="Bd" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="Bd" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="RoundedCorner" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="RoundedCorner" Value="1"/>
                                <Setter Property="Style" TargetName="RoundedCorner" Value="{StaticResource RightStyle}"/>
                                <Setter Property="Style" TargetName="Bd" Value="{StaticResource RightStyle}"/>
                                <Setter Property="Style" TargetName="Content" Value="{StaticResource DefaultStyle}"/>
                                <Setter Property="Margin" TargetName="Grid" Value="0,1,0,-12"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Top"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin"  Value="0,0,0,-1"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Bottom"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="0,-1,0,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Left"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="0,0,-1,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Right"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-1,0,0,0"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource DarkBg}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource DarkBg}"/>
                                <Setter Property="Fill" TargetName="RoundedCorner" Value="{DynamicResource DarkBg}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </view:ViewBase.Resources>
    <Grid Margin="0,0,0,0" Background="#FF333333">
        <Grid Margin="2,2,2,2" Background="#FF444444">
            <Button x:Name="btnExit" HorizontalAlignment="Left" Margin="587,-1,-1,0" VerticalAlignment="Top" Width="34" Height="28" Background="#FF333333" Command="{Binding Commands.CloseConfigCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Red" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Button.Content>
                    <Grid>
                        <Rectangle Width="12" Height="2" Stroke="White" StrokeThickness="2">
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="-45"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                        <Rectangle Width="12" Height="2" Stroke="White" StrokeThickness="2">
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="45"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                    </Grid>
                </Button.Content>
            </Button>
            <Label x:Name="lbSettings" Content="{ext:Localization Config001_lbSettings}" HorizontalAlignment="Left" Margin="35,1,0,0" VerticalAlignment="Top" Width="552" HorizontalContentAlignment="Center"/>
            <Grid Margin="15,30,15,50">
                <TabControl HorizontalAlignment="Left" VerticalAlignment="Top" Width="590" Height="400" BorderBrush="{DynamicResource DarkBg}" Background="{DynamicResource LightBg}" BorderThickness="1" >
                    <!-- SelectionChanged="TabControl_SelectionChanged"-->
                    <TabItem x:Name="tabGeneral" Header="{ext:Localization Config005_tabGeneral}" Margin="0,1,0,-1" d:IsSelected="True">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}"/>
                        </TabItem.Style>
                        <Grid>
                            <Label x:Name="lbPref" Content="{ext:Localization Config009_lbPref}" BorderThickness="0" Height="27" Margin="5,8,463,335" FontWeight="Bold"/>
                            <Label x:Name="lbLeague" Content="{ext:Localization Config011_lbLeague}"  Height="27" Margin="15,38,476,305" ToolTip="{ext:Localization Config049_lbLeagueTip}" Foreground="#FFC8C8C8" />
                            <ComboBox x:Name="cbLeagueConfig" Height="22" Margin="108,41,367,307" HorizontalContentAlignment="Center" ItemsSource="{Binding General.League}" SelectedIndex="{Binding General.LeagueIndex}">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <Button x:Name="btnUpdate" d:Content="{ext:Localization Config010_btnUpdate}" Content="{Binding General.BtnUpdateText}" IsEnabled="{Binding General.BtnUpdateEnable}" HorizontalAlignment="Left" Margin="122,12,0,336" Width="91" Height="22" ToolTip="{ext:Localization Config048_btnUpdateTip}" Command="{Binding Commands.UpdateFiltersCommand}" />
                            <Button x:Name="btnUpdateAll" d:Content="All" Content="All" IsEnabled="{Binding General.BtnUpdateEnable}" HorizontalAlignment="Left" Margin="88,12,0,336" Width="30" Height="22" ToolTip="Update all filters" Command="{Binding Commands.UpdateFiltersCommand}" CommandParameter="all">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=checkDevmod}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=checkDevmod}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Label x:Name="lbLang" Content="{ext:Localization Config012_lbLang}" BorderThickness="0" Height="27" Margin="14,68,476,275" ToolTip="{ext:Localization Config050_lbLangTip}" Foreground="#FFC8C8C8" />
                            <Image Margin="111,74,443,280" Height="16" Width="26">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="0">
                                                <Setter Property="Source" Value="{StaticResource FlagEnglish}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="1">
                                                <Setter Property="Source" Value="{StaticResource FlagKorean}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="2">
                                                <Setter Property="Source" Value="{StaticResource FlagFrench}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="3">
                                                <Setter Property="Source" Value="{StaticResource FlagSpanish}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="4">
                                                <Setter Property="Source" Value="{StaticResource FlagGerman}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="5">
                                                <Setter Property="Source" Value="{StaticResource FlagBrazilian}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="6">
                                                <Setter Property="Source" Value="{StaticResource FlagRussian}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="7">
                                                <Setter Property="Source" Value="{StaticResource FlagThai}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="8">
                                                <Setter Property="Source" Value="{StaticResource FlagTaiwanese}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="9">
                                                <Setter Property="Source" Value="{StaticResource FlagChinese}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding General.LanguageIndex}" Value="10">
                                                <Setter Property="Source" Value="{StaticResource FlagJapanese}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <ComboBox x:Name="cbLanguage" Height="22" Margin="141,71,367,277" HorizontalContentAlignment="Center" ToolTip="{ext:Localization Config147_cbLanguageTip}" ItemsSource="{Binding General.Language}" SelectedIndex="{Binding General.LanguageIndex}">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <Border BorderBrush="#FF333333" BorderThickness="1" HorizontalAlignment="Left" Height="1" Margin="-4,106,-4,0" VerticalAlignment="Top" Width="588" RenderTransformOrigin="0.5,0.5" />


                            <Label x:Name="lbSearch" Content="{ext:Localization Config013_lbSearch}" BorderThickness="0" Height="27" Margin="5,112,345,231" FontWeight="Bold"/>
                            <Label x:Name="lbAge" Content="{ext:Localization Config014_lbAge}" BorderThickness="0" Height="27" Margin="14,139,404,204" ToolTip="{ext:Localization Config052_lbAgeTip}" Foreground="#FFC8C8C8" />
                            <ComboBox x:Name="cbSearchDay" Height="22" Margin="176,143,366,205" HorizontalContentAlignment="Center" ItemsSource="{Binding General.SearchDayLimit}" SelectedIndex="{Binding General.SearchDayLimitIndex}">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>

                            <Label x:Name="lbMaxResult" Content="{ext:Localization Config015_lbMaxResult}" ToolTipService.ShowDuration="12000" BorderThickness="0" Height="27" Margin="14,171,404,172" Foreground="#FFC8C8C8" ToolTip="{ext:Localization Config053_lbMaxResultTip}"/>
                            <!--
                            <Label x:Name="lbItem" Content="{ext:Localization Config016_lbItem}" BorderThickness="0" Margin="27,195,516,154" FontSize="10" HorizontalContentAlignment="Center" Foreground="#FFC8C8C8" />
                            -->
                            <ComboBox x:Name="cbFetchDetail" Height="22" Margin="176,175,367,173" HorizontalContentAlignment="Center" ItemsSource="{Binding General.MaxFetch}" SelectedIndex="{Binding General.MaxFetchIndex}">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <Label x:Name="lbBulk" Content="{ext:Localization Config017_lbBulk}" BorderThickness="0" Margin="71,195,472,154" FontSize="10" HorizontalContentAlignment="Center" Foreground="#FFC8C8C8" Visibility="Hidden"/>
                            <ComboBox x:Name="cbFetchBulk" Height="22" Margin="71,214,472,134" HorizontalContentAlignment="Center" Visibility="Hidden"/>

                            <Label x:Name="lbTimeout" Content="{ext:Localization Config150_lblTimeout}" ToolTipService.ShowDuration="12000" BorderThickness="0" Height="27" Margin="14,203,403,140" ToolTip="{ext:Localization Config151_lblTimeoutTip}" Foreground="#FFC8C8C8"/>
                            <ComboBox x:Name="cbTrade" Height="22" Margin="176,207,367,141" HorizontalContentAlignment="Center" ItemsSource="{Binding General.MaxWaitRequest}" SelectedIndex="{Binding General.MaxWaitRequestIndex}">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>

                            <Label x:Name="lbSearchPv" Content="{ext:Localization Config018_lbSearchPv}" BorderThickness="0" Height="27" Margin="5,229,345,114" ToolTip="{ext:Localization Config054_lbSearchPvTip}" FontWeight="Bold" Visibility="Hidden"/>
                            <Label x:Name="lbMinPv" Content="{ext:Localization Config019_lbMinPv}" BorderThickness="0" Margin="25,249,517,100" FontSize="10" HorizontalContentAlignment="Center" Foreground="#FFC8C8C8" Visibility="Hidden" />
                            <Label x:Name="lbMaxPv" Content="{ext:Localization Config020_lbMaxPv}" BorderThickness="0" Margin="70,249,473,100" FontSize="10" HorizontalContentAlignment="Center" Foreground="#FFC8C8C8" Visibility="Hidden" />
                            <Label x:Name="lbUniquePv" Content="{ext:Localization Config021_lbUniquePv}" BorderThickness="0" Height="27" Margin="110,266,337,77" Foreground="#FFC8C8C8" Visibility="Hidden" />
                            <ComboBox x:Name="cbMinUniques" Height="22" Margin="25,268,517,80" HorizontalContentAlignment="Center" Visibility="Hidden"/>
                            <ComboBox x:Name="cbMaxUniques" Height="22" Margin="69,268,473,80" HorizontalContentAlignment="Center" Visibility="Hidden"/>
                            <Label x:Name="lbOtherPv" Content="{ext:Localization Config022_lbOtherPv}" BorderThickness="0" Height="27" Margin="110,293,337,50" Foreground="#FFC8C8C8" Visibility="Hidden" />
                            <ComboBox x:Name="cbMinOthers" Height="22" Margin="25,295,517,53" HorizontalContentAlignment="Center" Visibility="Hidden"/>
                            <ComboBox x:Name="cbMaxOthers" Height="22" Margin="70,295,473,53" HorizontalContentAlignment="Center" Visibility="Hidden"/>

                            <Label x:Name="lbWhisper" Content="{ext:Localization Config025_lbWhisper}" BorderThickness="0" Height="27" Margin="250,75,178,268" ToolTip="{ext:Localization Config055_lbWhisperTip}" FontWeight="Bold"/>
                            <CheckBox x:Name="checkWhisperAuto" Content="{ext:Localization Config028_checkWhisperAuto}" Margin="408,82,0,270" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config058_checkWhisperAutoTip}" IsChecked="{Binding General.AutoWhisper}" Foreground="#FFC8C8C8" />
                            <Label x:Name="lbStartup" Content="{ext:Localization Config024_lbStartup}" BorderThickness="0" Height="27" Margin="249,8,101,335" FontWeight="Bold"/>
                            <CheckBox x:Name="checkStartupMessage" Content="{ext:Localization Config026_checkStartupMessage}" Margin="273,38,178,316" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config056_checkStartupMessageTip}" IsChecked="{Binding General.StartupMessage}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkStashWheel" Content="Navigate Stash : CTRL + Mouse Wheel" Margin="295,59,52,295" RenderTransformOrigin="0.357,1.269" ToolTip="Allow you to navigate stash tabs with the mouse wheel." Visibility="Hidden"/>
                            <CheckBox x:Name="checkUpdate" Content="{ext:Localization Config027_checkUpdate}" Margin="408,38,0,316" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config057_checkUpdateTip}" IsChecked="{Binding General.AutoUpdate}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkFilter" Content="{ext:Localization Config154_checkFilter}" Margin="273,60,178,294" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config155_checkFilterTip}" IsChecked="{Binding General.AutoFilter}" Foreground="#FFC8C8C8" />
                            
                            <Label x:Name="lbAutoSel" Content="{ext:Localization Config029_lbAutoSel}" BorderThickness="0" Height="27" Margin="250,112,178,231" FontWeight="Bold"/>
                            <CheckBox x:Name="checkCorrupt" Content="{ext:Localization Config030_checkCorrupt}" Margin="273,183,177,170" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config059_checkCorruptTip}" IsChecked="{Binding General.CheckCorrupted}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkPseudo" Content="{ext:Localization Config032_checkPseudo}" Margin="408,163,0,192" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config061_checkPseudoTip}" IsChecked="{Binding General.CheckPseudoAffix}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkSearchType" Content="{ext:Localization Config033_checkSearchType}" Margin="273,161,177,192" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config062_checkSearchTypeTip}" IsChecked="{Binding General.ByBaseType}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkHideSameOccurs" Content="{ext:Localization Config031_checkHideSameOccurs}" Margin="408,141,0,212" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config060_checkHideSameOccursTip}" IsChecked="{Binding General.RegroupResults}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkTierMin" Content="{ext:Localization Config148_checkTierMin}" Margin="273,141,177,212" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config149_checkTierMinTip}" IsChecked="{Binding General.CheckMinTier}" Foreground="#FFC8C8C8" />

                            <CheckBox x:Name="checkTotalLife" Content="{ext:Localization Config036_checkTotalLife}" Margin="273,225,178,129" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config065_checkTotalLifeTip}" IsChecked="{Binding General.CheckTotalLife}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkGlobalEs" Content="{ext:Localization Config037_checkGlobalEs}" Margin="408,184,0,170" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config066_checkGlobalEsTip}" IsChecked="{Binding General.CheckGlobalEs}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkTotalResists" Content="{ext:Localization Config038_checkTotalResists}" Margin="408,225,0,129" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config067_checkTotalResistsTip}" IsChecked="{Binding General.CheckTotalResists}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkTotalArmourStats" Content="{ext:Localization Config035_checkTotalArmourStats}" Margin="408,204,0,151" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config064_checkTotalArmourStatsTip}" IsChecked="{Binding General.CheckTotalArmourStats}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkTotalDps" Content="{ext:Localization Config034_checkTotalDps}" Margin="273,204,177,151" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config063_checkTotalDpsTip}" IsChecked="{Binding General.CheckTotalDps}" Foreground="#FFC8C8C8" />

                            <Label x:Name="lbExplicits" Content="{ext:Localization Config039_lbExplicits}" BorderThickness="0" Height="27" Margin="250,245,0,98" FontWeight="Bold" ToolTip="{ext:Localization Config068_lbExplicitsTip}"/>
                            <CheckBox x:Name="checkExplicitsNonUniques" Content="{ext:Localization Config041_checkExplicitsNonUniques}" Margin="365,273,101,79" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config070_checkExplicitsNonUniquesTip}" IsChecked="{Binding General.CheckExplicitsNonUniques}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkExplicitsUniques" Content="{ext:Localization Config040_checkExplicitsUniques}" Margin="273,273,220,79" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config069_checkExplicitsUniquesTip}" IsChecked="{Binding General.CheckExplicitsUniques}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkCrafted" Content="{ext:Localization Config042_checkCrafted}" Margin="485,273,0,79" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config071_checkCraftedTip}" IsChecked="{Binding General.CheckCrafted}" Foreground="#FFC8C8C8" />
                            <Label x:Name="lbImplicits" Content="{ext:Localization Config043_lbImplicits}" BorderThickness="0" Height="27" Margin="250,294,0,49" FontWeight="Bold" ToolTip="{ext:Localization Config072_lbImplicitsTip}"/>
                            <CheckBox x:Name="checkImplicits" Content="{ext:Localization Config044_checkImplicits}" Margin="273,322,220,30" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config073_checkImplicitsTip}" IsChecked="{Binding General.CheckImplicits}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkEnchants" Content="{ext:Localization Config046_checkEnchants}" Margin="485,322,0,33" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config075_checkEnchantsTip}" IsChecked="{Binding General.CheckEnchants}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="checkCorruptions" Content="{ext:Localization Config045_checkCorruptions}" Margin="365,322,101,30" RenderTransformOrigin="0.357,1.269" ToolTip="{ext:Localization Config074_checkCorruptionsTip}" IsChecked="{Binding General.CheckCorruptions}" Foreground="#FFC8C8C8" />

                            <Button x:Name="btnEditor" Content="Manager" HorizontalAlignment="Left" Margin="446,1,0,348" Width="77" ToolTip="Open resources manager window" Command="{Binding Commands.OpenEditorCommand}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=checkDevmod}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=checkDevmod}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <DockPanel Margin="524,4,-1,351" ToolTip="Developer mode (unstable) : can price check without launching POE instance and disable some features.">
                                <CheckBox DockPanel.Dock="Right" x:Name="checkDevmod" RenderTransformOrigin="0.357,1.269" Margin="0,2,0,-2" IsChecked="{Binding General.DevMode}"/>
                                <TextBlock x:Name="tbDev" Text="{ext:Localization Config023_tbDev}" Width="35" Margin="0,-1,0,1" Foreground="#FFC8C8C8" TextAlignment="Right"/>
                            </DockPanel>

                            <Label x:Name="lbTip" Content="{ext:Localization Config047_lbTip}" BorderThickness="0" Height="27" Margin="-3,347,18,-4" FontStyle="Italic" Foreground="#FFC8C8C8" />
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="tabCommon" Header="{ext:Localization Config006_tabCommon}" Margin="0,1,0,-1">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}"/>
                        </TabItem.Style>
                        <Grid>
                            <Label x:Name="lbComFeatures" Content="{ext:Localization Config076_lbComFeatures}" HorizontalAlignment="Left" Margin="5,9,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="258"/>
                            <Label x:Name="lbPrice" Content="{ext:Localization Config077_lbPrice}" HorizontalAlignment="Left" Margin="133,37,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config092_lbPriceTip}" Width="151" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbPriceCheck" Margin="9,44,559,309" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.PriceCheck.IsEnable}"/>
                            <TextBox x:Name="tbPriceCheck" HorizontalAlignment="Left" Height="22" Margin="26,39,0,0" Text="{Binding CommonKeys.PriceCheck.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.PriceCheck}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <!--
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Property="IsEnabled" Value="True"></Condition>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.EnterActions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.ExitActions>
                                            </MultiDataTrigger>
                                            -->
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbPriceCheck}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbPriceCheck}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbBulkEx" Content="{ext:Localization Config078_lbBulkEx}" HorizontalAlignment="Left" Margin="133,67,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config093_lbBulkExTip}" Width="151" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbBulk" Margin="9,74,559,279" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenBulk.IsEnable}"/>
                            <TextBox x:Name="tbBulk" HorizontalAlignment="Left" Height="22" Margin="26,69,0,0" Text="{Binding CommonKeys.OpenBulk.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenBulk}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbBulk}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbBulk}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbSettingsWin" Content="{ext:Localization Config079_lbSettingsWin}" HorizontalAlignment="Left" Margin="133,97,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config094_lbSettingsWinTip}" Width="151" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbConfig" Margin="9,104,559,249" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenConfig.IsEnable}"/>
                            <TextBox x:Name="tbConfig" HorizontalAlignment="Left" Height="22" Margin="26,99,0,0"  Text="{Binding CommonKeys.OpenConfig.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenConfig}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbConfig}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbConfig}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbSyndicate" Content="{ext:Localization Config081_lbSyndicate}" HorizontalAlignment="Left" Margin="133,157,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config096_lbSyndicateTip}" Width="151" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbSyndicate" Margin="9,164,559,189" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenSyndicate.IsEnable}"/>
                            <TextBox x:Name="tbSyndicate" HorizontalAlignment="Left" Height="22" Margin="26,159,0,0"  Text="{Binding CommonKeys.OpenSyndicate.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenSyndicate}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbSyndicate}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbSyndicate}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbIncursion" Content="{ext:Localization Config082_lbIncursion}" HorizontalAlignment="Left" Margin="133,187,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config097_lbIncursionTip}" Width="151" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbIncursion" Margin="9,194,559,164" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenIncursion.IsEnable}"/>
                            <TextBox x:Name="tbIncursion" HorizontalAlignment="Left" Height="22" Margin="26,189,0,0"  Text="{Binding CommonKeys.OpenIncursion.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenIncursion}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbIncursion}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbIncursion}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbBrowser" Content="{ext:Localization Config085_lbBrowser}" HorizontalAlignment="Left" Margin="286,9,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="294"/>
                            <Label x:Name="lbWiki" Content="{ext:Localization Config086_lbWiki}" HorizontalAlignment="Left" Margin="413,37,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config099_lbWikiTip}" Width="167" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbWiki" Margin="289,44,279,309" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenWiki.IsEnable}"/>
                            <TextBox x:Name="tbWiki" HorizontalAlignment="Left" Height="22" Margin="306,39,0,0" Text="{Binding CommonKeys.OpenWiki.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenWiki}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbWiki}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbWiki}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbNinja" Content="{ext:Localization Config087_lbNinja}" HorizontalAlignment="Left" Margin="413,67,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config100_lbNinjaTip}" Width="167" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbNinja" Margin="289,74,279,279" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenNinja.IsEnable}"/>
                            <TextBox x:Name="tbNinja" HorizontalAlignment="Left" Height="22" Margin="306,69,0,0" Text="{Binding CommonKeys.OpenNinja.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenNinja}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbNinja}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbNinja}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <CheckBox x:Name="cbLab" Margin="289,104,279,249" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenPoeLab.IsEnable}"/>
                            <TextBox x:Name="tbLab" HorizontalAlignment="Left" Height="22" Margin="306,99,0,0" Text="{Binding CommonKeys.OpenPoeLab.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenPoeLab}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLab}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLab}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbLab" Content="{ext:Localization Config088_lbLab}" HorizontalAlignment="Left" Margin="413,97,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config101_lbLabTip}" Width="167" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbPoeDb" Margin="289,134,279,219" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenPoeDb.IsEnable}"/>
                            <TextBox x:Name="tbPoeDb" HorizontalAlignment="Left" Height="22" Margin="306,129,0,0" Text="{Binding CommonKeys.OpenPoeDb.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenPoeDb}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbPoeDb}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbPoeDb}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbData" Content="{ext:Localization Config089_lbData}" HorizontalAlignment="Left" Margin="413,127,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config102_lbDataTip}" Width="167" Foreground="#FFC8C8C8" />
                            <Label x:Name="lbCloseWin" Content="{ext:Localization Config080_lbCloseWin}" HorizontalAlignment="Left" Margin="133,127,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config095_lbCloseWinTip}" Width="151" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbClose" Margin="9,134,559,219" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.CloseWindow.IsEnable}"/>
                            <TextBox x:Name="tbClose" HorizontalAlignment="Left" Height="22" Margin="26,129,0,0"  Text="{Binding CommonKeys.CloseWindow.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.CloseWindow}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbClose}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbClose}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbAdmin" Content="{ext:Localization Config083_lbAdmin}" HorizontalAlignment="Left" Margin="4,222,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="280"/>
                            <Label x:Name="lbTcp" Content="{ext:Localization Config084_lbTcp}" HorizontalAlignment="Left" Margin="133,247,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config098_lbTcpTip}" Width="158" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbTcpLogout" Margin="9,254,559,99" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.TcpLogout.IsEnable}"/>
                            <TextBox x:Name="tbTcpLogout" HorizontalAlignment="Left" Height="22" Margin="26,249,0,0" Text="{Binding CommonKeys.TcpLogout.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.TcpLogout}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbTcpLogout}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbTcpLogout}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbCustom1" Content="{ext:Localization Config090_lbCustom1}" HorizontalAlignment="Left" Margin="413,157,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config103_lbCustom1Tip}" Width="167" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbLink1" Margin="289,164,279,189" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenCustomFirst.IsEnable}"/>
                            <TextBox x:Name="tbLink1" HorizontalAlignment="Left" Height="22" Margin="306,159,0,0" Text="{Binding CommonKeys.OpenCustomFirst.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenCustomFirst}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLink1}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLink1}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="tbLink1Value" HorizontalAlignment="Left" Height="22" Margin="306,185,0,0" Text="{Binding CommonKeys.OpenCustomFirst.Val}" VerticalAlignment="Top" Width="248" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLink1}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLink1}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbCustom2" Content="{ext:Localization Config091_lbCustom2}" HorizontalAlignment="Left" Margin="413,217,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config104_lbCustom2Tip}" Width="167" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbLink2" Margin="289,224,279,129" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding CommonKeys.OpenCustomSecond.IsEnable}"/>
                            <TextBox x:Name="tbLink2" HorizontalAlignment="Left" Height="22" Margin="306,219,0,0" Text="{Binding CommonKeys.OpenCustomSecond.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding CommonKeys.OpenCustomSecond}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLink2}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLink2}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="tbLink2Value" HorizontalAlignment="Left" Height="22" Margin="306,245,0,0" Text="{Binding CommonKeys.OpenCustomSecond.Val}" VerticalAlignment="Top" Width="247" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLink2}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLink2}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="tabAdd" Header="{ext:Localization Config007_tabAdd}" Margin="0,1,0,-1">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}"/>
                        </TabItem.Style>
                        <Grid x:Name="patronGrid">
                            <!--
                        <circle cx="362.589996" cy="204.589996" data-fill="1" r="204.589996">
                        -->
                            <Grid Margin="18,10,533,337" Visibility="Hidden">
                                <Rectangle Fill="#FF241E12" HorizontalAlignment="Left" Height="20" Margin="0,0,0,0" VerticalAlignment="Top" Width="4"/>
                                <Ellipse Fill="#FFE85B46" HorizontalAlignment="Left" Height="15" Margin="6,0,0,0" VerticalAlignment="Top" Width="15"/>
                            </Grid>
                            <Label x:Name="lbChatKey" Content="{ext:Localization Config105_lbChatKey}" HorizontalAlignment="Left" Margin="133,7,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config118_lbChatKeyTip}" FontWeight="Bold" Width="174"/>
                            <TextBox x:Name="tbChatKey" HorizontalAlignment="Left" Height="22" Margin="26,9,0,0" Text="{Binding AdditionalKeys.ChatKey.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.ChatKey}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Button x:Name="btnList" Content="{ext:Localization Config110_btnList}" HorizontalAlignment="Left" Margin="224,157,0,186" Width="77" Height="27" FontWeight="Bold" Command="{Binding Commands.OpenChatCommandsListCommand}" ToolTip="{ext:Localization Config123_btnListTip}" Foreground="#FFC8C8C8" />
                            <Label x:Name="lbHideout" Content="{ext:Localization Config106_lbHideout}" HorizontalAlignment="Left" Margin="133,37,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config119_lbHideoutTip}" Width="174" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbHideout" Margin="9,44,559,309" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.Hideout.IsEnable}"/>
                            <TextBox x:Name="tbHideout" HorizontalAlignment="Left" Height="22" Margin="26,39,0,0" Text="{Binding AdditionalKeys.Hideout.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.Hideout}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbHideout}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbHideout}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbPaste" Content="{ext:Localization Config108_lbPaste}" HorizontalAlignment="Left" Margin="133,97,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config121_lbPasteTip}" Width="174" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbWhisper" Margin="9,104,559,249" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.PasteWhisper.IsEnable}"/>
                            <TextBox x:Name="tbWhisper" HorizontalAlignment="Left" Height="22" Margin="26,99,0,0" Text="{Binding AdditionalKeys.PasteWhisper.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.PasteWhisper}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbWhisper}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbWhisper}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <CheckBox x:Name="cbCharSelect" Margin="9,74,559,279" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.CharSelection.IsEnable}"/>
                            <TextBox x:Name="tbCharSelect" HorizontalAlignment="Left" Height="22" Margin="26,69,0,0" Text="{Binding AdditionalKeys.CharSelection.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.CharSelection}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbCharSelect}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbCharSelect}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbExit" Content="{ext:Localization Config109_lbExit}" HorizontalAlignment="Left" Margin="133,67,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config122_lbExitTip}" Width="174" Foreground="#FFC8C8C8" />

                            <Label x:Name="lbAction" Content="{ext:Localization Config111_lbAction}" HorizontalAlignment="Left" Margin="5,223,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="302"/>
                            <CheckBox x:Name="cbInvLast" Margin="9,254,559,97" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.InviteLast.IsEnable}"/>
                            <TextBox x:Name="tbInvLast" HorizontalAlignment="Left" Height="22" Margin="26,249,0,0" Text="{Binding AdditionalKeys.InviteLast.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.InviteLast}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbInvLast}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbInvLast}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbWhisperInvite" Content="Invite" HorizontalAlignment="Left" Margin="133,247,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config129_lbWhisperInviteTip}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbTradeLast" Margin="9,284,559,69" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.TradeLast.IsEnable}"/>
                            <TextBox x:Name="tbTradeLast" HorizontalAlignment="Left" Height="22" Margin="26,279,0,0" Text="{Binding AdditionalKeys.TradeLast.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.TradeLast}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbTradeLast}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbTradeLast}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbWhisperTrade" Content="Trade" HorizontalAlignment="Left" Margin="133,277,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config130_lbWhisperTradeTip}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbWhoisLast" Margin="9,314,559,39" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.WhoisLast.IsEnable}"/>
                            <TextBox x:Name="tbWhoisLast" HorizontalAlignment="Left" Height="22" Margin="26,309,0,0" Text="{Binding AdditionalKeys.WhoisLast.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.WhoisLast}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbWhoisLast}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbWhoisLast}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbWhisperWhois" Content="Whois" HorizontalAlignment="Left" Margin="133,307,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config131_lbWhisperWhoisTip}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbReplyLast" Margin="9,344,559,9" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.ReplyLast.IsEnable}"/>
                            <TextBox x:Name="tbReplyLast" HorizontalAlignment="Left" Height="22" Margin="26,339,0,0" Text="{Binding AdditionalKeys.ReplyLast.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.ReplyLast}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbReplyLast}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbReplyLast}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbWhisperReply" Content="Reply : " HorizontalAlignment="Left" Margin="133,337,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config132_lbWhisperReplyTip}" Foreground="#FFC8C8C8" />
                            <TextBox x:Name="tbReplyLastVal" HorizontalAlignment="Left" Height="22" Margin="181,339,0,0" Text="{Binding AdditionalKeys.ReplyLast.Val}" VerticalAlignment="Top" Width="116" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbReplyLast}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbReplyLast}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <CheckBox x:Name="cbTradeChan" Margin="312,14,256,341" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.TradeChan.IsEnable}"/>
                            <TextBox x:Name="tbTradeChan" HorizontalAlignment="Left" Height="22" Margin="329,9,0,0" Text="{Binding AdditionalKeys.TradeChan.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.TradeChan}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbTradeChan}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbTradeChan}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbJoinTrade" Content="{ext:Localization Config112_lbJoinTrade}" HorizontalAlignment="Left" Margin="436,7,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config124_lbJoinTradeTip}" Foreground="#FFC8C8C8" />
                            <TextBox x:Name="tbTradeChanVal" HorizontalAlignment="Left" Height="22" Margin="537,9,0,0" Text="{Binding AdditionalKeys.TradeChan.Val}" VerticalAlignment="Top" Width="35" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbTradeChan}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbTradeChan}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <CheckBox x:Name="cbGlobalChan" Margin="312,44,256,309" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.GlobalChan.IsEnable}"/>
                            <TextBox x:Name="tbGlobalChan" HorizontalAlignment="Left" Height="22" Margin="329,39,0,0" Text="{Binding AdditionalKeys.GlobalChan.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.GlobalChan}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbGlobalChan}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbGlobalChan}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbJoinGlobal" Content="{ext:Localization Config113_lbJoinGlobal}" HorizontalAlignment="Left" Margin="436,37,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config125_lbJoinGlobalTip}" Foreground="#FFC8C8C8" Width="101" />
                            <TextBox x:Name="tbGlobalChanVal" HorizontalAlignment="Left" Height="22" Margin="537,39,0,0" Text="{Binding AdditionalKeys.GlobalChan.Val}" VerticalAlignment="Top" Width="35" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbGlobalChan}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbGlobalChan}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <Label x:Name="lbActionGroup" Content="{ext:Localization Config117_lbActionGroup}" HorizontalAlignment="Left" Margin="308,253,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="264"/>
                            <Label x:Name="lbGroupInvite" Content="Invite" HorizontalAlignment="Left" Margin="436,277,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config133_lbGroupInviteTip}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbInvite" Margin="312,284,256,69" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.PartyInvite.IsEnable}"/>
                            <TextBox x:Name="tbInvite" HorizontalAlignment="Left" Height="22" Margin="329,279,0,0" Text="{Binding AdditionalKeys.PartyInvite.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.PartyInvite}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbInvite}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbInvite}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="tbInvite2" HorizontalAlignment="Left" Height="22" Margin="481,279,0,0" Text="{Binding AdditionalKeys.PartyInvite.Val}" VerticalAlignment="Top" Width="91" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbInvite}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbInvite}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbGroupKick" Content="Kick" HorizontalAlignment="Left" Margin="436,307,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config134_lbGroupKickTip}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbKick" Margin="312,314,256,39" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.PartyKick.IsEnable}"/>
                            <TextBox x:Name="tbKick" HorizontalAlignment="Left" Height="22" Margin="329,309,0,0" Text="{Binding AdditionalKeys.PartyKick.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.PartyKick}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbKick}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbKick}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="tbKick2" HorizontalAlignment="Left" Height="22" Margin="481,309,0,0" Text="{Binding AdditionalKeys.PartyKick.Val}" VerticalAlignment="Top" Width="91" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbKick}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbKick}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbGroupLeave" Content="Leave" HorizontalAlignment="Left" Margin="436,337,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config135_lbGroupLeaveTip}" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbLeave" Margin="312,344,256,14" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.PartyLeave.IsEnable}"/>
                            <TextBox x:Name="tbLeave" HorizontalAlignment="Left" Height="22" Margin="329,339,0,0" Text="{Binding AdditionalKeys.PartyLeave.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.PartyLeave}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLeave}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLeave}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="tbLeave2" HorizontalAlignment="Left" Height="22" Margin="481,339,0,0" Text="{Binding AdditionalKeys.PartyLeave.Val}" VerticalAlignment="Top" Width="91" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLeave}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbLeave}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbAfk" Content="{ext:Localization Config114_lbAfk}" HorizontalAlignment="Left" Margin="436,67,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config126_lbAfkTip}" Width="144" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbAfk" Margin="312,74,256,279" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.SetAfk.IsEnable}"/>
                            <TextBox x:Name="tbAfk" HorizontalAlignment="Left" Height="22" Margin="329,69,0,0" Text="{Binding AdditionalKeys.SetAfk.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.SetAfk}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbAfk}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbAfk}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="tbAfkValue" HorizontalAlignment="Left" Height="22" Margin="329,95,0,0" Text="{Binding AdditionalKeys.SetAfk.Val}" VerticalAlignment="Top" Width="243" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbAfk}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbAfk}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbAutoReply" Content="{ext:Localization Config115_lbAutoReply}" HorizontalAlignment="Left" Margin="436,127,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config127_lbAutoReplyTip}" Width="144" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbAutoreply" Margin="312,134,256,219" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.SetAutoReply.IsEnable}"/>
                            <TextBox x:Name="tbAutoReply" HorizontalAlignment="Left" Height="22" Margin="329,129,0,0" Text="{Binding AdditionalKeys.SetAutoReply.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.SetAutoReply}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbAutoreply}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbAutoreply}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="tbAutoReplyValue" HorizontalAlignment="Left" Height="22" Margin="329,155,0,0" Text="{Binding AdditionalKeys.SetAutoReply.Val}" VerticalAlignment="Top" Width="243" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbAutoreply}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbAutoreply}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <CheckBox x:Name="cbDnd" Margin="312,194,256,159" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.SetDnd.IsEnable}"/>
                            <TextBox x:Name="tbDnd" HorizontalAlignment="Left" Height="22" Margin="329,189,0,0" Text="{Binding AdditionalKeys.SetDnd.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.SetDnd}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbDnd}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbDnd}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="tbDndValue" HorizontalAlignment="Left" Height="22" Margin="329,215,0,0" Text="{Binding AdditionalKeys.SetDnd.Val}" VerticalAlignment="Top" Width="243" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Left">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbDnd}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbDnd}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Label x:Name="lbDnd" Content="{ext:Localization Config116_lbDnd}" HorizontalAlignment="Left" Margin="436,187,0,0" VerticalAlignment="Top" ToolTip="{ext:Localization Config128_lbDndTip}" Width="144" Foreground="#FFC8C8C8" />
                            <CheckBox x:Name="cbChat1" Margin="9,134,559,219" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.ChatCommandFirst.IsEnable}"/>
                            <TextBox x:Name="tbChat1" HorizontalAlignment="Left" Height="22" Margin="26,129,0,0" Text="{Binding AdditionalKeys.ChatCommandFirst.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.ChatCommandFirst}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat1}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat1}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <ComboBox x:Name="comboChat1" Height="22" Margin="138,129,363,219" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" ItemsSource="{Binding AdditionalKeys.ChatCommandFirst.List}" SelectedIndex="{Binding AdditionalKeys.ChatCommandFirst.ListIndex}">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat1}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat1}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <CheckBox x:Name="cbChat2" Margin="9,165,559,189" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.ChatCommandSecond.IsEnable}"/>
                            <TextBox x:Name="tbChat2" HorizontalAlignment="Left" Height="22" Margin="26,159,0,0" Text="{Binding AdditionalKeys.ChatCommandSecond.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.ChatCommandSecond}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat2}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat2}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <ComboBox x:Name="comboChat2" Height="22" Margin="138,159,363,189" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" ItemsSource="{Binding AdditionalKeys.ChatCommandSecond.List}" SelectedIndex="{Binding AdditionalKeys.ChatCommandSecond.ListIndex}">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat2}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat2}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <CheckBox x:Name="cbChat3" Margin="9,194,559,160" RenderTransformOrigin="0.357,1.269" IsChecked="{Binding AdditionalKeys.ChatCommandThird.IsEnable}"/>
                            <TextBox x:Name="tbChat3" HorizontalAlignment="Left" Height="22" Margin="26,189,0,0" Text="{Binding AdditionalKeys.ChatCommandThird.Hotkey}" VerticalAlignment="Top" Width="106" Tag="textbox" FontFamily="Arial" HorizontalContentAlignment="Center" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewKeyDown">
                                        <c:AdvancedInvokeCommandAction Command="{Binding Commands.CheckHotkeyCommand}" CommandParameter="{Binding AdditionalKeys.ChatCommandThird}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat3}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat3}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <ComboBox x:Name="comboChat3" Height="22" Margin="138,189,363,159" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" ItemsSource="{Binding AdditionalKeys.ChatCommandThird.List}" SelectedIndex="{Binding AdditionalKeys.ChatCommandThird.ListIndex}">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat3}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=cbChat3}" Value="False">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource WindowBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource DarkBackgroundColor}" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="tabHelp" Header="{ext:Localization Config008_tabHelp}" Margin="0,1,0,-1">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}"/>
                        </TabItem.Style>
                        <Grid>
                            <Label x:Name="lbHelp1" Content="{ext:Localization Config136_lbHelp1}" HorizontalAlignment="Left" Margin="5,14,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="565"/>
                            <Label x:Name="lbHelp2" Content="{ext:Localization Config137_lbHelp2}" HorizontalAlignment="Left" Margin="156,57,0,0" VerticalAlignment="Top" Width="414"/>
                            <Button x:Name="btnGithub" HorizontalAlignment="Left" FontWeight="Bold" Margin="31,52,0,283" Width="115" Height="35" Command="{Binding Commands.OpenGitHubIssueCommand}" ToolTip="{ext:Localization Config144_btnGithubTip}">
                                <Grid Margin="0,0,0,0" Width="110">
                                    <Image x:Name="imgGithub" Height="25" Margin="15,1,68,2" Source="{StaticResource ImgGithub}"/>
                                    <Label Content="Github" HorizontalAlignment="Left" Margin="43,-1,0,0" VerticalAlignment="Top" FontSize="14" Width="55"/>
                                </Grid>
                            </Button>
                            <TextBlock x:Name="tbIssues" Text="{ext:Localization Config138_tbIssues}" Margin="32,97,10,221" TextWrapping="Wrap" Foreground="#FFC8C8C8" />

                            <Label x:Name="lbHelp3" Content="{ext:Localization Config139_lbHelp3}" HorizontalAlignment="Left" Margin="5,154,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="565"/>
                            <Label x:Name="lbHelp4" Content="{ext:Localization Config140_lbHelp4}" HorizontalAlignment="Left" Margin="156,202,0,0" VerticalAlignment="Top" Width="414"/>
                            <Button x:Name="btnDonate" HorizontalAlignment="Left" FontWeight="Bold" Margin="31,196,0,139" Width="115" Height="35" Command="{Binding Commands.OpenPaypalCommand}" ToolTip="{ext:Localization Config145_btnDonateTip}">
                                <Grid Margin="0,0,0,0" Width="110">
                                    <Image x:Name="imgPaypal" Source="{StaticResource ImgPaypal}" Height="25" Margin="15,1,68,2"/>
                                    <Label Content="Paypal" HorizontalAlignment="Left" Margin="43,-1,0,0" VerticalAlignment="Top" FontSize="14" Width="55"/>
                                </Grid>
                            </Button>
                            <Label x:Name="lbHelp7" Content="{ext:Localization Config152_lbHelp7}" HorizontalAlignment="Left" Margin="156,246,0,0" VerticalAlignment="Top" Width="414" Visibility="Visible"/>
                            <Button x:Name="btnDiscord"  HorizontalAlignment="Left" Margin="31,240,0,95" Width="115" Height="35" FontWeight="Bold" Command="{Binding Commands.OpenDiscordCommand}" ToolTip="{ext:Localization Config153_btnDiscordTip}" Visibility="Visible">
                                <Grid Margin="0,0,0,0" Width="110">
                                    <Image x:Name="imgDiscord" Source="{StaticResource ImgDiscord}" Height="25" Margin="7,1,76,2"/>
                                    <Label Content="Discord" HorizontalAlignment="Left" Margin="33,-1,0,0" VerticalAlignment="Top" FontSize="14" Width="75"/>
                                </Grid>
                            </Button>
                            <Label x:Name="lbHelp5" Content="{ext:Localization Config141_lbHelp5}" HorizontalAlignment="Left" Margin="156,246,0,0" VerticalAlignment="Top" Width="414" Visibility="Hidden"/>
                            <Button x:Name="btnLiberapay"  HorizontalAlignment="Left" Margin="31,240,0,95" Width="115" Height="35" FontWeight="Bold" Command="{Binding Commands.OpenLiberapayCommand}" ToolTip="{ext:Localization Config146_btnLiberapayTip}" Visibility="Hidden">
                                <Grid Margin="0,0,0,0" Width="110">
                                    <Image x:Name="imgLiberapay" Source="pack://application:,,,/XileTrade;component/Img/liberapay.png" Height="25" Margin="7,1,76,2"/>
                                    <Label Content="Liberapay" HorizontalAlignment="Left" Margin="33,-1,0,0" VerticalAlignment="Top" FontSize="14" Width="75"/>
                                </Grid>
                            </Button>
                            <!--
                            <Label x:Name="lbHelp6" Content="{ext:Localization Config142_lbHelp6}" HorizontalAlignment="Left" Margin="5,293,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="265"/>
                            <TextBlock x:Name="tbHelp" Text="{ext:Localization Config143_tbHelp}" Margin="32,326,10,3" TextWrapping="Wrap" Foreground="#FFC8C8C8" />
                            -->
                            <!--
                            <Grid Visibility="Hidden">
                                <Label Content="Xiletrade thanks his patrons by giving some privileges, how to get them :" HorizontalAlignment="Left" Margin="5,152,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
                                <Label Content="1) Make sure you will use this computer and Get your ID : " HorizontalAlignment="Left" Margin="27,186,0,0" VerticalAlignment="Top"/>
                                <Button x:Name="btnId" ToolTipService.ShowDuration="30000" Content="Generate and Copy to clipboard" HorizontalAlignment="Left" Margin="360,185,0,158" Width="201" Height="27" FontWeight="Bold" Click="Generate">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            <TextBlock>
                                        If you are validated, a SINGLE CODE will be sent on patreon with current month validity (renewed each month following your contribution).
                                        <LineBreak /> Make sure to use this computer during the validity period, remember to send your new ID before the start of a new month if you change your computer. 
                                        <LineBreak /> An account system will be put in place if enough people contribute to this project.
                                            </TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="2) Paste from clipboard and send your ID using memberships management :" HorizontalAlignment="Left" Margin="27,216,0,0" VerticalAlignment="Top"/>
                                <Button x:Name="btnMembership" Content="Send message" HorizontalAlignment="Left" Margin="465,216,0,127" Width="95" Height="27" FontWeight="Bold" Click="SendID" ToolTip="Find and choose Xiletrade's patron"/>
                                <TextBox x:Name="tbCode" HorizontalAlignment="Left" Height="34" Margin="84,275,0,0"  Text="" VerticalAlignment="Top" Width="331" Tag="textbox" Foreground="LimeGreen" FontFamily="Consolas" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" TextWrapping="Wrap" MaxLength="95" TextChanged="ChangeCode"/>
                                <Button x:Name="btnSaveCode" Content="Save code and Exit" HorizontalAlignment="Left" Margin="438,279,0,64" Width="121" Height="27" FontWeight="Bold" Click="SaveCode" ToolTip="New code will erase older one."/>


                                <Label Content="3) Put the code given by the author in that data field, save and restart Xiletrade." HorizontalAlignment="Left" Margin="27,244,0,0" VerticalAlignment="Top"/>
                                <Label Content="4) After restart, check your status right below." HorizontalAlignment="Left" Margin="27,312,0,0" VerticalAlignment="Top"/>
                                <Label Content="Status :" HorizontalAlignment="Left" Margin="5,342,0,0" VerticalAlignment="Top" Foreground="#FF22F00D"/>
                                <Label x:Name="lblStatus" Content="You do not have patron's privileges" HorizontalAlignment="Left" Margin="52,342,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
                            </Grid>
                            -->
                        </Grid>
                    </TabItem>
                </TabControl>

            </Grid>
            <Button x:Name="btnSave" Content="{ext:Localization Config002_btnSave}" HorizontalAlignment="Left" Margin="101,443,0,10"  Width="120" Height="27" FontWeight="Bold" Command="{Binding Commands.SaveConfigCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
            <Button x:Name="btnLoad" Content="{ext:Localization Config003_btnLoad}" HorizontalAlignment="Left" Margin="249,443,0,10"  Width="120" Height="27" FontWeight="Bold" Command="{Binding Commands.LoadDefaultConfigCommand}" />
            <Button x:Name="btnClose" Content="{ext:Localization Config004_btnClose}" HorizontalAlignment="Left" Margin="395,443,0,10" Width="120" Height="27" FontWeight="Bold" Command="{Binding Commands.CloseConfigCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
        </Grid>
    </Grid>
</view:ViewBase>
