<view:ViewBase x:Class="Xiletrade.Views.MainView"    
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:t="clr-namespace:Xiletrade.Library.ViewModels.Main;assembly=Xiletrade.Library"
        xmlns:ext="clr-namespace:Xiletrade.Util.Extensions"
        xmlns:view="clr-namespace:Xiletrade.Views"
        xmlns:help="clr-namespace:Xiletrade.Util.Helper"
        xmlns:uc="clr-namespace:Xiletrade.UserControls.Main"
        d:DataContext="{d:DesignInstance Type=t:MainViewModel}"
        mc:Ignorable="d" ResizeMode="NoResize" Left="30" Top="30" x:Name="myWindow" Topmost="True"
        Title="XileTrade" Width="550" Height="664" WindowStartupLocation="CenterScreen" WindowStyle="None"
        Foreground="{StaticResource ForegroundBrush}" FontFamily="Malgun Gothic" FontSize="12"
        AllowsTransparency="True" Background="Transparent" Opacity="1"
        RenderTransformOrigin="0.5,0.5" Visibility="Hidden" d:Visibility="Visible">
    <view:ViewBase.Style>
        <Style TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Form.Minimized}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="664" To="130" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="130" To="664" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </view:ViewBase.Style>
    <view:ViewBase.Resources>
        <SolidColorBrush x:Key="ButtonMouse" Color="{StaticResource ButtonMouseColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="ButtonMouseDown" Color="{StaticResource ButtonMouseDownColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="ButtonMouseLeave" Color="{StaticResource LightBackgroundColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="LightBg" Color="{StaticResource LightBackgroundColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="HotBg" Color="{StaticResource HotColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="DarkBg" Color="{StaticResource DarkBackgroundColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="Dark2Bg" Color="{StaticResource WindowBackgroundColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="RedBg" Color="{StaticResource RedColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="GrayBg" Color="{StaticResource GrayColor}" Opacity="{Binding Form.Opacity}" />
    </view:ViewBase.Resources>
    <view:ViewBase.RenderTransform>
        <TransformGroup>
            <ScaleTransform x:Name="WindowScaleTransform"/>
        </TransformGroup>
    </view:ViewBase.RenderTransform>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Command="{Binding Commands.WindowLoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Commands.WindowClosedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Commands.WindowDeactivatedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Commands.WindowActivatedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Border Margin="0,0,0,0" Background="Transparent" BorderBrush="{StaticResource DarkBg}" BorderThickness="2" CornerRadius="3">
        <Grid x:Name="gridMain" Margin="0,0,0,0" Background="{StaticResource Dark2Bg}">
            <!-- Generate non-blocking error 40 BindingExpression on launch : instantiation order -->
            <tb:TaskbarIcon IconSource="pack://application:,,,/Xiletrade;component/Assets/AppIcon.ico" Visibility="Visible" DataContext="{Binding}">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu Placement="Mouse">
                        <MenuItem Header="{ext:Localization Main146_TrayAbout}" Height="22" Command="{Binding TrayCommands.OpenAboutCommand}"/>
                        <MenuItem Header="{ext:Localization Main199_CheckUpdate}" Height="22" Command="{Binding TrayCommands.CheckUpdateCommand}"/>
                        <MenuItem Header="{ext:Localization Main147_TraySettings}" Height="22" Command="{Binding TrayCommands.OpenConfigCommand}"/>
                        <MenuItem Header="{ext:Localization Main148_TrayClose}" Height="22" Command="{Binding TrayCommands.CloseApplicationCommand}" CommandParameter="terminate"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
                <tb:TaskbarIcon.TrayToolTip>
                    <Border Opacity="1" Background="#FF333333" BorderBrush="#FF555555" BorderThickness="2" CornerRadius="4">
                        <Grid>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding NotifyName}" Margin="5,5,5,5" Foreground="White" FontSize="10" FontFamily="{StaticResource LithosProRegular}"/>
                        </Grid>
                    </Border>
                </tb:TaskbarIcon.TrayToolTip>
            </tb:TaskbarIcon>
            <Grid Margin="28,-11,464,621" RenderTransformOrigin="0,0.5" Panel.ZIndex="2" Visibility="Hidden">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.4" ScaleY="0.4"/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Ellipse HorizontalAlignment="Left" VerticalAlignment="Center"  Stroke="White" Height="40" Width="40" StrokeThickness="2" Margin="3,0,0,0"/>
                <Rectangle HorizontalAlignment="Left" Height="36" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="19,0,0,0"/>
                <Rectangle HorizontalAlignment="Left" Height="35" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="29,0,0,0"/>
                <Rectangle HorizontalAlignment="Left" Height="28" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="35,0,0,0"/>
            </Grid>
            <Expander x:Name="expandOptions" Header="" HorizontalAlignment="Left" Height="25" Margin="7,2,0,0" VerticalAlignment="Top" Background="Transparent" Panel.ZIndex="1" ToolTip="{ext:Localization Main150_expandOptionsTip}" IsExpanded="{Binding Form.Expander.IsExpanded}" Width="{Binding Form.Expander.Width}">
                <!-- d:Width="214"-->
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Expanded">
                        <i:InvokeCommandAction Command="{Binding Commands.ExpanderExpandCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Collapsed">
                        <i:InvokeCommandAction Command="{Binding Commands.ExpanderCollapseCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid  Margin="0,-23,0,-2" Width="184" HorizontalAlignment="Right">
                    <Grid Margin="-5,-13,127,-11" RenderTransformOrigin="0,0.5" Panel.ZIndex="2" Visibility="Visible">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.4" ScaleY="0.4"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Ellipse HorizontalAlignment="Left" VerticalAlignment="Center"  Stroke="White" Height="40" Width="40" StrokeThickness="2" Margin="2,0,0,0"/>
                        <Rectangle HorizontalAlignment="Left" Height="36" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="19,0,0,0"/>
                        <Rectangle HorizontalAlignment="Left" Height="32" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="29,0,0,0"/>
                    </Grid>
                    <TextBlock x:Name="txtOpacity" d:Text="100%" Text="{Binding Form.OpacityText}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="31" FontSize="10"  Height="12" Foreground="White" Panel.ZIndex="2" TextAlignment="Right" Margin="58,-2,0,0" />
                    <Slider x:Name="slideOpacity" HorizontalAlignment="Left" VerticalAlignment="Center" Width="44" IsSnapToTickEnabled="True" Margin="12,-2,0,0" Cursor="Arrow" Maximum="100" LargeChange="5" SmallChange="1" Value="{Binding Form.Opacity, Converter={StaticResource multiplyConverter}}" Minimum="30" ToolTip="{ext:Localization Main152_slideOpacityTip}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding Commands.UpdateOpacityCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>

                    <CheckBox x:Name="cbAutoclose" HorizontalAlignment="Left" Margin="95,-3,0,0" VerticalAlignment="Center" Width="94" Visibility="Visible" Height="14" ToolTip="{ext:Localization Main151_cbAutocloseTip}" IsChecked="{Binding Form.AutoClose}" Command="{Binding Commands.AutoCloseCommand}">
                        <TextBlock x:Name="tbAutoClose" Text="{ext:Localization Main101_btnCloseAuto}" VerticalAlignment="Top" FontSize="8" Width="78" Foreground="White" Height="9" Margin="0,3,0,0"/>
                    </CheckBox>
                </Grid>
            </Expander>

            <Label Content="XileTrade" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="16" FontFamily="{StaticResource LithosProRegular}" FontWeight="Bold"/>
            <TextBlock x:Name="tbPriceTime" d:Text="time" HorizontalAlignment="Right" VerticalAlignment="Top" RenderTransformOrigin="0.571,2.792" FontFamily="Consolas" FontSize="10" Foreground="#FFB2B0B0" Margin="0,6,78,0" Text="{Binding Form.FillTime}"/>
            <Button x:Name="btnReduce" HorizontalAlignment="Left" Margin="476,-2,0,0" VerticalAlignment="Top" Width="34" Height="28">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Commands.UpdateMinimizedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource GrayBg}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Background" Value="{StaticResource DarkBg}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <Rectangle x:Name="btnReduceShape" Stroke="White" StrokeThickness="2" Width="12" Height="2">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Form.Minimized}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="2" To="14" Duration="0:0:0.1"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" From="12" To="20" Duration="0:0:0.1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="14" To="2" Duration="0:0:0.2"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" From="20" To="12" Duration="0:0:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <!-- d:Width="12" d:Height="2"-->
                </Button.Content>
            </Button>
            <Button x:Name="btnExit" HorizontalAlignment="Left" Margin="513,-2,0,0" VerticalAlignment="Top" Width="34" Height="28" Command="{Binding TrayCommands.CloseApplicationCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource RedBg}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Background" Value="{StaticResource DarkBg}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <Grid>
                        <Rectangle Width="12" Height="2" Stroke="White" StrokeThickness="2">
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="-45"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                        <Rectangle Width="12" Height="2" Stroke="White" StrokeThickness="2">
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="45"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                    </Grid>
                </Button.Content>
            </Button>
            <Grid Margin="12,30,12,10">
                <TextBlock x:Name="tkItemName" Panel.ZIndex="2" HorizontalAlignment="Left" Margin="4,4,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20" Width="Auto" d:Foreground="LimeGreen" FontFamily="{StaticResource LithosProRegular}" FontWeight="ExtraBlack" d:Text="Item Name" Text="{Binding Form.ItemName}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Foreground" Value="White"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Form.ItemNameColor}" Value="Gold">
                                    <Setter Property="Foreground" Value="Gold"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Form.ItemNameColor}" Value="DeepSkyBlue">
                                    <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Form.ItemNameColor}" Value="Green">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Form.ItemNameColor}" Value="Peru">
                                    <Setter Property="Foreground" Value="Peru"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock x:Name="tkBaseType" Panel.ZIndex="2" HorizontalAlignment="Left" Margin="6,29,0,0" TextWrapping="Wrap" d:FontSize="16" VerticalAlignment="Top" Width="Auto" FontFamily="{StaticResource LithosProRegular}" FontWeight="Bold"  Height="32" d:Text="base type" Text="{Binding Form.ItemBaseType}" FontSize="{Binding Form.BaseTypeFontSize}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Foreground" Value="#FFDBDCDC"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Form.ItemBaseTypeColor}" Value="Teal">
                                    <Setter Property="Foreground" Value="Teal"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Form.ItemBaseTypeColor}" Value="Moccasin">
                                    <Setter Property="Foreground" Value="Moccasin"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <StackPanel Height="20" Margin="7,60,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal">
                    <Button x:Name="btnWiki" Margin="0,0,12,0" Content="Wiki" Height="20" Width="46" Command="{Binding Commands.OpenWikiCommand}" FontFamily="{StaticResource LithosProRegular}" ToolTip="{ext:Localization Main106_btnWikiTip}" Visibility="{Binding Form.Visible.Wiki, Converter={StaticResource bool2VisibilityConverter}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="false">
                                        <Setter Property="Foreground" Value="#FFB2B0B0"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="{StaticResource LimeGreenBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnPoedb" Margin="0,0,12,0" Content="db" Height="20" Width="35" Command="{Binding Commands.OpenPoeDbCommand}" FontFamily="{StaticResource LithosProRegular}" ToolTip="{ext:Localization Main185_btnDbTip}" Visibility="{Binding Form.Visible.BtnPoeDb, Converter={StaticResource bool2VisibilityConverter}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="false">
                                        <Setter Property="Foreground" Value="#FFB2B0B0"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="{StaticResource LimeGreenBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnNinja" Height="20" d:Width="90" Command="{Binding Commands.OpenNinjaCommand}" ToolTip="{ext:Localization Main105_btnNinjaTip}" Width="{Binding Ninja.BtnWidth}" Visibility="{Binding Form.Visible.Ninja, Converter={StaticResource bool2VisibilityConverter}}">
                        <Grid Margin="0,0,0,0" Width="119">
                            <TextBlock x:Name="lbNinja" Text="ninja:" HorizontalAlignment="Left" VerticalAlignment="Center" Width="55" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Margin="-2,0,0,0" Height="14">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnNinja}" Value="false">
                                                <Setter Property="Foreground" Value="#FFB2B0B0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnNinja}" Value="true">
                                                <Setter Property="Foreground" Value="{StaticResource LimeGreenBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock x:Name="valNinja" d:Text="x" HorizontalAlignment="Left" VerticalAlignment="Center" d:Width="72" FontFamily="Consolas" TextAlignment="Right" Margin="-16,0,0,0" Foreground="White" Text="{Binding Ninja.Price}" Width="{Binding Ninja.ValWidth}"/>
                            <Image x:Name="imgNinja" d:Source="{StaticResource ImgChaos}" d:Margin="63,0,38,-1" Tag="{Binding Ninja.ImageName}" Margin="{Binding Ninja.ImgLeftRightMargin, Converter={StaticResource ninjaMarginConverter}}">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag, ElementName=imgNinja}" Value="chaos">
                                                <Setter Property="Source" Value="{StaticResource ImgChaos}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Tag, ElementName=imgNinja}" Value="exalt">
                                                <Setter Property="Source" Value="{StaticResource ImgExalt}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Tag, ElementName=imgNinja}" Value="divine">
                                                <Setter Property="Source" Value="{StaticResource ImgDivine}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Grid>
                    </Button>
                </StackPanel>

                <TextBlock x:Name="lbLeague" Text="{ext:Localization Main057_lbLeague}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="366,6,0,0" RenderTransformOrigin="0.422,0.962" FontFamily="{StaticResource LithosProRegular}" FontSize="10" Foreground="#FFB2B0B0" Width="90" TextAlignment="Center" Panel.ZIndex="2"/>
                <ComboBox x:Name="cbLeague" HorizontalAlignment="Left" Margin="366,20,0,0" VerticalAlignment="Top" Height="20" Width="90" RenderTransformOrigin="0.594,-0.439"   Tag="combobox" FontFamily="{StaticResource FontinSmallCaps}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="10"
                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.League}" SelectedIndex="{Binding Form.LeagueIndex}"/>
                <TextBlock x:Name="lbMarket" Text="{ext:Localization Main058_lbMarket}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="464,6,0,0" RenderTransformOrigin="0.422,0.962" FontFamily="{StaticResource LithosProRegular}" FontSize="10" Foreground="#FFB2B0B0" Width="56" TextAlignment="Center" Panel.ZIndex="2"/>
                <ComboBox x:Name="cbMarket" HorizontalAlignment="Left" Margin="464,20,0,0" VerticalAlignment="Top" Height="20" Width="56" RenderTransformOrigin="0.594,-0.439"   Tag="combobox" FontFamily="{StaticResource FontinSmallCaps}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="10"
                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Market}" SelectedIndex="{Binding Form.MarketIndex}"/>

                <Border x:Name="bdDps" Background="{StaticResource LightBg}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="Auto" Height="27" BorderThickness="1" CornerRadius="3" BorderBrush="{StaticResource DarkBg}" Margin="0,52,36,0" Visibility="{Binding Form.Visible.Damage, Converter={StaticResource bool2VisibilityConverter}}">
                    <Grid Margin="0,-1,-1,-1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="lbDPS1" d:Text="Total dps" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Consolas" Visibility="Visible" Foreground="LimeGreen" FontSize="16" FontWeight="ExtraBold" Margin="0,-2,0,0" Text="{Binding Form.Dps}" ToolTip="{Binding Form.DpsTip}"/>
                    </Grid>
                </Border>

                <Grid Margin="294,42,0,0" Width="209" Height="42" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding Form.Visible.BulkLastSearch, Converter={StaticResource bool2VisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="tbBulkSearch" Text="{ext:Localization Main153_lastSearch}" Grid.Column="1" FontFamily="{StaticResource LithosProRegular}" HorizontalAlignment="Center" FontSize="10" Foreground="#FFB2B0B0" Margin="0,2,0,20"/>
                    <Border x:Name="bdGetPay" Background="{StaticResource LightBg}"  HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="1" Width="Auto" Height="27" Visibility="Visible" BorderThickness="1" CornerRadius="3" BorderBrush="{StaticResource DarkBg}" Margin="0,15,0,0">
                        <Grid Margin="0,-1,-1,-1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" MaxWidth="65"/>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="Auto" MaxWidth="65"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="lbGet2" Text="{ext:Localization Main092_lbGet}" Grid.Column="2" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="0,5,0,3"/>
                            <Image x:Name="imgGetLoad2" Grid.Column="4" Height="24" Width="24" d:Source="{StaticResource ImgChaos}" Source="{Binding Form.Bulk.Get.ImageLast, Converter={StaticResource imageSourceConverter}}" ToolTip="{Binding Form.Bulk.Get.ImageLastToolTip}" Tag="{Binding Form.Bulk.Get.ImageLastTag}"/>
                            <TextBlock Text=":" Grid.Column="5" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="12" Foreground="#FFB2B0B0" Margin="0,6,0,2"/>
                            <TextBlock x:Name="lbPay2" Text="{ext:Localization Main093_lbPay}" Grid.Column="8" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="0,5,0,1"/>
                            <Image x:Name="imgPayLoad2" Grid.Column="6" Height="24" Width="24" d:Source="{StaticResource ImgExalt}" Source="{Binding Form.Bulk.Pay.ImageLast, Converter={StaticResource imageSourceConverter}}" ToolTip="{Binding Form.Bulk.Pay.ImageLastToolTip}" Tag="{Binding Form.Bulk.Pay.ImageLastTag}"/>
                        </Grid>
                    </Border>
                </Grid>

                <Button x:Name="btnSearch" Content="{ext:Localization Main098_btnSearch}" HorizontalAlignment="Left" Margin="11,580,0,5"  Width="177" Height="35" FontWeight="Bold" d:IsEnabled="True" Command="{Binding Commands.OpenSearchCommand}" FontFamily="{StaticResource LithosProRegular}" FontSize="16" ToolTip="{ext:Localization Main107_btnSearchTip}">
                    <!-- Click="BtnSearch"-->
                    <!-- IsEnabled="{Binding Form.Button.SearchIsEnabled}"-->
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, ElementName=tabItemBasic}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, ElementName=tabItemDetailed}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, ElementName=tabItemExchange}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Bulk.Pay.CurrencyIndex, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Bulk.Get.CurrencyIndex, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, ElementName=tabItemShop}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Shop.GetList.Count, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Shop.PayList.Count, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--
                <Button x:Name="btnDonate" HorizontalAlignment="Left" Margin="226,580,0,5" Width="119" Height="35" Command="{Binding Commands.OpenDonateUrl}" ToolTip="{ext:Localization Main108_btnDonateTip}" Visibility="Hidden">
                    <Grid Margin="0,0,0,0" Width="115">
                        <Image x:Name="imgPaypal" Source="pack://application:,,,/XileTrade;component/Assets/Png/paypal.png" Height="25" Margin="2,1,81,2"/>
                        <TextBlock x:Name="lbDonate" Text="{ext:Localization Main099_lbDonate}" HorizontalAlignment="Left" Margin="29,0,0,0" VerticalAlignment="Center" FontSize="16" Width="86" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" FontWeight="Bold" TextAlignment="Center"/>
                    </Grid>
                </Button>
                -->
                <Button x:Name="btnClose" Content="{ext:Localization Main100_btnClose}" HorizontalAlignment="Left" Margin="379,580,0,5" Width="130" Height="35" FontWeight="Bold" FontFamily="{StaticResource LithosProRegular}" FontSize="16" ToolTip="{ext:Localization Main109_btnCloseTip}" Command="{Binding TrayCommands.CloseApplicationCommand}"/>

                <TabControl x:Name="tabControl1" BorderThickness="1" Height="476" Margin="1,93,0,0" VerticalAlignment="Top" TabStripPlacement="Bottom" HorizontalAlignment="Left" Width="520" BorderBrush="{StaticResource DarkBg}" Background="{StaticResource LightBg}">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabPanel}">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                    </TabControl.Resources>
                    <!--Quick Search-->
                    <TabItem x:Name="tabItemBasic" Header="{ext:Localization Main084_tabItemBasic}" FontFamily="{StaticResource LithosProRegular}"  d:IsSelected="True" IsSelected="{Binding Form.Tab.QuickSelected}">
                        <!-- IsEnabled="{Binding Form.Tab.QuickEnable}"-->
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.QuickEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="4,0,-4,0">
                            <Grid Margin="2,4,0,162">
                                <Grid x:Name="lblHeader" Margin="-2,-5,0,269" Visibility="{Binding Form.Visible.HeaderMod, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock Text="{ext:Localization Main059_lbAffix}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="60" TextAlignment="Center" Height="17" />
                                    <TextBlock Text="{ext:Localization Main060_lbMod}" HorizontalAlignment="Left" Margin="80,0,0,0" VerticalAlignment="Center"  FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="265" TextAlignment="Center" Height="17"/>
                                    <TextBlock Text="{ext:Localization General093_lbSearch}" HorizontalAlignment="Left" Margin="376,0,0,0" VerticalAlignment="Center" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="84" TextAlignment="Center" Height="17"/>
                                    <TextBlock Text="{ext:Localization Main094_lbTier}" HorizontalAlignment="Left" Margin="331,0,0,0" VerticalAlignment="Center" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Width="51" Height="17"/>
                                    <TextBlock Text="{ext:Localization Main064_lbSelect}" HorizontalAlignment="Left" Margin="460,0,0,0" VerticalAlignment="Center" FontSize="10" Width="50" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Height="17"/>
                                    <TextBlock Text="{ext:Localization Main061_lbMin}" HorizontalAlignment="Left" Margin="390,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="41" TextAlignment="Center" Height="17" Visibility="Hidden"/>
                                    <TextBlock Text="{ext:Localization Main062_lbCurrent}" HorizontalAlignment="Left" Margin="341,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Width="51" Height="17" Visibility="Hidden"/>
                                    <TextBlock Text="{ext:Localization Main063_lbMax}" HorizontalAlignment="Left" Margin="433,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="41" TextAlignment="Center" Height="17" Visibility="Hidden"/>
                                </Grid>
                                <Grid Margin="0,8,0,0">
                                    <uc:ModList/>
                                    <!-- TODO remove d:Grid after mocking listbox data template-->
                                    <d:Grid Height="25" Margin="-3,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                                        <ComboBox x:Name="affix_" HorizontalAlignment="Left" Margin="0,1,0,0" VerticalAlignment="Top" Width="60" SelectedIndex="0" Height="22" Tag="combobox" DropDownClosed="AffixColorChanged" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"   
                                                            VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding }">
                                            <ComboBox.Resources>
                                                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                                            </ComboBox.Resources>
                                            <ComboBox.Style>
                                                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsDropDownOpen" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Style>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <ComboBoxItem/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Image x:Name="modimg_" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="20"   Source="{StaticResource ImgPillGrey}" Margin="60,3,0,0" Tag="tag" >
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Source" Value="{StaticResource ImgPillGrey}"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Source" Value="{StaticResource ImgPillGold}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBox x:Name="mod_" HorizontalAlignment="Left" Height="22" Margin="80,1,0,0"  Text="" VerticalAlignment="Top" Width="260" IsReadOnly="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="12" AcceptsReturn="False" TextWrapping="NoWrap"  Tag="mod" />
                                        <TextBox x:Name="modbis_" HorizontalAlignment="Left" Height="22" Margin="80,1,0,0"  Text="" VerticalAlignment="Top" Width="260" IsReadOnly="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="12" Visibility="Visible"  Tag="mod" />
                                        <ComboBox x:Name="option_" MaxDropDownHeight="250" HorizontalAlignment="Left" Margin="349,1,0,0" VerticalAlignment="Top" FontFamily="{StaticResource FontinSmallCaps}" Width="111" SelectedIndex="0" Height="22"   Tag="combobox" FontSize="12" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Visibility="Hidden" 
                                                            VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />
                                        <ComboBox x:Name="optionID_" HorizontalAlignment="Left" Margin="349,1,0,0" VerticalAlignment="Top" Width="2" SelectedIndex="0" Height="22"   Tag="combobox" FontSize="10" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Visibility="Hidden"
                                                            VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />

                                        <Grid x:Name="grid_min_" Height="22" Width="41" Margin="376,1,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <TextBox x:Name="min_" HorizontalAlignment="Left" Height="22" Width="41" Text="" VerticalAlignment="Top" Tag="textbox" FontFamily="Arial" TextAlignment="Center" />
                                            <TextBlock x:Name="style_min_" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="41" TextAlignment="Center" FontSize="10">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Text, ElementName=min_}" Value="">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                        <Grid x:Name="grid_max_" Margin="419,1,0,0" Height="22" Width="41" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <TextBox x:Name="max_" HorizontalAlignment="Left" Height="22" Width="41" Text="" VerticalAlignment="Top" Tag="textbox" FontFamily="Arial" TextAlignment="Center" />
                                            <TextBlock x:Name="style_max_" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="41" TextAlignment="Center" FontSize="10">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Text, ElementName=max_}" Value="">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>

                                        <CheckBox x:Name="select_" HorizontalAlignment="Left" Margin="475,3,0,0" VerticalAlignment="Top">
                                            <CheckBox.LayoutTransform>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                            </CheckBox.LayoutTransform>
                                        </CheckBox>
                                        <TextBlock x:Name="current_" Text="" HorizontalAlignment="Left" Margin="340,1,0,0" VerticalAlignment="Top" FontFamily="Arial" Foreground="#FFB2B0B0" Height="22" FontWeight="Bold" Width="35" TextAlignment="Center" Visibility="Hidden" />
                                        <TextBlock x:Name="tier_" Text="" HorizontalAlignment="Left" Margin="340,5,0,0" VerticalAlignment="Top" FontFamily="Arial" Foreground="#FFB2B0B0" FontWeight="Bold" Width="35" TextAlignment="Center" Tag="null" >
                                            <!--
                                            <TextBlock.ToolTip>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <TextBox Text="{Binding }"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </TextBlock.ToolTip>
                                            -->
                                        </TextBlock>
                                    </d:Grid>

                                </Grid>
                            </Grid>

                            <!--HIDDENS PARTS-->
                            <Border x:Name="bdDetail" Background="{StaticResource DarkBg}" BorderBrush="{StaticResource DarkBg}" BorderThickness="1" CornerRadius="3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="507" Height="283" Margin="-2,0,0,0" Visibility="{Binding Form.Visible.Detail, Converter={StaticResource bool2VisibilityConverter}}" d:Opacity="0" d:Panel.ZIndex="-1">
                                <TextBlock x:Name="tkDetail" TextWrapping="Wrap" d:Text="TextBlock" Padding="5" Text="{Binding Form.Detail}"/>
                            </Border>

                            <Border BorderBrush="{StaticResource DarkBg}" BorderThickness="1" HorizontalAlignment="Left" Height="1" Margin="0,286,0,0" VerticalAlignment="Top" Width="506" RenderTransformOrigin="0.5,0.5" />
                            <Grid Margin="0,292,0,0">
                                <uc:BottomForm/>
                            </Grid>

                            <Border x:Name="bdExtraControls" Background="{StaticResource LightBg}" Margin="-6,288,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="514" Height="94" d:Opacity="0" d:Panel.ZIndex="-1" Visibility="{Binding Form.Visible.Facetor, Converter={StaticResource bool2VisibilityConverter}}">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Height="94" Width="514">
                                    <TextBlock x:Name="tbFacetor" Text="{ext:Localization Main154_tbFacetor}" FontFamily="{StaticResource FontinSmallCaps}" Foreground="#FFDBDCDC" VerticalAlignment="Top" HorizontalAlignment="Center" TextAlignment="Center" FontSize="12" Width="184" Margin="0,25,0,0"/>
                                    <TextBox x:Name="tbFaceMin" HorizontalAlignment="Left" Height="22" Margin="166,42,0,0" d:Text="" VerticalAlignment="Top" Width="90"  Tag="textbox" FontFamily="Arial"  IsEnabled="True" Text="{Binding Form.Panel.FacetorMin}"/>
                                    <TextBox x:Name="tbFaceMax" HorizontalAlignment="Left" Height="22" Margin="260,42,0,0" d:Text="" VerticalAlignment="Top" Width="90"  Tag="textbox" FontFamily="Arial"  IsEnabled="True" Text="{Binding Form.Panel.FacetorMax}"/>
                                </Grid>
                            </Border>
                            <Border x:Name="bdRect1" Margin="-2,383,0,0" HorizontalAlignment="Left" Cursor="Hand" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
                                <!-- MouseLeftButtonDown="RefreshSearch"-->
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                                    <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="quick" MouseAction="RightClick"/>
                                </Border.InputBindings>
                                <Grid Margin="0,0,0,0" Cursor="Hand">
                                    <TextBlock x:Name="tkPriceQuickBis" d:Text="Search Results 1 bis" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Quick.LeftString}" Opacity="0.5">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect1}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Grid Margin="0,5,7,0" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" Cursor="Hand">
                                        <uc:ResultBar/>
                                    </Grid>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="cbTotalSearch" d:Text="0" HorizontalAlignment="Right" Margin="0,436,9,-1" VerticalAlignment="Top" Panel.ZIndex="2" RenderTransformOrigin="0.571,2.792" FontFamily="Consolas" FontSize="10" d:DataContext="{d:DesignInstance Type=t:MainViewModel}"> <!-- Text="{Binding Result.Quick.Total}"-->
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                <Setter Property="Text" Value="{Binding Result.Quick.Total}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                <Setter Property="Text" Value="{Binding Form.RateText}"/>
                                                <Setter Property="Foreground" Value="Yellow"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </TabItem>

                    <!--Detailed Search-->
                    <TabItem x:Name="tabItemDetailed" Header="{ext:Localization Main085_tabItemDetailed}" FontFamily="{StaticResource LithosProRegular}"  IsSelected="{Binding Form.Tab.DetailSelected}">
                        <!-- IsEnabled="{Binding Form.Tab.DetailEnable}"-->
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.DetailEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="2,0,-2,0">
                            <TextBlock x:Name="lblPrice" Text="{ext:Localization Main087_lblPrice}" HorizontalAlignment="Left" Margin="25,1,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="98"/>
                            <TextBlock x:Name="lblIndexed" Text="{ext:Localization Main088_lblIndexed}" HorizontalAlignment="Left" Margin="140,1,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="128" TextAlignment="Left"/>
                            <TextBlock x:Name="lblSellers" Text="{ext:Localization Main089_lblSellers}" HorizontalAlignment="Left" Margin="323,1,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="125"/>
                            <Grid x:Name="grPriceLayout" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="505" Height="323">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="liPriceDetail" Height="{Binding ActualHeight, ElementName=grPriceLayout}" FontFamily="Consolas" BorderThickness="1" ItemsSource="{Binding Path=Result.DetailList}" 
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                <ListBoxItem.Style>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                <Setter Property="Foreground" Value="YellowGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                <Setter Property="Foreground" Value="Yellow"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                <Setter Property="Foreground" Value="DarkRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                <Setter Property="Foreground" Value="Azure"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBoxItem.Style>
                                            </ListBoxItem>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                            <!-- Hidden price min-->
                            <TextBox x:Name="tbPriceFilterMin"  Height="22" Margin="457,346,14,73" Text="1"  Width="34" BorderThickness="0,0,0,0" TextAlignment="Center" FontFamily="Arial"   Visibility="Hidden"/>
                            <Button x:Name="btnFetchResultsDetail" Content="{ext:Localization Main091_fetchResultsDetail}"  HorizontalAlignment="Left" Height="20" Margin="15,351,0,0" VerticalAlignment="Top" Width="160" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.FetchCommand}" ToolTipService.ShowDuration="12000" ToolTip="{ext:Localization Main103_fetchResultsDetailTip}" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                                <!-- IsEnabled="{Binding Form.Button.FetchDetailIsEnabled}"-->
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                <Setter Property="IsEnabled" Value="{Binding Form.FetchDetailIsEnabled}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Border Margin="190,351,90,71" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto">
                                <CheckBox x:Name="cbSameUser" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{ext:Localization Main104_cbSameUserTip}" Height="14" IsChecked="{Binding Path=Form.SameUser}">
                                    <CheckBox.LayoutTransform>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </CheckBox.LayoutTransform>
                                    <TextBlock x:Name="tbAggregate" Text="{ext:Localization Main090_tbAggregate}" Margin="0,2,0,0" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" FontSize="8"/>
                                </CheckBox>
                            </Border>
                            <Border Margin="345,351,0,71" VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                <CheckBox x:Name="cbChaosDiv" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{ext:Localization Main215_ChaosDivTip}" Height="14" IsChecked="{Binding Path=Form.ChaosDiv}">
                                    <CheckBox.LayoutTransform>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </CheckBox.LayoutTransform>
                                    <TextBlock x:Name="tbChaosDiv" Text="{ext:Localization Main214_tbChaosDiv}" Margin="0,2,0,0" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" FontSize="8"/>
                                </CheckBox>
                            </Border>
                            <Border Margin="345,351,0,71" VerticalAlignment="Top" HorizontalAlignment="Left" d:Visibility="Collapsed" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                                <CheckBox x:Name="cbExalt" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{ext:Localization Main226_ExaltTip}" Height="14" IsChecked="{Binding Path=Form.Exalt}">
                                    <CheckBox.LayoutTransform>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </CheckBox.LayoutTransform>
                                    <TextBlock x:Name="tbExalt" Text="Exalted" Margin="0,2,0,0" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" FontSize="8"/>
                                </CheckBox>
                            </Border>

                            <Border x:Name="bdRect2" Margin="0,383,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                                    <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="detail" MouseAction="RightClick"/>
                                </Border.InputBindings>
                                <Grid Margin="0,0,0,0" Cursor="Hand">
                                    <TextBlock x:Name="tkPriceDetailBis" d:Text="Search Results 1 bis" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Detail.LeftString}" Opacity="0.5">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect2}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Grid Margin="0,5,7,0" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" Cursor="Hand">
                                        <uc:ResultBar/>
                                    </Grid>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="cbTotalDetail" d:Text="0" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Consolas" Visibility="Visible" Panel.ZIndex="1" FontSize="10" Margin="9,436,0,-1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}"> <!-- Text="{Binding Result.Detail.Total}"-->
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                <Setter Property="Text" Value="{Binding Result.Detail.Total}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                <Setter Property="Text" Value="{Binding Form.RateText}"/>
                                                <Setter Property="Foreground" Value="Yellow"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </TabItem>
                    <!-- Bulk Tab-->
                    <TabItem x:Name="tabItemExchange" Header="{ext:Localization Main086_tabItemExchange}"  FontFamily="{StaticResource LithosProRegular}"  IsSelected="{Binding Form.Tab.BulkSelected}">
                        <!-- IsEnabled="{Binding Form.Tab.BulkEnable}"-->
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.BulkEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="2,0,-2,0">
                            <Label x:Name="lblGP" Content="{ext:Localization Main102_lblGP}" HorizontalAlignment="Left" Margin="27,-6,0,0" VerticalAlignment="Top" FontSize="12" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="412"/>
                            <Grid x:Name="gridPriceLayoutBulk" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="505" Height="271">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="liPriceBulk" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Path=Result.BulkList}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch" SelectedIndex="{Binding Result.SelectedIndex.Bulk}">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" x:Name="lbItemStyle">
                                            <!--
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            -->
                                            <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            <!--
                                            <Setter Property="Focusable" Value="False" />
                                            -->
                                            <!--
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <ContentPresenter ContentSource="Content"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            -->
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                <ListBoxItem.InputBindings>
                                                    <MouseBinding MouseAction="LeftClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.SelectBulkIndexCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.ShowBulkWhisperCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                </ListBoxItem.InputBindings>
                                                <ListBoxItem.Style>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                <Setter Property="Foreground" Value="YellowGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                <Setter Property="Foreground" Value="Yellow"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                <Setter Property="Foreground" Value="DarkRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                <Setter Property="Foreground" Value="Azure"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBoxItem.Style>
                                            </ListBoxItem>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <ListBox x:Name="liWhisper" Visibility="Hidden" ItemsSource="{Binding Path=Result.BulkList}"/>
                            </Grid>
                            <Grid x:Name="gridBulk" Margin="0,286,0,0" VerticalAlignment="Top" Height="92">
                                <ComboBox x:Name="cbBulkPay1" HorizontalAlignment="Left" Margin="299,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="130" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.CategoryIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="pay" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                            <Style.Triggers>
                                                <Trigger Property="SelectedIndex" Value="0">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="SelectedIndex" Value="-1">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsDropDownOpen" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <Grid x:Name="scopePay" Margin="382,5,62,68" Panel.ZIndex="1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Form.Bulk.Pay.Search}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Ellipse Stroke="Gray" StrokeThickness="1" Margin="3,3,51,6" />
                                    <Rectangle Stroke="Gray" StrokeThickness="1" Margin="14,11,47,6">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="50"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <TextBox x:Name="tbPay" Margin="382,5,62,0" d:Text="" BorderThickness="1" TextAlignment="Left" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main116_Keywords}" VerticalAlignment="Top" IsEnabled="True"  Text="{Binding Form.Bulk.Pay.Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding Commands.SearchCurrencyCommand}" CommandParameter="pay" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <Grid Margin="291,3,128,65" ToolTip="{ext:Localization Main093_lbPay}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto" MaxWidth="68"/>
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="24" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="lbPay" Text="{ext:Localization Main093_lbPay}" Grid.Column="1" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="#FFDBDCDC" Margin="0,3,0,0"/>
                                    <Image x:Name="imgPayLoad" Grid.Column="3" Height="24" Width="24" d:Source="{StaticResource ImgExalt}" Source="{Binding Form.Bulk.Pay.Image, Converter={StaticResource imageSourceConverter}}"/>
                                </Grid>
                                <TextBlock x:Name="lbTierPay" Text="{ext:Localization Main094_lbTier}"  Margin="421,65,25,11" FontFamily="{StaticResource FontinSmallCaps}" Width="42" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center" Visibility="{Binding Form.Bulk.Pay.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <ComboBox x:Name="cbTierPay" HorizontalAlignment="Left" Margin="444,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="55" Height="24" FontFamily="{StaticResource FontinSmallCaps}"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Tier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.TierIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Pay.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="pay/tier" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ComboBox>
                                <ComboBox x:Name="cbBulkPay2" HorizontalAlignment="Left" Margin="299,62,0,0" VerticalAlignment="Top" MaxDropDownHeight="160" Width="200" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Currency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.CurrencyIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Pay.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.ChangeCommand}" CommandParameter="pay" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <Image x:Name="imgPayChaos" Margin="450,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ChaosImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paychaos" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgPayExalt" Margin="450,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ExaltImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="payexalt" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgPayDivine" Margin="469,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DivineImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paydivine" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgPayNothing" Margin="486,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource NothingImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paynothing" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>


                                <Border x:Name="borderBulk1" BorderBrush="{StaticResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="82" Margin="212,5,0,0" VerticalAlignment="Top" Width="1" RenderTransformOrigin="0.5,0.5" />
                                <!--
                                <Button x:Name="btnGetMoreBulk" Content="{ext:Localization Main095_getMoreBulk}"  HorizontalAlignment="Left" Height="20" Margin="216,6,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.Fetch}" ToolTipService.ShowDuration="12000" ToolTip="{ext:Localization Main113_getMoreBulkTip}" d:DataContext="{d:DesignInstance Type=t:MainViewModel}" Visibility="Hidden">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                    <Setter Property="IsEnabled" Value="{Binding Form.Button.FetchBulksEnabled}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                -->
                                <Button x:Name="btnInvert" Content="{ext:Localization Main096_btnInvert}"  HorizontalAlignment="Left" Height="20" Margin="216,64,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.InvertBulkCommand}" ToolTip="{ext:Localization Main115_btnInvertTip}"/>
                                <Border x:Name="borderBulk2" BorderBrush="{StaticResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="82" Margin="291,5,0,0" VerticalAlignment="Top" Width="1" RenderTransformOrigin="0.5,0.5" />
                                <ComboBox x:Name="cbBulkGet1" HorizontalAlignment="Left" Margin="5,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="130" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.CategoryIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="get" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                            <Style.Triggers>
                                                <Trigger Property="SelectedIndex" Value="0">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="SelectedIndex" Value="-1">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsDropDownOpen" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <Grid Margin="-6,2,425,65" ToolTip="{ext:Localization Main092_lbGet}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto" MaxWidth="65"/>
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="24" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="lbGet" Text="{ext:Localization Main092_lbGet}" Grid.Column="1" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="#FFDBDCDC" Margin="0,3,0,2"/>
                                    <Image x:Name="imgGetLoad" Grid.Column="3" Height="24" Width="24" d:Source="{StaticResource ImgChaos}" Source="{Binding Form.Bulk.Get.Image, Converter={StaticResource imageSourceConverter}}"/>
                                </Grid>
                                <TextBlock x:Name="lbTierGet" Text="{ext:Localization Main094_lbTier}"  Margin="128,65,320,11" FontFamily="{StaticResource FontinSmallCaps}" Width="42" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center" Visibility="{Binding Form.Bulk.Get.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>

                                <ComboBox x:Name="cbTierGet" HorizontalAlignment="Left" Margin="150,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="55" Height="24" FontFamily="{StaticResource FontinSmallCaps}"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Tier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.TierIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Get.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="get/tier" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ComboBox>
                                <ComboBox x:Name="cbBulkGet2" HorizontalAlignment="Left" Margin="5,62,0,0" VerticalAlignment="Top" MaxDropDownHeight="160" Width="200" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Currency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.CurrencyIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.ChangeCommand}" CommandParameter="get" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <TextBlock x:Name="lbMinStock" Text="{ext:Localization Main097_lbMinStock}"  Margin="230,20,236,59" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}"/>
                                <TextBox x:Name="tbMinStock" Margin="230,-6,0,0" d:Text="1" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center" Foreground="#FFDBDCDC" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main114_tbMinStockTip}" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}" Text="{Binding Form.Bulk.Stock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="44"/>
                                <Grid x:Name="scopeGet" Margin="86,5,355,68" Panel.ZIndex="1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Form.Bulk.Get.Search}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Ellipse Stroke="Gray" StrokeThickness="1" Margin="3,3,54,6" />
                                    <Rectangle Stroke="Gray" StrokeThickness="1" Margin="14,11,50,6">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="50"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <TextBox x:Name="tbGet" Margin="86,5,355,0" d:Text="" BorderThickness="1" TextAlignment="Left" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main116_Keywords}" VerticalAlignment="Top" IsEnabled="True"  Text="{Binding Form.Bulk.Get.Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding Commands.SearchCurrencyCommand}" CommandParameter="get" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <Image x:Name="imgGetChaos" Margin="156,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ChaosImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getchaos" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgGetExalt" Margin="156,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ExaltImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getexalt" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgGetDivine" Margin="175,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DivineImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getdivine" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgGetNothing" Margin="192,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource NothingImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getnothing" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                            </Grid>

                            <Border x:Name="bdRect3" Margin="0,383,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                                    <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="bulk" MouseAction="RightClick"/>
                                </Border.InputBindings>
                                <Grid Margin="0,0,0,0" Cursor="Hand">
                                    <TextBlock x:Name="tkPriceBulkBis" d:Text="" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Bulk.LeftString}" Opacity="0.5">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect3}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock x:Name="tkPriceBulk" d:Text="{ext:Localization Main001_PriceSelect}" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Panel.ZIndex="2" FontFamily="Consolas" TextAlignment="Right" Margin="0,5,7,0" Text="{Binding Result.Bulk.RightString}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect3}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="cbTotalExchange" d:Text="{ext:Localization Main032_cbTotalExchange}" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Consolas" Visibility="Visible" Panel.ZIndex="1" FontSize="10" Margin="9,436,0,-1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}"> <!-- Text="{Binding Result.Bulk.Total}"-->
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                <Setter Property="Text" Value="{Binding Result.Bulk.Total}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                <Setter Property="Text" Value="{Binding Form.RateText}"/>
                                                <Setter Property="Foreground" Value="Yellow"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </TabItem>



                    <!-- Shop Tab-->
                    <TabItem x:Name="tabItemShop" Header="{ext:Localization Main206_tabItemShop}" FontFamily="{StaticResource LithosProRegular}"  IsSelected="{Binding Form.Tab.ShopSelected}">
                        <!-- IsEnabled="{Binding Form.Tab.BulkEnable}"-->
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.ShopEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="2,0,-2,0">
                            <Label x:Name="lblGPShop" Content="{ext:Localization Main102_lblGP}" HorizontalAlignment="Left" Margin="27,-6,0,0" VerticalAlignment="Top" FontSize="12" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="412"/>
                            <Grid x:Name="gridPriceLayoutShop" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="505" Height="240">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="liPriceShop" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Path=Result.ShopList}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch" SelectedIndex="{Binding Result.SelectedIndex.Shop}">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <!--
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            -->
                                            <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            <!--
                                            <Setter Property="Focusable" Value="False" />
                                            -->
                                            <!--
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <ContentPresenter ContentSource="Content"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            -->
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                <ListBoxItem.InputBindings>
                                                    <MouseBinding MouseAction="LeftClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.SelectShopIndexCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.ShowShopWhisperCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                </ListBoxItem.InputBindings>
                                                <ListBoxItem.Style>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                <Setter Property="Foreground" Value="YellowGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                <Setter Property="Foreground" Value="Yellow"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                <Setter Property="Foreground" Value="DarkRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                <Setter Property="Foreground" Value="Azure"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBoxItem.Style>
                                            </ListBoxItem>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <ListBox x:Name="liWhisperShop" Visibility="Hidden" ItemsSource="{Binding Path=Result.ShopList}"/>
                            </Grid>
                            <Grid x:Name="gridShop" Margin="0,256,0,0" VerticalAlignment="Top" Height="122">
                                <TextBlock x:Name="lbAddToList" Text="{ext:Localization Main202_AddList}"  Margin="216,6,223,104" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center"/>
                                <Button x:Name="btnGetList" Content="{ext:Localization Main092_lbGet}"  HorizontalAlignment="Left" Height="20" Margin="216,19,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.AddShopListCommand}" CommandParameter="get" />
                                <Button x:Name="btnPayList" Content="{ext:Localization Main093_lbPay}" HorizontalAlignment="Left" Height="20" Margin="216,41,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.AddShopListCommand}" CommandParameter="pay" />

                                <Border x:Name="borderBulk1Shop" BorderBrush="{StaticResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="120" Margin="212,0,0,0" VerticalAlignment="Center" Width="1" RenderTransformOrigin="0.5,0.5" />
                                <Button x:Name="btnResetList" Content="{ext:Localization Main203_Reset}"  HorizontalAlignment="Left" Height="20" Margin="216,100,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.ResetShopListsCommand}" />
                                <Border x:Name="borderBulk2Shop" BorderBrush="{StaticResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="120" Margin="291,0,0,0" VerticalAlignment="Center" Width="1" RenderTransformOrigin="0.5,0.5" />

                                <Button x:Name="btnInvertShop" Content="{ext:Localization Main096_btnInvert}"  HorizontalAlignment="Left" Height="20" Margin="365,0,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.InvertShopListsCommand}" />
                                <TextBlock x:Name="lbGetShop" Text="{ext:Localization Main092_lbGet}" FontFamily="{StaticResource FontinSmallCaps}" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="298,2,0,0" Width="67"/>
                                <Grid x:Name="gridListGet" Margin="298,22,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="90">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <ListBox x:Name="liGet" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Form.Shop.GetList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch">
                                        <ListBox.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="3"/>
                                            </Style>
                                        </ListBox.Resources>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>

                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                    <ListBoxItem.InputBindings>
                                                        <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.RemoveGetListCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    </ListBoxItem.InputBindings>
                                                    <ListBoxItem.Style>
                                                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                    <Setter Property="Foreground" Value="Red"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                    <Setter Property="Foreground" Value="YellowGreen"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                    <Setter Property="Foreground" Value="LimeGreen"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                    <Setter Property="Foreground" Value="Yellow"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                    <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                    <Setter Property="Foreground" Value="DarkRed"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                    <Setter Property="Foreground" Value="Azure"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                    <Setter Property="Foreground" Value="Gray"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBoxItem.Style>
                                                </ListBoxItem>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>

                                <TextBlock x:Name="lbPayShop" Text="{ext:Localization Main093_lbPay}" FontFamily="{StaticResource FontinSmallCaps}" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="436,2,0,0" Width="70"/>
                                <Grid x:Name="gridListPay" Margin="405,22,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="90">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <ListBox x:Name="liPay" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Form.Shop.PayList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch">
                                        <ListBox.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="3"/>
                                            </Style>
                                        </ListBox.Resources>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>

                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                    <ListBoxItem.InputBindings>
                                                        <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.RemovePayListCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    </ListBoxItem.InputBindings>
                                                    <ListBoxItem.Style>
                                                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                    <Setter Property="Foreground" Value="Red"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                    <Setter Property="Foreground" Value="YellowGreen"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                    <Setter Property="Foreground" Value="LimeGreen"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                    <Setter Property="Foreground" Value="Yellow"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                    <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                    <Setter Property="Foreground" Value="DarkRed"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                    <Setter Property="Foreground" Value="Azure"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                    <Setter Property="Foreground" Value="Gray"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBoxItem.Style>
                                                </ListBoxItem>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                                <TextBlock x:Name="lbRemove" Text="{ext:Localization Main204_ShopTip}" Margin="298,112,5,-3" FontFamily="{StaticResource FontinSmallCaps}" FontStyle="Italic" FontSize="8" Foreground="#FFB2B0B0" TextAlignment="Center"/>

                                <ComboBox x:Name="cbShop1" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Center" MaxDropDownHeight="190" Width="130" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Shop.Exchange.Category}" SelectedIndex="{Binding Form.Shop.Exchange.CategoryIndex}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="shop" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                            <Style.Triggers>
                                                <Trigger Property="SelectedIndex" Value="0">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="SelectedIndex" Value="-1">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsDropDownOpen" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <Grid Margin="5,21,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="25" Width="45">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="imgLoadShop" Grid.Column="0" Height="24" Width="24" d:Source="{StaticResource ImgChaos}" Source="{Binding Form.Shop.Exchange.Image, Converter={StaticResource imageSourceConverter}}"/>
                                </Grid>
                                <TextBlock x:Name="lbTierShop" Text="{ext:Localization Main094_lbTier}"  Margin="138,84,330,-8" FontFamily="{StaticResource FontinSmallCaps}" Width="42" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center" Visibility="{Binding Form.Shop.Exchange.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>

                                <ComboBox x:Name="cbTierShop" HorizontalAlignment="Left" Margin="150,0,0,0" VerticalAlignment="Center" MaxDropDownHeight="190" Width="55" Height="24" FontFamily="{StaticResource FontinSmallCaps}"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Shop.Exchange.Tier}" SelectedIndex="{Binding Form.Shop.Exchange.TierIndex}" Visibility="{Binding Form.Shop.Exchange.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="shop/tier" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ComboBox>
                                <ComboBox x:Name="cbShop2" HorizontalAlignment="Left" Margin="5,81,0,0" VerticalAlignment="Top" MaxDropDownHeight="160" Width="200" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Shop.Exchange.Currency}" SelectedIndex="{Binding Form.Shop.Exchange.CurrencyIndex}" Visibility="{Binding Form.Shop.Exchange.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.ChangeCommand}" CommandParameter="shop" IsEnabled="{Binding IsSelectionEnabled}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ComboBox>
                                <TextBlock x:Name="lbMinStockShop" Text="{ext:Localization Main097_lbMinStock}"  Margin="230,64,236,44" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center"/>
                                <TextBox x:Name="tbMinStockShop" Margin="230,76,0,0" d:Text="1" TextAlignment="Center" Foreground="#FFDBDCDC" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Left" VerticalAlignment="Top"   ToolTip="{ext:Localization Main114_tbMinStockTip}" Text="{Binding Form.Shop.Stock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="44"/>
                                <TextBlock x:Name="lbSelectShop" Text="{ext:Localization Main205_CurrencySelection}" FontFamily="{StaticResource FontinSmallCaps}" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="5,2,0,0" Width="200"/>
                                <Grid x:Name="scopeShop" Margin="55,24,355,79" Panel.ZIndex="1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Form.Bulk.Get.Search}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Stroke="Gray" StrokeThickness="1" Margin="3,-3,0,0" Height="10" Width="12" />
                                    <Rectangle HorizontalAlignment="Left" VerticalAlignment="Top" Stroke="Gray" StrokeThickness="1" Margin="12,12,0,0" Height="2" Width="6">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="50"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <TextBox x:Name="tbShop" Margin="55,24,355,0" d:Text="" BorderThickness="1" TextAlignment="Left" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main116_Keywords}" VerticalAlignment="Top" IsEnabled="True"  Text="{Binding Form.Shop.Exchange.Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding Commands.SearchCurrencyCommand}" CommandParameter="shop" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <Image x:Name="imgShopChaos" Margin="156,24,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ChaosImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="shopchaos" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgShopExalt" Margin="156,24,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ExaltImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="shopexalt" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgShopDivine" Margin="175,25,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DivineImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="shopdivine" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgShopNothing" Margin="192,25,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource NothingImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="shopnothing" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                            </Grid>

                            <Border x:Name="bdRect4" Margin="0,383,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                                    <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="shop" MouseAction="RightClick"/>
                                </Border.InputBindings>
                                <Grid Margin="0,0,0,0" Cursor="Hand">
                                    <TextBlock x:Name="tkPriceBulkBisShop" d:Text="" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Shop.LeftString}" Opacity="0.5">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect4}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock x:Name="tkPriceBulkShop" d:Text="{ext:Localization Main001_PriceSelect}" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Panel.ZIndex="2" FontFamily="Consolas" TextAlignment="Right" Margin="0,5,7,0" Text="{Binding Result.Shop.RightString}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect4}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                            
                        </Grid>
                    </TabItem>



                    <!-- Poeprice Tab-->
                    <TabItem x:Name="tabPoeprices" Header="poeprices" FontFamily="{StaticResource LithosProRegular}"  Visibility="{Binding Form.Visible.Poeprices, Converter={StaticResource bool2VisibilityConverter}}" IsSelected="{Binding Form.Tab.PoePriceSelected}">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.PoePriceEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="2,0,-2,0">
                            <TextBlock Text="BE CAREFUL : poeprices.info does not reflect real time market !" HorizontalAlignment="Left" Margin="2,1,0,0" VerticalAlignment="Top" FontSize="10" FontFamily="{StaticResource LithosProRegular}" Foreground="#FFDBDCDC" TextAlignment="Center" Visibility="Visible" Width="501"/>
                            <Grid x:Name="grPoePriceLayout" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="492" Height="271">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="liPoePriceInfo" Grid.IsSharedSizeScope="True" BorderThickness="1" Margin="0,0,-13,0" FontFamily="Arial" ItemsSource="{Binding Path=Result.PoepricesList}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch" Cursor="">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                <ListBoxItem.Style>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                <Setter Property="Foreground" Value="YellowGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                <Setter Property="Foreground" Value="Yellow"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                <Setter Property="Foreground" Value="DarkRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                <Setter Property="Foreground" Value="Azure"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBoxItem.Style>
                                            </ListBoxItem>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button Content="Search item on www.poeprices.info" FontFamily="{StaticResource LithosProRegular}" HorizontalAlignment="Left" Margin="127,287,0,-39" VerticalAlignment="Top" Width="250" Height="23" Command="{Binding Commands.SearchPoepricesCommand}"/>
                                <!-- Click="BtnPoePrices_Search"-->
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>

            </Grid>
        </Grid>
    </Border>
</view:ViewBase>