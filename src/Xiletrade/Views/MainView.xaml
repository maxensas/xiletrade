<view:ViewBase x:Class="Xiletrade.Views.MainView"    
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:t="clr-namespace:Xiletrade.Library.ViewModels.Main;assembly=Xiletrade.Library"
        xmlns:ext="clr-namespace:Xiletrade.Util.Extensions"
        xmlns:view="clr-namespace:Xiletrade.Views"
        xmlns:help="clr-namespace:Xiletrade.Util.Helper"
        d:DataContext="{d:DesignInstance Type=t:MainViewModel}"
        mc:Ignorable="d" ResizeMode="NoResize" Left="30" Top="30" x:Name="myWindow" Topmost="True"
        Title="XileTrade" Width="550" Height="664" WindowStartupLocation="CenterScreen" WindowStyle="None"
        Foreground="{StaticResource ForegroundBrush}" FontFamily="Malgun Gothic" FontSize="12"
        AllowsTransparency="True" Background="Transparent" Opacity="1"  
        RenderTransformOrigin="0.5,0.5" Visibility="Hidden" d:Visibility="Visible">
    <view:ViewBase.Style>
        <Style TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Form.Minimized}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="664" To="130" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="130" To="664" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </view:ViewBase.Style>
    <view:ViewBase.Resources>
        <!-- Find a way to move those resources inside Dictionary using DataContext-->
        <SolidColorBrush x:Key="ButtonMouse" Color="{StaticResource ButtonMouseColor}" Opacity="{Binding Form.Opacity}"/>
        <SolidColorBrush x:Key="ButtonMouseDown" Color="{StaticResource ButtonMouseDownColor}" Opacity="{Binding Form.Opacity}"/>
        <SolidColorBrush x:Key="ButtonMouseLeave" Color="{StaticResource LightBackgroundColor}" Opacity="{Binding Form.Opacity}"/>
        <SolidColorBrush x:Key="LightBg" Color="{StaticResource LightBackgroundColor}" Opacity="{Binding Form.Opacity}"/>
        <SolidColorBrush x:Key="HotBg" Color="{StaticResource HotColor}" Opacity="{Binding Form.Opacity}"/>
        <SolidColorBrush x:Key="DarkBg" Color="{StaticResource DarkBackgroundColor}" Opacity="{Binding Form.Opacity}"/>
        <SolidColorBrush x:Key="Dark2Bg" Color="{StaticResource WindowBackgroundColor}" Opacity="{Binding Form.Opacity}"/>
        <SolidColorBrush x:Key="RedBg" Color="{StaticResource RedColor}" Opacity="{Binding Form.Opacity}"/>
        <SolidColorBrush x:Key="GrayBg" Color="{StaticResource GrayColor}" Opacity="{Binding Form.Opacity}"/>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouse}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="false">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseLeave}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseDown}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
            <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DarkBg}"/>
        </Style>
        
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource Dark2Bg}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Setter Property="Foreground" Value="{DynamicResource GrayForegoundBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="{DynamicResource PowderBlueBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource Dark2Bg}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource Dark2Bg}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="false">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BorderResult" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
            <Setter Property="BorderBrush" Value="#FF333333"/>
            <Style.Triggers>
                <Trigger x:Name="mo" Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource Dark2Bg}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkWhite2Brush}"/>
            <Setter Property="Padding" Value="6,1,6,1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DarkBg}"/>
            <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="Container">
                            <Grid x:Name="Grid" SnapsToDevicePixels="true" Margin="1,0,-12,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Bd" Grid.Column="0" CornerRadius="3,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
							        Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="Content" Margin="6,1,6,1" ContentSource="Header"
								        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
								        RecognizesAccessKey="True"
								        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                </Border>
                                <Path x:Name="RoundedCorner" Grid.Column="1" Grid.Row="0" Width="24" Stretch="Fill"
                                  Data="{StaticResource TabItemRoundedCorner}" Fill="{TemplateBinding Background}" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource HotBg}"/>
                                <Setter Property="Fill"  TargetName="RoundedCorner" Value="{DynamicResource HotBg}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource LightBg}"/>
                                <Setter Property="Fill"  TargetName="RoundedCorner" Value="{DynamicResource LightBg}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HotBg}"/>
                                <Setter Property="Fill" TargetName="RoundedCorner" Value="{DynamicResource HotBg}"/>
                            </MultiTrigger>

                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Style" TargetName="RoundedCorner" Value="{StaticResource BottomStyle}"/>
                                <Setter Property="Style" TargetName="Bd" Value="{StaticResource BottomStyle}"/>
                                <Setter Property="Style" TargetName="Content" Value="{StaticResource BottomStyle}"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="Bd" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="Bd" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="RoundedCorner" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="RoundedCorner" Value="0"/>
                                <Setter Property="Style" TargetName="RoundedCorner" Value="{StaticResource RoundedCornerLeftStyle}"/>
                                <Setter Property="Style" TargetName="Bd" Value="{StaticResource LeftStyle}"/>
                                <Setter Property="Style" TargetName="Content" Value="{StaticResource DefaultStyle}"/>
                                <Setter Property="Margin" TargetName="Grid" Value="0,1,0,-16"/>
                                <Setter Property="CornerRadius" TargetName="Bd" Value="0 3 0 0"/>
                                <Setter Property="Margin" TargetName="RoundedCorner" Value="0 4 0 0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="Bd" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="Bd" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="RoundedCorner" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="RoundedCorner" Value="1"/>
                                <Setter Property="Style" TargetName="RoundedCorner" Value="{StaticResource RightStyle}"/>
                                <Setter Property="Style" TargetName="Bd" Value="{StaticResource RightStyle}"/>
                                <Setter Property="Style" TargetName="Content" Value="{StaticResource DefaultStyle}"/>
                                <Setter Property="Margin" TargetName="Grid" Value="0,1,0,-12"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Top"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin"  Value="0,0,0,-1"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Bottom"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="0,-1,0,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Left"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="0,0,-1,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Right"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-1,0,0,0"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource DarkBg}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource DarkBg}"/>
                                <Setter Property="Fill" TargetName="RoundedCorner" Value="{DynamicResource DarkBg}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </view:ViewBase.Resources>
    <view:ViewBase.RenderTransform>
        <TransformGroup>
            <ScaleTransform x:Name="WindowScaleTransform"/>
        </TransformGroup>
    </view:ViewBase.RenderTransform>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Command="{Binding Commands.WindowLoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Commands.WindowClosedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Commands.WindowDeactivatedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Border Margin="0,0,0,0" Background="Transparent" BorderBrush="{DynamicResource DarkBg}" BorderThickness="2" CornerRadius="3">
        <Grid x:Name="gridMain" Margin="0,0,0,0" Background="{DynamicResource Dark2Bg}">

            <tb:TaskbarIcon IconSource="pack://application:,,,/Xiletrade;component/Assets/AppIcon.ico" Visibility="Visible" DataContext="{Binding}" >
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu Placement="Mouse">
                        <MenuItem Header="{ext:Localization Main146_TrayAbout}" Height="22" Command="{Binding TrayCommands.OpenAboutCommand}"/>
                        <MenuItem Header="{ext:Localization Main199_CheckUpdate}" Height="22" Command="{Binding TrayCommands.CheckUpdateCommand}"/>
                        <MenuItem Header="{ext:Localization Main147_TraySettings}" Height="22" Command="{Binding TrayCommands.OpenConfigCommand}"/>
                        <MenuItem Header="{ext:Localization Main148_TrayClose}" Height="22" Command="{Binding TrayCommands.CloseApplicationCommand}" CommandParameter="terminate"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
                <tb:TaskbarIcon.TrayToolTip>
                    <Border Opacity="1" Background="#FF333333" BorderBrush="#FF555555" BorderThickness="2" CornerRadius="4">
                        <Grid>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding NotifyName}" Margin="5,5,5,5" Foreground="White" FontSize="10" FontFamily="{StaticResource LithosProRegular}"/>
                        </Grid>
                    </Border>
                </tb:TaskbarIcon.TrayToolTip>
            </tb:TaskbarIcon>
            
            <Grid Margin="28,-11,464,621" RenderTransformOrigin="0,0.5" Panel.ZIndex="2" Visibility="Hidden">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.4" ScaleY="0.4"/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Ellipse HorizontalAlignment="Left" VerticalAlignment="Center"  Stroke="White" Height="40" Width="40" StrokeThickness="2" Margin="3,0,0,0"/>
                <Rectangle HorizontalAlignment="Left" Height="36" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="19,0,0,0"/>
                <Rectangle HorizontalAlignment="Left" Height="35" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="29,0,0,0"/>
                <Rectangle HorizontalAlignment="Left" Height="28" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="35,0,0,0"/>
            </Grid>
            <Expander x:Name="expandOptions" Header="" HorizontalAlignment="Left" Height="25" Margin="7,2,0,0" VerticalAlignment="Top" Background="Transparent" Panel.ZIndex="1" ToolTip="{ext:Localization Main150_expandOptionsTip}" IsExpanded="{Binding Form.Expander.IsExpanded}" Width="{Binding Form.Expander.Width}">
                <!-- d:Width="214"-->
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Expanded">
                        <i:InvokeCommandAction Command="{Binding Commands.ExpanderExpandCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Collapsed">
                        <i:InvokeCommandAction Command="{Binding Commands.ExpanderCollapseCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid  Margin="0,-23,0,-2" Width="184" HorizontalAlignment="Right">
                    <Grid Margin="-5,-13,127,-11" RenderTransformOrigin="0,0.5" Panel.ZIndex="2" Visibility="Visible">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.4" ScaleY="0.4"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Ellipse HorizontalAlignment="Left" VerticalAlignment="Center"  Stroke="White" Height="40" Width="40" StrokeThickness="2" Margin="2,0,0,0"/>
                        <Rectangle HorizontalAlignment="Left" Height="36" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="19,0,0,0"/>
                        <Rectangle HorizontalAlignment="Left" Height="32" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" Width="2" Margin="29,0,0,0"/>
                    </Grid>
                    <TextBlock x:Name="txtOpacity" d:Text="100%" Text="{Binding Form.OpacityText}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="31" FontSize="10"  Height="12" Foreground="White" Panel.ZIndex="2" TextAlignment="Right" Margin="58,-2,0,0" />
                    <Slider x:Name="slideOpacity" HorizontalAlignment="Left" VerticalAlignment="Center" Width="44" IsSnapToTickEnabled="True" Margin="12,-2,0,0" Cursor="Arrow" Maximum="100" LargeChange="5" SmallChange="1" Value="{Binding Form.Opacity, Converter={StaticResource multiplyConverter}}" Minimum="30" ToolTip="{ext:Localization Main152_slideOpacityTip}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding Commands.UpdateOpacityCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>

                    <CheckBox x:Name="cbAutoclose" HorizontalAlignment="Left" Margin="95,-3,0,0" VerticalAlignment="Center" Width="94" Visibility="Visible" Height="14" ToolTip="{ext:Localization Main151_cbAutocloseTip}" IsChecked="{Binding Form.AutoClose}" Command="{Binding Commands.AutoCloseCommand}">
                        <TextBlock x:Name="tbAutoClose" Text="{ext:Localization Main101_btnCloseAuto}" VerticalAlignment="Top" FontSize="8" Width="78" Foreground="White" Height="9" Margin="0,3,0,0"/>
                    </CheckBox>
                </Grid>
            </Expander>

            <Label Content="XileTrade" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="16" FontFamily="{StaticResource LithosProRegular}" FontWeight="Bold"/>
            <TextBlock x:Name="tbPriceTime" d:Text="time" HorizontalAlignment="Right" VerticalAlignment="Top" RenderTransformOrigin="0.571,2.792" FontFamily="Consolas" FontSize="10" Foreground="#FFB2B0B0" Margin="0,6,78,0" Text="{Binding Form.PriceTime}"/>
            <Button x:Name="btnReduce" HorizontalAlignment="Left" Margin="476,-2,0,0" VerticalAlignment="Top" Width="34" Height="28">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Commands.UpdateMinimizedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource GrayBg}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <Rectangle x:Name="btnReduceShape" Stroke="White" StrokeThickness="2" Width="12" Height="2">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Form.Minimized}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="2" To="14" Duration="0:0:0.1"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" From="12" To="20" Duration="0:0:0.1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="14" To="2" Duration="0:0:0.2"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" From="20" To="12" Duration="0:0:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <!-- d:Width="12" d:Height="2"-->
                </Button.Content>
            </Button>
            <Button x:Name="btnExit" HorizontalAlignment="Left" Margin="513,-2,0,0" VerticalAlignment="Top" Width="34" Height="28" Command="{Binding TrayCommands.CloseApplicationCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource RedBg}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DarkBg}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <Grid>
                        <Rectangle Width="12" Height="2" Stroke="White" StrokeThickness="2">
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="-45"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                        <Rectangle Width="12" Height="2" Stroke="White" StrokeThickness="2">
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="45"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                    </Grid>
                </Button.Content>
            </Button>
            <Grid Margin="12,30,12,10">
                <TextBlock x:Name="tkItemName" Panel.ZIndex="2" HorizontalAlignment="Left" Margin="4,4,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20" Width="Auto" d:Foreground="LimeGreen" FontFamily="{StaticResource LithosProRegular}" FontWeight="ExtraBlack" d:Text="Item Name" Text="{Binding Form.ItemName}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Foreground" Value="White"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Form.ItemNameColor}" Value="Gold">
                                    <Setter Property="Foreground" Value="Gold"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Form.ItemNameColor}" Value="DeepSkyBlue">
                                    <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Form.ItemNameColor}" Value="Green">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Form.ItemNameColor}" Value="Peru">
                                    <Setter Property="Foreground" Value="Peru"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock x:Name="tkBaseType" Panel.ZIndex="2" HorizontalAlignment="Left" Margin="6,29,0,0" TextWrapping="Wrap" d:FontSize="16" VerticalAlignment="Top" Width="Auto" FontFamily="{StaticResource LithosProRegular}" FontWeight="Bold"  Height="32" d:Text="base type" Text="{Binding Form.ItemBaseType}" FontSize="{Binding Form.BaseTypeFontSize}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Foreground" Value="#FFDBDCDC"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Form.ItemBaseTypeColor}" Value="Teal">
                                    <Setter Property="Foreground" Value="Teal"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Form.ItemBaseTypeColor}" Value="Moccasin">
                                    <Setter Property="Foreground" Value="Moccasin"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <StackPanel Height="20" Margin="7,60,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal">
                    <Button x:Name="btnWiki" Margin="0,0,12,0" Content="Wiki" Height="20" Width="46" Command="{Binding Commands.OpenWikiCommand}" FontFamily="{StaticResource LithosProRegular}" ToolTip="{ext:Localization Main106_btnWikiTip}" Visibility="{Binding Form.Visible.Wiki, Converter={StaticResource bool2VisibilityConverter}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="false">
                                        <Setter Property="Foreground" Value="#FFB2B0B0"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="{StaticResource LimeGreenBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnPoedb" Margin="0,0,12,0" Content="db" Height="20" Width="35" Command="{Binding Commands.OpenPoeDbCommand}" FontFamily="{StaticResource LithosProRegular}" ToolTip="{ext:Localization Main185_btnDbTip}" Visibility="{Binding Form.Visible.BtnPoeDb, Converter={StaticResource bool2VisibilityConverter}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="false">
                                        <Setter Property="Foreground" Value="#FFB2B0B0"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="{StaticResource LimeGreenBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnNinja" Height="20" d:Width="90" Command="{Binding Commands.OpenNinjaCommand}" ToolTip="{ext:Localization Main105_btnNinjaTip}" Width="{Binding NinjaButton.BtnWidth}" Visibility="{Binding Form.Visible.Ninja, Converter={StaticResource bool2VisibilityConverter}}">
                        <Grid Margin="0,0,0,0" Width="119">
                            <TextBlock x:Name="lbNinja" Text="ninja:" HorizontalAlignment="Left" VerticalAlignment="Center" Width="55" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Margin="-2,0,0,0" Height="14">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnNinja}" Value="false">
                                                <Setter Property="Foreground" Value="#FFB2B0B0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnNinja}" Value="true">
                                                <Setter Property="Foreground" Value="{StaticResource LimeGreenBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock x:Name="valNinja" d:Text="x" HorizontalAlignment="Left" VerticalAlignment="Center" d:Width="72" FontFamily="Consolas" TextAlignment="Right" Margin="-16,0,0,0" Foreground="White" Text="{Binding NinjaButton.Price}" Width="{Binding NinjaButton.ValWidth}"/>
                            <Image x:Name="imgNinja" d:Source="{StaticResource ImgChaos}" d:Margin="63,0,38,-1" Tag="{Binding NinjaButton.ImageName}" Margin="{Binding NinjaButton.ImgLeftRightMargin, Converter={StaticResource ninjaMarginConverter}}">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag, ElementName=imgNinja}" Value="chaos">
                                                <Setter Property="Source" Value="{StaticResource ImgChaos}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Tag, ElementName=imgNinja}" Value="exalt">
                                                <Setter Property="Source" Value="{StaticResource ImgExalt}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Tag, ElementName=imgNinja}" Value="divine">
                                                <Setter Property="Source" Value="{StaticResource ImgDivine}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Grid>
                    </Button>
                </StackPanel>

                <TextBlock x:Name="lbLeague" Text="{ext:Localization Main057_lbLeague}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="366,6,0,0" RenderTransformOrigin="0.422,0.962" FontFamily="{StaticResource LithosProRegular}" FontSize="10" Foreground="#FFB2B0B0" Width="90" TextAlignment="Center" Panel.ZIndex="2"/>
                <ComboBox x:Name="cbLeague" HorizontalAlignment="Left" Margin="366,20,0,0" VerticalAlignment="Top" Height="20" Width="90" RenderTransformOrigin="0.594,-0.439"   Tag="combobox" FontFamily="{StaticResource FontinSmallCaps}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="10"
                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.League}" SelectedIndex="{Binding Form.LeagueIndex}"/>
                <TextBlock x:Name="lbMarket" Text="{ext:Localization Main058_lbMarket}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="464,6,0,0" RenderTransformOrigin="0.422,0.962" FontFamily="{StaticResource LithosProRegular}" FontSize="10" Foreground="#FFB2B0B0" Width="56" TextAlignment="Center" Panel.ZIndex="2"/>
                <ComboBox x:Name="cbMarket" HorizontalAlignment="Left" Margin="464,20,0,0" VerticalAlignment="Top" Height="20" Width="56" RenderTransformOrigin="0.594,-0.439"   Tag="combobox" FontFamily="{StaticResource FontinSmallCaps}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="10"
                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Market}" SelectedIndex="{Binding Form.MarketIndex}"/>

                <Border x:Name="bdDps" Background="{DynamicResource LightBg}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="Auto" Height="27" BorderThickness="1" CornerRadius="3" BorderBrush="{DynamicResource DarkBg}" Margin="0,52,36,0" Visibility="{Binding Form.Visible.Damage, Converter={StaticResource bool2VisibilityConverter}}">
                    <Grid Margin="0,-1,-1,-1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="lbDPS1" d:Text="Total dps" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Consolas" Visibility="Visible" Foreground="LimeGreen" FontSize="16" FontWeight="ExtraBold" Margin="0,-2,0,0" Text="{Binding Form.Dps}" ToolTip="{Binding Form.DpsTip}"/>
                    </Grid>
                </Border>

                <Grid Margin="294,42,0,0" Width="209" Height="42" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding Form.Visible.BulkLastSearch, Converter={StaticResource bool2VisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="tbBulkSearch" Text="{ext:Localization Main153_lastSearch}" Grid.Column="1" FontFamily="{StaticResource LithosProRegular}" HorizontalAlignment="Center" FontSize="10" Foreground="#FFB2B0B0" Margin="0,2,0,20"/>
                    <Border x:Name="bdGetPay" Background="{DynamicResource LightBg}"  HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="1" Width="Auto" Height="27" Visibility="Visible" BorderThickness="1" CornerRadius="3" BorderBrush="{DynamicResource DarkBg}" Margin="0,15,0,0">
                        <Grid Margin="0,-1,-1,-1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" MaxWidth="65"/>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="Auto" MaxWidth="65"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="lbGet2" Text="{ext:Localization Main092_lbGet}" Grid.Column="2" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="0,5,0,3"/>
                            <Image x:Name="imgGetLoad2" Grid.Column="4" Height="24" Width="24" d:Source="{StaticResource ImgChaos}" Source="{Binding Form.Bulk.Get.ImageLast}" ToolTip="{Binding Form.Bulk.Get.ImageLastToolTip}" Tag="{Binding Form.Bulk.Get.ImageLastTag}"/>
                            <TextBlock Text=":" Grid.Column="5" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="12" Foreground="#FFB2B0B0" Margin="0,6,0,2"/>
                            <TextBlock x:Name="lbPay2" Text="{ext:Localization Main093_lbPay}" Grid.Column="8" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="0,5,0,1"/>
                            <Image x:Name="imgPayLoad2" Grid.Column="6" Height="24" Width="24" d:Source="{StaticResource ImgExalt}" Source="{Binding Form.Bulk.Pay.ImageLast}" ToolTip="{Binding Form.Bulk.Pay.ImageLastToolTip}" Tag="{Binding Form.Bulk.Pay.ImageLastTag}"/>
                        </Grid>
                    </Border>
                </Grid>

                <Button x:Name="btnSearch" Content="{ext:Localization Main098_btnSearch}" HorizontalAlignment="Left" Margin="11,580,0,5"  Width="177" Height="35" FontWeight="Bold" d:IsEnabled="True" Command="{Binding Commands.OpenSearchCommand}" FontFamily="{StaticResource LithosProRegular}" FontSize="16" ToolTip="{ext:Localization Main107_btnSearchTip}">
                    <!-- Click="BtnSearch"-->
                    <!-- IsEnabled="{Binding Form.Button.SearchIsEnabled}"-->
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, ElementName=tabItemBasic}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, ElementName=tabItemDetailed}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, ElementName=tabItemExchange}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Bulk.Pay.CurrencyIndex, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Bulk.Get.CurrencyIndex, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, ElementName=tabItemShop}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Shop.GetList.Count, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Shop.PayList.Count, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--
                <Button x:Name="btnDonate" HorizontalAlignment="Left" Margin="226,580,0,5" Width="119" Height="35" Command="{Binding Commands.OpenDonateUrl}" ToolTip="{ext:Localization Main108_btnDonateTip}" Visibility="Hidden">
                    <Grid Margin="0,0,0,0" Width="115">
                        <Image x:Name="imgPaypal" Source="pack://application:,,,/XileTrade;component/Assets/Png/paypal.png" Height="25" Margin="2,1,81,2"/>
                        <TextBlock x:Name="lbDonate" Text="{ext:Localization Main099_lbDonate}" HorizontalAlignment="Left" Margin="29,0,0,0" VerticalAlignment="Center" FontSize="16" Width="86" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" FontWeight="Bold" TextAlignment="Center"/>
                    </Grid>
                </Button>
                -->
                <Button x:Name="btnClose" Content="{ext:Localization Main100_btnClose}" HorizontalAlignment="Left" Margin="379,580,0,5" Width="130" Height="35" FontWeight="Bold" FontFamily="{StaticResource LithosProRegular}" FontSize="16" ToolTip="{ext:Localization Main109_btnCloseTip}" Command="{Binding TrayCommands.CloseApplicationCommand}"/>

                <TabControl x:Name="tabControl1" BorderThickness="1" Height="476" Margin="1,93,0,0" VerticalAlignment="Top" TabStripPlacement="Bottom" HorizontalAlignment="Left" Width="520" BorderBrush="{DynamicResource DarkBg}" Background="{DynamicResource LightBg}">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabPanel}">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                    </TabControl.Resources>
                    <!--Quick Search-->
                    <TabItem x:Name="tabItemBasic" Header="{ext:Localization Main084_tabItemBasic}" FontFamily="{StaticResource LithosProRegular}"  d:IsSelected="True" IsSelected="{Binding Form.Tab.QuickSelected}">
                        <!-- IsEnabled="{Binding Form.Tab.QuickEnable}"-->
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.QuickEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="4,0,-4,0">
                            <Grid Margin="2,4,0,162">
                                <Grid x:Name="lblHeader" Margin="-2,-5,0,269" Visibility="{Binding Form.Visible.HeaderMod, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock Text="{ext:Localization Main059_lbAffix}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="60" TextAlignment="Center" Height="17" />
                                    <TextBlock Text="{ext:Localization Main060_lbMod}" HorizontalAlignment="Left" Margin="80,0,0,0" VerticalAlignment="Center"  FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="265" TextAlignment="Center" Height="17"/>
                                    <TextBlock Text="{ext:Localization General093_lbSearch}" HorizontalAlignment="Left" Margin="376,0,0,0" VerticalAlignment="Center" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="84" TextAlignment="Center" Height="17"/>
                                    <TextBlock Text="{ext:Localization Main094_lbTier}" HorizontalAlignment="Left" Margin="331,0,0,0" VerticalAlignment="Center" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Width="51" Height="17"/>
                                    <TextBlock Text="{ext:Localization Main064_lbSelect}" HorizontalAlignment="Left" Margin="460,0,0,0" VerticalAlignment="Center" FontSize="10" Width="50" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Height="17"/>
                                    <TextBlock Text="{ext:Localization Main061_lbMin}" HorizontalAlignment="Left" Margin="390,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="41" TextAlignment="Center" Height="17" Visibility="Hidden"/>
                                    <TextBlock Text="{ext:Localization Main062_lbCurrent}" HorizontalAlignment="Left" Margin="341,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" TextAlignment="Center" Width="51" Height="17" Visibility="Hidden"/>
                                    <TextBlock Text="{ext:Localization Main063_lbMax}" HorizontalAlignment="Left" Margin="433,-5,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Width="41" TextAlignment="Center" Height="17" Visibility="Hidden"/>
                                </Grid>
                                <Grid Margin="0,8,0,0">
                                    <ListBox x:Name="listMods" BorderThickness="0" Padding="0" Margin="-5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Background="Transparent" HorizontalContentAlignment="Stretch" Height="272" Width="511" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                             ItemsSource="{Binding Form.ModLine}" Focusable="False">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                                                <Setter Property="Focusable" Value="False" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel>
                                                </VirtualizingStackPanel>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <!-- DataType="{x:Type m:ModLineModel}" -->
                                                <Grid Height="25" Margin="0">
                                                    <ComboBox x:Name="affix" HorizontalAlignment="Left" Margin="0,1,0,0" VerticalAlignment="Top" Width="60" Height="22" Tag="combobox" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"   
                                                                       VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Affix}" SelectedIndex="{Binding AffixIndex}">
                                                        <ComboBox.Resources>
                                                            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                                                        </ComboBox.Resources>
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Name}">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                                            <Setter Property="Foreground" Value="LightGray"/>
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithCraftedConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithCrucibleConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="IndianRed"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithEnchantConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="SpringGreen"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithFracturedConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="{StaticResource FractureBrush}"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithImplicitConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="DarkKhaki"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithPseudoConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="PowderBlue"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithScourgeConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="Orange"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithUltimatumConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="Tomato"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithVeiledConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="DimGray"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding ID, Converter={StaticResource startWithRuneConverter}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="GreenYellow"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding IsUniqueExplicit}" Value="True">
                                                                                    <Setter Property="Foreground" Value="Peru"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding IsCorruptionImplicit}" Value="True">
                                                                                    <Setter Property="Foreground" Value="Red"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                        <ComboBox.Style>
                                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding AffixCanBeEnabled}" Value="False">
                                                                        <Setter Property="IsEnabled" Value="{Binding AffixEnable}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding AffixCanBeEnabled}" Value="True">
                                                                        <Setter Property="IsEnabled" Value="{Binding ElementName=select, Path=IsChecked}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ComboBox.Style>
                                                    </ComboBox>
                                                    <Image x:Name="modimg" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="20" Margin="60,3,0,0" Tag="tag" Visibility="{Binding TagVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                                        <!-- ToolTip="{Binding Tag}"-->
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Setter Property="Source" Value="{StaticResource ImgPillGrey}"/>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Source" Value="{StaticResource ImgPillGold}"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                        <Image.ToolTip>
                                                            <ItemsControl ItemsSource="{Binding TagTip}">
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <StackPanel Orientation="Horizontal"/>
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBox Text="{Binding Text}" FontWeight="Bold">
                                                                            <TextBox.Style>
                                                                                <Style TargetType="{x:Type TextBox}">
                                                                                    <Setter Property="Foreground" Value="White"/>
                                                                                    <Setter Property="Background" Value="#595959"/>
                                                                                    <Setter Property="BorderBrush" Value="#595959"/>
                                                                                    <Setter Property="Margin" Value="4,0,0,0"/>
                                                                                    <Setter Property="Padding" Value="2,2,2,1"/>
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Attack">
                                                                                            <Setter Property="Foreground" Value="{StaticResource AttackTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Physical">
                                                                                            <Setter Property="Foreground" Value="{StaticResource PhysicalTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Caster">
                                                                                            <Setter Property="Foreground" Value="{StaticResource CasterTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Speed">
                                                                                            <Setter Property="Foreground" Value="{StaticResource SpeedTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Critical">
                                                                                            <Setter Property="Foreground" Value="{StaticResource CriticalTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Fire">
                                                                                            <Setter Property="Foreground" Value="{StaticResource FireTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Cold">
                                                                                            <Setter Property="Foreground" Value="{StaticResource ColdTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Lightning">
                                                                                            <Setter Property="Foreground" Value="{StaticResource LightningTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Chaos">
                                                                                            <Setter Property="Foreground" Value="{StaticResource ChaosTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Life">
                                                                                            <Setter Property="Foreground" Value="{StaticResource LifeTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Defences">
                                                                                            <Setter Property="Foreground" Value="{StaticResource DefencesTagBrush}"/>
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </TextBox.Style>
                                                                            <TextBox.Resources>
                                                                                <Style TargetType="{x:Type Border}">
                                                                                    <Setter Property="CornerRadius" Value="3"/>
                                                                                </Style>
                                                                            </TextBox.Resources>
                                                                        </TextBox>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                        </Image.ToolTip>
                                                    </Image>
                                                    <TextBox x:Name="mod" HorizontalAlignment="Left" Height="22" Margin="80,1,0,0" d:Text="" VerticalAlignment="Top" Width="260" IsReadOnly="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="12" AcceptsReturn="False" TextWrapping="NoWrap" Tag="mod" Text="{Binding Mod}" ToolTip="{Binding ModTooltip}" Visibility="{Binding ModVisible, Converter={StaticResource bool2VisibilityConverter}}" IsEnabled="{Binding ElementName=select, Path=IsChecked}">
                                                        <TextBox.Style>
                                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                        <Setter Property="Foreground" Value="White"/>
                                                                    </Trigger>
                                                                    <DataTrigger Binding="{Binding ModKind}" Value="DangerousMod">
                                                                        <Setter Property="Foreground" Value="Red"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding ModKind}" Value="RareMod">
                                                                        <Setter Property="Foreground" Value="Gold"/>
                                                                    </DataTrigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Foreground" Value="{StaticResource GrayForegoundBrush}"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                    <TextBox x:Name="modbis" HorizontalAlignment="Left" Height="22" Margin="80,1,0,0" d:Text="" VerticalAlignment="Top" Width="260" IsReadOnly="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="12"   Tag="mod" d:Opacity="0" d:Panel.ZIndex="-1" Text="{Binding ModBis}" ToolTip="{Binding ModBisTooltip}" Visibility="{Binding ModBisVisible, Converter={StaticResource bool2VisibilityConverter}}" IsEnabled="{Binding ElementName=select, Path=IsChecked}">
                                                        <TextBox.Style>
                                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                        <Setter Property="Foreground" Value="White"/>
                                                                    </Trigger>
                                                                    <DataTrigger Binding="{Binding ModKind}" Value="DangerousMod">
                                                                        <Setter Property="Foreground" Value="Red"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding ModKind}" Value="RareMod">
                                                                        <Setter Property="Foreground" Value="Gold"/>
                                                                    </DataTrigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Foreground" Value="{StaticResource GrayForegoundBrush}"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                        <!--<TextBox.Style>
                                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                                                <Setter Property="Foreground" Value="{Binding ModBrush}"/>
                                                                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                                                            </Style>
                                                        </TextBox.Style>-->
                                                    </TextBox>
                                                    <ComboBox x:Name="option" MaxDropDownHeight="250" HorizontalAlignment="Left" Margin="344,1,0,0" VerticalAlignment="Top" FontFamily="{StaticResource FontinSmallCaps}" Width="116" Height="22"   Tag="combobox" FontSize="12" VerticalContentAlignment="Center" HorizontalContentAlignment="Left"  d:Opacity="0" d:Panel.ZIndex="-1"
                                                            VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Option}" SelectedIndex="{Binding OptionIndex}" Visibility="{Binding OptionVisible, Converter={StaticResource bool2VisibilityConverter}}" IsEnabled="{Binding ElementName=select, Path=IsChecked}"/>
                                                    <ComboBox x:Name="optionID" HorizontalAlignment="Left" Margin="344,1,0,0" VerticalAlignment="Top" Width="2" Height="22"   Tag="combobox" FontSize="10" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Visibility="Hidden"
                                                            VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding OptionID}" SelectedIndex="{Binding OptionIndex}"/>

                                                    <Grid x:Name="grid_min" Height="22" Width="41" Margin="376,1,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding OptionVisible, Converter={StaticResource inverseBool2VisibilityConverter}}" IsEnabled="{Binding ElementName=select, Path=IsChecked}">
                                                        <TextBox x:Name="min" HorizontalAlignment="Left" Height="22" Width="41" d:Text="" VerticalAlignment="Top" Tag="textbox" FontFamily="Arial" TextAlignment="Center" Text="{Binding Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        <TextBlock x:Name="style_min" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="41" TextAlignment="Center" FontSize="10">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Text, ElementName=min}" Value="">
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Grid>
                                                    <Grid x:Name="grid_max" Margin="419,1,0,0" Height="22" Width="41" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding OptionVisible, Converter={StaticResource inverseBool2VisibilityConverter}}" IsEnabled="{Binding ElementName=select, Path=IsChecked}">
                                                        <TextBox x:Name="max" HorizontalAlignment="Left" Height="22" Width="41" d:Text="" VerticalAlignment="Top" Tag="textbox" FontFamily="Arial" TextAlignment="Center" Text="{Binding Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        <TextBlock x:Name="style_max" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="41" TextAlignment="Center" FontSize="10">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Text, ElementName=max}" Value="">
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Grid>

                                                    <CheckBox x:Name="select" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="{Binding Selected}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                        </CheckBox.LayoutTransform>
                                                        <CheckBox.Style>
                                                            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                                                                <Setter Property="Margin" Value="475,3,0,0"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ElementName=listMods, Path=ItemsSource, Converter={StaticResource greaterThanTenConverter}}" Value="true">
                                                                        <Setter Property="Margin" Value="465,3,0,0"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </CheckBox.Style>
                                                    </CheckBox>
                                                    <TextBlock x:Name="current" d:Text="" HorizontalAlignment="Left" Margin="340,1,0,0" VerticalAlignment="Top" FontFamily="Arial" Height="22" FontWeight="Bold" Width="30" TextAlignment="Center" Visibility="Hidden" Text="{Binding Current}"/>
                                                    <TextBlock x:Name="tier" d:Text="" HorizontalAlignment="Left" Margin="340,5,0,0" VerticalAlignment="Top" FontFamily="Arial" FontWeight="Bold" Width="35" TextAlignment="Center" d:Tag="null" Tag="{Binding TierTag}" Text="{Binding Tier}"> <!-- Foreground="#FFB2B0B0"-->
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                                <Setter Property="Foreground" Value="White"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ElementName=option, Path=Visibility}" Value="Visible">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding TierKind}" Value="R">
                                                                        <Setter Property="Foreground" Value="{StaticResource EnchantAndCraftBrush}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding TierKind}" Value="I">
                                                                        <Setter Property="Foreground" Value="DarkKhaki"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding TierKind}" Value="P">
                                                                        <Setter Property="Foreground" Value="{StaticResource PrefixBrush}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding TierKind}" Value="S">
                                                                        <Setter Property="Foreground" Value="{StaticResource SuffixBrush}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding TierKind}" Value="U">
                                                                        <Setter Property="Foreground" Value="{StaticResource UniqueWebBrush}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                        <TextBlock.ToolTip>
                                                            <ItemsControl ItemsSource="{Binding TierTip}">
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <StackPanel Orientation="Horizontal"/>
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Text}" Padding="0" Margin="4,0,0,0" FontWeight="Bold">
                                                                            <TextBlock.Style>
                                                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                                                    <Setter Property="Foreground" Value="White"/>
                                                                                    <!-- todo add triggers -->
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger Binding="{Binding Kind}" Value="Suffix">
                                                                                            <Setter Property="Foreground" Value="White"/>
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </TextBlock.Style>
                                                                        </TextBlock>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                        </TextBlock.ToolTip>
                                                    </TextBlock>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                    <d:Grid Height="25" Margin="-3,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                                        <ComboBox x:Name="affix_" HorizontalAlignment="Left" Margin="0,1,0,0" VerticalAlignment="Top" Width="60" SelectedIndex="0" Height="22" Tag="combobox" DropDownClosed="AffixColorChanged" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"   
                                                            VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding }">
                                            <ComboBox.Resources>
                                                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                                            </ComboBox.Resources>
                                            <ComboBox.Style>
                                                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsDropDownOpen" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Style>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <ComboBoxItem/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Image x:Name="modimg_" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="20"   Source="{StaticResource ImgPillGrey}" Margin="60,3,0,0" Tag="tag" >
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Source" Value="{StaticResource ImgPillGrey}"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Source" Value="{StaticResource ImgPillGold}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBox x:Name="mod_" HorizontalAlignment="Left" Height="22" Margin="80,1,0,0"  Text="" VerticalAlignment="Top" Width="260" IsReadOnly="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="12" AcceptsReturn="False" TextWrapping="NoWrap"  Tag="mod" />
                                        <TextBox x:Name="modbis_" HorizontalAlignment="Left" Height="22" Margin="80,1,0,0"  Text="" VerticalAlignment="Top" Width="260" IsReadOnly="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="12" Visibility="Visible"  Tag="mod" />
                                        <ComboBox x:Name="option_" MaxDropDownHeight="250" HorizontalAlignment="Left" Margin="349,1,0,0" VerticalAlignment="Top" FontFamily="{StaticResource FontinSmallCaps}" Width="111" SelectedIndex="0" Height="22"   Tag="combobox" FontSize="12" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Visibility="Hidden" 
                                                            VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />
                                        <ComboBox x:Name="optionID_" HorizontalAlignment="Left" Margin="349,1,0,0" VerticalAlignment="Top" Width="2" SelectedIndex="0" Height="22"   Tag="combobox" FontSize="10" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Visibility="Hidden"
                                                            VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />

                                        <Grid x:Name="grid_min_" Height="22" Width="41" Margin="376,1,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <TextBox x:Name="min_" HorizontalAlignment="Left" Height="22" Width="41" Text="" VerticalAlignment="Top" Tag="textbox" FontFamily="Arial" TextAlignment="Center" />
                                            <TextBlock x:Name="style_min_" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="41" TextAlignment="Center" FontSize="10">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Text, ElementName=min_}" Value="">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                        <Grid x:Name="grid_max_" Margin="419,1,0,0" Height="22" Width="41" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <TextBox x:Name="max_" HorizontalAlignment="Left" Height="22" Width="41" Text="" VerticalAlignment="Top" Tag="textbox" FontFamily="Arial" TextAlignment="Center" />
                                            <TextBlock x:Name="style_max_" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="41" TextAlignment="Center" FontSize="10">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Text, ElementName=max_}" Value="">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>

                                        <CheckBox x:Name="select_" HorizontalAlignment="Left" Margin="475,3,0,0" VerticalAlignment="Top">
                                            <CheckBox.LayoutTransform>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                            </CheckBox.LayoutTransform>
                                        </CheckBox>
                                        <TextBlock x:Name="current_" Text="" HorizontalAlignment="Left" Margin="340,1,0,0" VerticalAlignment="Top" FontFamily="Arial" Foreground="#FFB2B0B0" Height="22" FontWeight="Bold" Width="35" TextAlignment="Center" Visibility="Hidden" />
                                        <TextBlock x:Name="tier_" Text="" HorizontalAlignment="Left" Margin="340,5,0,0" VerticalAlignment="Top" FontFamily="Arial" Foreground="#FFB2B0B0" FontWeight="Bold" Width="35" TextAlignment="Center" Tag="null" >
                                            <!--
                                            <TextBlock.ToolTip>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <TextBox Text="{Binding }"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </TextBlock.ToolTip>
                                            -->
                                        </TextBlock>
                                    </d:Grid>

                                </Grid>
                            </Grid>

                            <Border BorderBrush="{DynamicResource DarkBg}" BorderThickness="1" HorizontalAlignment="Left" Height="1" Margin="0,286,0,0" VerticalAlignment="Top" Width="506" RenderTransformOrigin="0.5,0.5" />
                            <Border x:Name="borderSettings" Margin="0,292,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" d:BorderThickness="1" BorderBrush="{DynamicResource DarkBg}" Height="87" Width="260" Visibility="{Binding Form.Visible.PanelForm, Converter={StaticResource bool2VisibilityConverter}}">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderThickness" Value="1,1,1,1" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Panel.UseBorderThickness}" Value="false">
                                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <ScrollViewer FlowDirection="RightToLeft" Background="{x:Null}" Margin="0,0,0,0" VerticalScrollBarVisibility="Auto"  Height="85" Width="258">
                                    <Grid x:Name="gridRow" FlowDirection="LeftToRight">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="42"/>
                                            <RowDefinition x:Name="rowArmour" Height="43" MaxHeight="{Binding Form.Panel.Row.ArmourMaxHeight}"/>
                                            <RowDefinition x:Name="rowWeapon" Height="43" MaxHeight="{Binding Form.Panel.Row.WeaponMaxHeight}"/>
                                            <RowDefinition x:Name="rowTotal" Height="43" MaxHeight="{Binding Form.Panel.Row.TotalMaxHeight}"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="colScroll" Width="14" MaxWidth="{Binding Form.Panel.Col.FirstMaxWidth}"/>
                                            <ColumnDefinition Width="79"/>
                                            <ColumnDefinition Width="79"/>
                                            <ColumnDefinition x:Name="colLast" Width="86" MinWidth="{Binding Form.Panel.Col.LastMinWidth}"/>
                                        </Grid.ColumnDefinitions>
                                        <Border BorderThickness="0,0,0,0" BorderBrush="{DynamicResource DarkBg}" Grid.ColumnSpan="4" Grid.Row="0" />
                                        <Border x:Name="borderRow1" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource DarkBg}" Grid.ColumnSpan="4" Grid.Row="1"/>
                                        <Border x:Name="borderRow2" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource DarkBg}" Grid.ColumnSpan="4" Grid.Row="2"/>
                                        <Border x:Name="borderRow3" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource DarkBg}" Grid.ColumnSpan="4" Grid.Row="3"/>
                                        <Grid x:Name="panelLevel" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="1">
                                            <CheckBox x:Name="ckLv" HorizontalAlignment="Left" Margin="7,3,0,0" VerticalAlignment="Top" Width="94" Height="13" IsChecked="{Binding Form.Panel.Common.ItemLevel.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbiLevel" d:Text="{ext:Localization Main065_tbiLevel}" d:ToolTip="{ext:Localization Main065_tbiLevel}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="78" Text="{Binding Form.Panel.Common.ItemLevelLabel}" ToolTip="{Binding Form.Panel.Common.ItemLevelLabel}" IsEnabled="{Binding ElementName=ckLv, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbLvMin" Margin="5,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbLvMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34" Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Common.ItemLevel.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckLv, Path=IsChecked}">
                                                    <!--
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseWheel">
                                                            <i:InvokeCommandAction Command="{Binding Commands.WheelAdjust}" EventArgsParameterPath="{Binding Form.Panel.Common.ItemLevel.Min}" PassEventArgsToCommand="True"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    -->
                                                </TextBox>
                                                <TextBlock x:Name="style_tbLvMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbLvMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbLvMax" Margin="40,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbLvMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Common.ItemLevel.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckLv, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbLvMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbLvMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <Grid x:Name="panelQuality" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0" Grid.Column="2" Visibility="{Binding Form.Visible.Quality, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="ckQuality" HorizontalAlignment="Left" Margin="7,3,0,0" VerticalAlignment="Top" Width="82" IsChecked="{Binding Form.Panel.Common.Quality.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbQuality" Text="{ext:Localization Main066_tbQuality}" ToolTip="{ext:Localization Main066_tbQuality}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="66" IsEnabled="{Binding ElementName=ckQuality, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbQualityMin" Margin="5,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbQualityMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Common.Quality.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckQuality, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbQualityMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbQualityMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbQualityMax" Margin="40,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbQualityMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Common.Quality.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckQuality, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbQualityMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbQualityMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        
                                        <!-- HIDDEN PARTS-->
                                        <Grid x:Name="panelResolve" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0" Grid.Column="2" Visibility="{Binding Form.Visible.SanctumFields, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="ckResolve" HorizontalAlignment="Left" Margin="7,3,0,0" VerticalAlignment="Top" Width="82" IsChecked="{Binding Form.Panel.Sanctum.Resolve.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbResolve" Text="{ext:Localization General114_SanctumResolve}" ToolTip="{ext:Localization General114_SanctumResolve}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="66" IsEnabled="{Binding ElementName=ckResolve, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbResolveMin" Margin="5,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbResolveMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Sanctum.Resolve.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckResolve, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbResolveMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbResolveMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbResolveMax" Margin="40,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbResolveMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Sanctum.Resolve.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckResolve, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbResolveMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbResolveMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        <Grid x:Name="panelMaxResolve" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0" Grid.Column="3" Visibility="{Binding Form.Visible.SanctumFields, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="ckMaxResolve" HorizontalAlignment="Left" Margin="7,3,0,0" VerticalAlignment="Top" Width="82" IsChecked="{Binding Form.Panel.Sanctum.MaximumResolve.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbMaxResolve" Text="{ext:Localization General124_SanctumMaxResolve}" ToolTip="{ext:Localization General124_SanctumMaxResolve}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="66" IsEnabled="{Binding ElementName=ckMaxResolve, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbMaxResolveMin" Margin="5,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMaxResolveMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Sanctum.MaximumResolve.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckMaxResolve, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbMaxResolveMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMaxResolveMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbMaxResolveMax" Margin="40,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMaxResolveMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Sanctum.MaximumResolve.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckMaxResolve, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbMaxResolveMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMaxResolveMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <Grid x:Name="panelRuneSocket" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0" Grid.Column="3" Visibility="{Binding Form.Visible.RuneSockets, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="ckRuneSocket" HorizontalAlignment="Left" Margin="7,3,0,0" VerticalAlignment="Top" Width="82" IsChecked="{Binding Form.Panel.Common.RuneSockets.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbMaxRuneSocket" Text="{ext:Localization Main227_tbRuneSockets}" ToolTip="{ext:Localization Main228_tbRuneSocketsTip}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="66" IsEnabled="{Binding ElementName=ckRuneSocket, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbRuneSocketMin" Margin="5,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbRuneSocketMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Common.RuneSockets.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckRuneSocket, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbRuneSocketMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbRuneSocketMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbRuneSocketMax" Margin="40,16,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbRuneSocketMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Common.RuneSockets.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ckRuneSocket, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbRuneSocketMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbRuneSocketMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <!-- HIDDEN PARTS-->
                                        <Grid x:Name="panelHiddable" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0" Grid.Column="3" d:Opacity="0" d:Panel.ZIndex="-1" Visibility="{Binding Form.Visible.HiddablePanel, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="SynthesisBlight" HorizontalAlignment="Left" Margin="0,3,0,0" VerticalAlignment="Top" Width="104" d:Opacity="0" d:Panel.ZIndex="-1" IsChecked="{Binding Form.Panel.SynthesisBlight}" Visibility="{Binding Form.Visible.SynthesisBlight, Converter={StaticResource bool2VisibilityConverter}}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbSynthesisBlight" d:Text="Synthblight" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="12" Width="88" Text="{Binding Form.Panel.SynthesisBlightLabel}" IsEnabled="{Binding ElementName=SynthesisBlight, Path=IsChecked}"/>
                                            </CheckBox>
                                            <CheckBox x:Name="BlightRavaged" HorizontalAlignment="Left" Margin="0,16,0,0" VerticalAlignment="Top" Width="104" d:Opacity="0" d:Panel.ZIndex="-1" IsChecked="{Binding Form.Panel.BlighRavaged}" Visibility="{Binding Form.Visible.BlightRavaged, Converter={StaticResource bool2VisibilityConverter}}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbBlightRavaged" d:Text="BlightRavaged" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="12" Width="88" Text="{Binding Form.Panel.BlighRavagedtLabel}" IsEnabled="{Binding ElementName=BlightRavaged, Path=IsChecked}"/>
                                            </CheckBox>
                                            <CheckBox x:Name="Scourged" HorizontalAlignment="Left" Margin="0,29,0,0" VerticalAlignment="Top" Width="104" d:Opacity="0" d:Panel.ZIndex="-1" IsChecked="{Binding Form.Panel.Scourged}" Visibility="{Binding Form.Visible.Scourged, Converter={StaticResource bool2VisibilityConverter}}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbScourged" d:Text="BlightRavaged" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="12" Width="88" Text="{Binding Form.Panel.ScourgedLabel}" IsEnabled="{Binding ElementName=Scourged, Path=IsChecked}"/>
                                            </CheckBox>
                                            <TextBlock x:Name="lbAlternate" Text="{ext:Localization Main145_lbAlternate}" ToolTip="{ext:Localization Main145_lbAlternate}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="81" FontFamily="{StaticResource LithosProRegular}" FontSize="10" TextAlignment="Center" Margin="0,2,0,0" d:Opacity="0" d:Panel.ZIndex="-1" Visibility="{Binding Form.Visible.AlternateGem, Converter={StaticResource bool2VisibilityConverter}}"/>
                                            <ComboBox x:Name="cbAlternate" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="3,16,0,0" VerticalAlignment="Top" Width="75" Height="22"   Tag="combobox" FontFamily="{StaticResource FontinSmallCaps}" d:Opacity="0" d:Panel.ZIndex="-1" Visibility="{Binding Form.Visible.AlternateGem, Converter={StaticResource bool2VisibilityConverter}}" SelectedIndex="{Binding Form.Panel.AlternateGemIndex}" ItemsSource="{Binding Form.Alternate}">
                                                <ComboBox.Resources>
                                                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                                                </ComboBox.Resources>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="DropDownClosed">
                                                        <i:InvokeCommandAction Command="{Binding Commands.ClearFocusCommand}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                
                                                <ComboBox.Style>
                                                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                        <Style.Triggers>
                                                            <Trigger Property="SelectedIndex" Value="0">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </Trigger>
                                                            <Trigger Property="IsDropDownOpen" Value="True">
                                                                <Setter Property="Foreground" Value="White"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ComboBox.Style>
                                            </ComboBox>
                                        </Grid>

                                        <Grid x:Name="panelSockets" Height="42" Width="86" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="0" Grid.Column="3" Visibility="{Binding Form.Visible.Sockets, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="ckSocket" HorizontalAlignment="Left" Margin="0,3,0,0" VerticalAlignment="Top" Width="109" Visibility="Visible" Grid.Row="0" IsChecked="{Binding Form.Panel.Common.Sockets.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbSockets" Text="{ext:Localization Main067_tbSockets}" ToolTip="{ext:Localization Main067_tbSockets}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="93" IsEnabled="{Binding ElementName=ckSocket, Path=IsChecked}"/>
                                            </CheckBox>
                                            <TextBlock x:Name="lbAmp" Text="-" HorizontalAlignment="Left" Margin="40,20,0,0" VerticalAlignment="Top" TextAlignment="Center" Width="5" Visibility="Visible" FontFamily="{StaticResource FontinSmallCaps}"/>
                                            <TextBox x:Name="tbSocketMin" HorizontalAlignment="Left" Height="22" Margin="5,16,0,0" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="16"  Tag="textbox" Visibility="Visible" FontFamily="Arial"  IsEnabled="{Binding ElementName=ckSocket, Path=IsChecked}" Grid.Row="0" Text="{Binding Form.Panel.Common.Sockets.SocketMin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBox x:Name="tbSocketMax" HorizontalAlignment="Left" Height="22" Margin="22,16,0,0" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="16"  Tag="textbox" Visibility="Visible" FontFamily="Arial"  IsEnabled="{Binding ElementName=ckSocket, Path=IsChecked}" Grid.Row="0" Text="{Binding Form.Panel.Common.Sockets.SocketMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBox x:Name="tbLinksMin" HorizontalAlignment="Left" Height="22" Margin="45,16,0,0" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="16"  Tag="textbox" Visibility="Visible" FontFamily="Arial"  IsEnabled="{Binding ElementName=ckSocket, Path=IsChecked}" Grid.Row="0" Text="{Binding Form.Panel.Common.Sockets.LinkMin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBox x:Name="tbLinksMax" HorizontalAlignment="Left" Height="22" Margin="64,16,0,0" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="16"  Tag="textbox" Visibility="Visible" FontFamily="Arial"  IsEnabled="{Binding ElementName=ckSocket, Path=IsChecked}" Grid.Row="0" Text="{Binding Form.Panel.Common.Sockets.LinkMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>

                                        <!-- WARD PARTS-->
                                        <Grid x:Name="panelWard" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" d:Opacity="0" d:Panel.ZIndex="-1" Visibility="{Binding Form.Visible.Ward, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbWard" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="93" Height="13" IsChecked="{Binding Form.Panel.Defense.Ward.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbWard" Text="{ext:Localization General095_Ward}" ToolTip="{ext:Localization General095_Ward}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="77" IsEnabled="{Binding ElementName=cbWard, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbWardMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbWardMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Defense.Ward.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=cbWard, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbWardMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbWardMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbWardMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbWardMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Defense.Ward.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=cbWard, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbWardMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbWardMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <!-- ARMOUR PARTS-->
                                        <Grid x:Name="panelArmour" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" Visibility="{Binding Form.Visible.Armour, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbAr" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="93" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Defense.Armour.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbArmour" Text="{ext:Localization Main068_tbArmour}" ToolTip="{ext:Localization Main068_tbArmour}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="77" IsEnabled="{Binding ElementName=cbAr, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbArMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbArMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Defense.Armour.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=cbAr, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbArMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbArMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbArMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbArMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Defense.Armour.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=cbAr, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbArMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbArMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        
                                        <!-- HIDDEN PART -->
                                        <Grid x:Name="panelInspiration" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" Visibility="{Binding Form.Visible.SanctumFields, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbInspiration" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="93" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Sanctum.Inspiration.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbInspiration" Text="{ext:Localization General115_SanctumInspiration}" ToolTip="{ext:Localization General115_SanctumInspiration}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="77" IsEnabled="{Binding ElementName=cbInspiration, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbInspirationMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbInspirationMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Sanctum.Inspiration.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=cbInspiration, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbInspirationMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbInspirationMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbInspirationMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbInspirationMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Sanctum.Inspiration.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=cbInspiration, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbInspirationMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbInspirationMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <!-- HIDDEN PART -->
                                        <Grid x:Name="panelMapQuantity" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" Visibility="{Binding Form.Visible.MapStats, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbMapQuantity" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="93" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Map.Quantity.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbMapQuantity" Text="{ext:Localization General133_Iiq}" ToolTip="{ext:Localization General133_Iiq}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="77" IsEnabled="{Binding ElementName=cbMapQuantity, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbMapQuantityMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMapQuantityMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Map.Quantity.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=cbMapQuantity, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbMapQuantityMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMapQuantityMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbMapQuantityMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMapQuantityMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial" Text="{Binding Form.Panel.Map.Quantity.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=cbMapQuantity, Path=IsChecked}"/>
                                                <TextBlock x:Name="style_tbMapQuantityMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMapQuantityMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <Grid x:Name="panelEnergy" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="2" Visibility="{Binding Form.Visible.Energy, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbEs" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="95" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Defense.Energy.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbEnergy" Text="{ext:Localization Main069_tbEnergy}" ToolTip="{ext:Localization Main069_tbEnergy}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="79" IsEnabled="{Binding ElementName=cbEs, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbEsMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbEsMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbEs, Path=IsChecked}" Text="{Binding Form.Panel.Defense.Energy.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbEsMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbEsMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbEsMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbEsMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbEs, Path=IsChecked}" Text="{Binding Form.Panel.Defense.Energy.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbEsMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbEsMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        
                                        <!-- HIDDEN PART -->
                                        <Grid x:Name="panelAureus" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="2" Visibility="{Binding Form.Visible.SanctumFields, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbAureus" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="95" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Sanctum.Aureus.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbAureus" Text="{ext:Localization General116_SanctumAureus}" ToolTip="{ext:Localization General116_SanctumAureus}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="79" IsEnabled="{Binding ElementName=cbAureus, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbAureusMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbAureusMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbAureus, Path=IsChecked}" Text="{Binding Form.Panel.Sanctum.Aureus.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbAureusMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbAureusMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbAureusMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbAureusMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbAureus, Path=IsChecked}" Text="{Binding Form.Panel.Sanctum.Aureus.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbAureusMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbAureusMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <!-- HIDDEN PART -->
                                        <Grid x:Name="panelMapRarity" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="2" Visibility="{Binding Form.Visible.MapStats, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbMapRarity" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="95" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Map.Rarity.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbMapRarity" Text="{ext:Localization General134_Iir}" ToolTip="{ext:Localization General134_Iir}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="79" IsEnabled="{Binding ElementName=cbMapRarity, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbMapRarityMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMapRarityMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMapRarity, Path=IsChecked}" Text="{Binding Form.Panel.Map.Rarity.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMapRarityMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMapRarityMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbMapRarityMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMapRarityMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMapRarity, Path=IsChecked}" Text="{Binding Form.Panel.Map.Rarity.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMapRarityMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMapRarityMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <Grid x:Name="panelEvasion" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="3" Visibility="{Binding Form.Visible.Evasion, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbEva" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="94" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Defense.Evasion.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbEvasion" Text="{ext:Localization Main070_tbEvasion}" ToolTip="{ext:Localization Main070_tbEvasion}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="78" IsEnabled="{Binding ElementName=cbEva, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbEvaMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbEvaMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbEva, Path=IsChecked}" Text="{Binding Form.Panel.Defense.Evasion.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbEvaMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbEvaMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbEvaMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbEvaMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbEva, Path=IsChecked}" Text="{Binding Form.Panel.Defense.Evasion.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbEvaMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbEvaMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        
                                        <!-- HIDDEN PARTS-->
                                        <Grid x:Name="panelMapPackSize" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" Grid.Column="3" Visibility="{Binding Form.Visible.MapStats, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbMapPackSize" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="94" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Map.PackSize.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbMapPackSize" Text="{ext:Localization General135_PackSize}" ToolTip="{ext:Localization General135_PackSize}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="78" IsEnabled="{Binding ElementName=cbMapPackSize, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbMapPackSizeMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMapPackSizeMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMapPackSize, Path=IsChecked}" Text="{Binding Form.Panel.Map.PackSize.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMapPackSizeMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMapPackSizeMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbMapPackSizeMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMapPackSizeMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMapPackSize, Path=IsChecked}" Text="{Binding Form.Panel.Defense.Evasion.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMapPackSizeMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMapPackSizeMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        
                                        <!-- HIDDEN PARTS-->
                                        <Grid x:Name="panelMapScarab" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="2" Grid.Column="1" Visibility="{Binding Form.Visible.MapStats, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbMapScarab" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="93" Height="13" IsChecked="{Binding Form.Panel.Map.MoreScarab.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbMapScarab" Text="{ext:Localization Main222_Scarab}" ToolTip="{ext:Localization General140_MoreScarabs}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="76" IsEnabled="{Binding ElementName=cbMapScarab, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbMapScarabMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMapScarabMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMapScarab, Path=IsChecked}" Text="{Binding Form.Panel.Map.MoreScarab.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMapScarabMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMapScarabMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbMapScarabMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMapScarabMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMapScarab, Path=IsChecked}" Text="{Binding Form.Panel.Map.MoreScarab.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMapScarabMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMapScarabMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        
                                        <!-- HIDDEN PARTS-->
                                        <Grid x:Name="panelMoreCurrency" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="2" Grid.Column="2" Visibility="{Binding Form.Visible.MapStats, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbMoreCurrency" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="95" Height="13" IsChecked="{Binding Form.Panel.Map.MoreCurrency.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbMoreCurrency" Text="{ext:Localization Main221_Currency}" ToolTip="{ext:Localization General139_MoreCurrency}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="78" IsEnabled="{Binding ElementName=cbMoreCurrency, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbMoreCurrencyMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMoreCurrencyMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMoreCurrency, Path=IsChecked}" Text="{Binding Form.Panel.Map.MoreCurrency.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMoreCurrencyMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMoreCurrencyMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbMoreCurrencyMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMoreCurrencyMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMoreCurrency, Path=IsChecked}" Text="{Binding Form.Panel.Map.MoreCurrency.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMoreCurrencyMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMoreCurrencyMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        
                                        <!-- HIDDEN PARTS-->
                                        <Grid x:Name="panelMoreDivCard" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="2" Grid.Column="3" Visibility="{Binding Form.Visible.MapStats, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbMoreDivCard" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="111" Height="13" IsChecked="{Binding Form.Panel.Map.MoreDivCard.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbMoreDivCard" Text="{ext:Localization Main223_DivCard}" ToolTip="{ext:Localization General142_MoreDivinationCards}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="95" IsEnabled="{Binding ElementName=cbMoreDivCard, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbMoreDivCardMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMoreDivCardMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34" Tag="textbox" FontFamily="Arial" IsEnabled="{Binding ElementName=cbMoreDivCard, Path=IsChecked}" Text="{Binding Form.Panel.Map.MoreDivCard.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMoreDivCardMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMoreDivCardMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbMoreDivCardMax" Margin="40,17,0,0"  Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbMoreDivCardMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbMoreDivCard, Path=IsChecked}" Text="{Binding Form.Panel.Map.MoreDivCard.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbMoreDivCardMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbMoreDivCardMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <!-- WEAPON PARTS-->
                                        <Grid x:Name="panelDpsTotal" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="2" Grid.Column="1" Visibility="{Binding Form.Visible.Damage, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbDpsTotal" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="93" Height="13" IsChecked="{Binding Form.Panel.Damage.Total.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbTotalDps" Text="{ext:Localization Main073_tbTotalDps}" ToolTip="{ext:Localization Main073_tbTotalDps}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="76" IsEnabled="{Binding ElementName=cbDpsTotal, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbDpsTotalMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbDpsTotalMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbDpsTotal, Path=IsChecked}" Text="{Binding Form.Panel.Damage.Total.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbDpsTotalMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbDpsTotalMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbDpsTotalMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbDpsTotalMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbDpsTotal, Path=IsChecked}" Text="{Binding Form.Panel.Damage.Total.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbDpsTotalMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbDpsTotalMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <Grid x:Name="panelDpsPhys" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="2" Grid.Column="2" Visibility="{Binding Form.Visible.Damage, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbDpsPhys" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="95" Height="13" IsChecked="{Binding Form.Panel.Damage.Physical.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbPhysDps" Text="{ext:Localization Main074_tbPhysDps}" ToolTip="{ext:Localization Main074_tbPhysDps}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="78" IsEnabled="{Binding ElementName=cbDpsPhys, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbDpsPhysMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbDpsPhysMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbDpsPhys, Path=IsChecked}" Text="{Binding Form.Panel.Damage.Physical.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbDpsPhysMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbDpsPhysMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbDpsPhysMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbDpsPhysMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbDpsPhys, Path=IsChecked}" Text="{Binding Form.Panel.Damage.Physical.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbDpsPhysMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbDpsPhysMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <Grid x:Name="panelDpsElem" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="2" Grid.Column="3" Visibility="{Binding Form.Visible.Damage, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbDpsElem" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="111" Height="13" IsChecked="{Binding Form.Panel.Damage.Elemental.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbElemDps" Text="{ext:Localization Main075_tbElemDps}" ToolTip="{ext:Localization Main075_tbElemDps}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="95" IsEnabled="{Binding ElementName=cbDpsElem, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbDpsElemMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbDpsElemMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbDpsElem, Path=IsChecked}" Text="{Binding Form.Panel.Damage.Elemental.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbDpsElemMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbDpsElemMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbDpsElemMax" Margin="40,17,0,0"  Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbDpsElemMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbDpsElem, Path=IsChecked}" Text="{Binding Form.Panel.Damage.Elemental.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbDpsElemMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbDpsElemMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                        
                                        <!-- Total stats-->
                                        <Grid x:Name="panelTotalRes" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="3" Grid.Column="1" Visibility="{Binding Form.Visible.TotalRes, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbTotalRes" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="95" Height="13" IsChecked="{Binding Form.Panel.Total.Resistance.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbTotalResist" Text="{ext:Localization Main076_tbTotalResist}" ToolTip="{ext:Localization Main076_tbTotalResist}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="78" IsEnabled="{Binding ElementName=cbTotalRes, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbTotalResMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbTotalResMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbTotalRes, Path=IsChecked}" Text="{Binding Form.Panel.Total.Resistance.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbTotalResMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbTotalResMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbTotalResMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbTotalResMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbTotalRes, Path=IsChecked}" Text="{Binding Form.Panel.Total.Resistance.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbTotalResMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbTotalResMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <Grid x:Name="panelTotalLife" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="3" Grid.Column="2" Visibility="{Binding Form.Visible.TotalLife, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbTotalLife" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="95" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Total.Life.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbTotalLife" Text="{ext:Localization Main077_tbTotalLife}" ToolTip="{ext:Localization Main077_tbTotalLife}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="78" IsEnabled="{Binding ElementName=cbTotalLife, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbTotalLifeMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbTotalLifeMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbTotalLife, Path=IsChecked}" Text="{Binding Form.Panel.Total.Life.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbTotalLifeMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbTotalLifeMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbTotalLifeMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbTotalLifeMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbTotalLife, Path=IsChecked}" Text="{Binding Form.Panel.Total.Life.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbTotalLifeMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbTotalLifeMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>

                                        <Grid x:Name="panelGlobalEs" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="3" Grid.Column="3" Visibility="{Binding Form.Visible.TotalEs, Converter={StaticResource bool2VisibilityConverter}}">
                                            <CheckBox x:Name="cbGlobalEs" HorizontalAlignment="Left" Margin="7,4,0,0" VerticalAlignment="Top" Width="108" Height="13" Visibility="Visible" IsChecked="{Binding Form.Panel.Total.GlobalEs.Selected}">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                </CheckBox.LayoutTransform>
                                                <TextBlock x:Name="tbGlobalES" Text="{ext:Localization Main078_tbGlobalES}" ToolTip="{ext:Localization Main078_tbGlobalES}" FontFamily="{StaticResource LithosProRegular}" Style="{StaticResource TextBlockForm}" VerticalAlignment="Center" FontSize="10" Width="92" IsEnabled="{Binding ElementName=cbGlobalEs, Path=IsChecked}"/>
                                            </CheckBox>
                                            <Grid x:Name="grid_tbGlobalEsMin" Margin="5,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbGlobalEsMin" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbGlobalEs, Path=IsChecked}" Text="{Binding Form.Panel.Total.GlobalEs.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbGlobalEsMin" IsHitTestVisible="False" Text="min" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbGlobalEsMin}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <Grid x:Name="grid_tbGlobalEsMax" Margin="40,17,0,0" Width="34" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                <TextBox x:Name="tbGlobalEsMax" HorizontalAlignment="Left" Height="22" d:Text="" VerticalAlignment="Top" TextAlignment="Center" Width="34"  Tag="textbox" FontFamily="Arial"  IsEnabled="{Binding ElementName=cbGlobalEs, Path=IsChecked}" Text="{Binding Form.Panel.Total.GlobalEs.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock x:Name="style_tbGlobalEsMax" IsHitTestVisible="False" Text="max" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF555555" Width="34" TextAlignment="Center" FontSize="10">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=tbGlobalEsMax}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                            
                            <Border x:Name="bdStats" Margin="263,293,0,67" Visibility="{Binding Form.Visible.PanelStat, Converter={StaticResource bool2VisibilityConverter}}">
                                <Grid>
                                    <TextBlock x:Name="tbByBase" FontFamily="{StaticResource LithosProRegular}" FontSize="10" Text="{ext:Localization Main081_tbByBase}" Foreground="#FFDBDCDC" TextAlignment="Center" Margin="180,3,29,70" Visibility="{Binding Form.Visible.ByBase, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <CheckBox x:Name="cbBase" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="190,18,0,0" Height="12" Width="12" ToolTip="{ext:Localization Main142_cbBaseTip}" Visibility="{Binding Form.Visible.ByBase, Converter={StaticResource bool2VisibilityConverter}}" IsChecked="{Binding Form.ByBase}">
                                        <CheckBox.LayoutTransform>
                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                        </CheckBox.LayoutTransform>
                                    </CheckBox>
                                    <TextBlock x:Name="tbModSet" FontFamily="{StaticResource LithosProRegular}" FontSize="10" Text="{ext:Localization Main180_tbModSet}" Foreground="#FFDBDCDC" TextAlignment="Center" Margin="82,3,65,70" Visibility="{Binding Form.Visible.ModSet, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <Button x:Name="btnTierVal" Content="{ext:Localization Main094_lbTier}"  HorizontalAlignment="Left" Height="20" Margin="82,17,0,0" VerticalAlignment="Top" Width="45" Command="{Binding Commands.SetModTierCommand}" FontFamily="{StaticResource LithosProRegular}" ToolTip="{ext:Localization Main181_btnTierValTip}" Visibility="{Binding Form.Visible.ModSet, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <Button x:Name="btnPercentVal" Content="{ext:Localization Main224_btnPercentVal}" d:Visibility="Collapsed" HorizontalAlignment="Left" Height="20" Margin="82,17,0,0" VerticalAlignment="Top" Width="45" Command="{Binding Commands.SetModPercentCommand}" FontFamily="{StaticResource LithosProRegular}" ToolTip="{ext:Localization Main225_btnPercentValTip}" Visibility="{Binding Form.Visible.ModPercent, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <Button x:Name="btnCurrentVal" Content="{ext:Localization Main183_real}"  HorizontalAlignment="Left" Height="20" Margin="132,17,0,0" VerticalAlignment="Top" Width="50" Command="{Binding Commands.SetModCurrentCommand}" FontFamily="{StaticResource LithosProRegular}" ToolTip="{ext:Localization Main182_btnCurrentValTip}" Visibility="{Binding Form.Visible.ModCurrent, Converter={StaticResource bool2VisibilityConverter}}"/>

                                    <TextBlock x:Name="lbRarity" Text="{ext:Localization Main083_lbRarity}" HorizontalAlignment="Left" Margin="162,47,0,0" VerticalAlignment="Top" Width="78" FontFamily="{StaticResource LithosProRegular}" FontSize="10" TextAlignment="Center" Visibility="{Binding Form.Visible.Rarity, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <ComboBox x:Name="cbRarity" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="162,60,0,0" VerticalAlignment="Top" Height="22"   Tag="combobox" FontFamily="{StaticResource FontinSmallCaps}" FontSize="14" Width="78" Visibility="{Binding Form.Visible.Rarity, Converter={StaticResource bool2VisibilityConverter}}" SelectedIndex="{Binding Form.Rarity.Index, Mode=TwoWay}" ItemsSource="{Binding Form.Rarity.ComboBox}">
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Form.Rarity.Index}" Value="0">
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Form.Rarity.Index}" Value="1">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Form.Rarity.Index}" Value="2">
                                                        <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Form.Rarity.Index}" Value="3">
                                                        <Setter Property="Foreground" Value="Gold"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Form.Rarity.Index}" Value="4">
                                                        <Setter Property="Foreground" Value="Peru"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Form.Rarity.Index}" Value="5">
                                                        <Setter Property="Foreground" Value="Green"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Form.Rarity.Index}" Value="6">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                    <Trigger Property="IsDropDownOpen" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>

                                    <TextBlock x:Name="lbCorrupted" Text="{ext:Localization Main080_lbCorrupted}" HorizontalAlignment="Left" Margin="81,47,0,0" VerticalAlignment="Top" Width="76" FontFamily="{StaticResource LithosProRegular}" Foreground="#FFDBDCDC" FontSize="10" TextAlignment="Center" Visibility="{Binding Form.Visible.Corrupted, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <ComboBox x:Name="cbCorrupted" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="86,60,0,0" VerticalAlignment="Top" Width="66" Height="22"   Tag="combobox" FontFamily="{StaticResource FontinSmallCaps}" FontSize="14"
                                              VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" Visibility="{Binding Form.Visible.Corrupted, Converter={StaticResource bool2VisibilityConverter}}" SelectedIndex="{Binding Form.CorruptedIndex}" ItemsSource="{Binding Form.Corruption}">
                                        <ComboBox.Resources>
                                            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                                        </ComboBox.Resources>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="DropDownClosed">
                                                <i:InvokeCommandAction Command="{Binding Commands.ClearFocusCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                <Style.Triggers>
                                                    <Trigger Property="SelectedIndex" Value="0">
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                    </Trigger>
                                                    <Trigger Property="SelectedIndex" Value="2">
                                                        <Setter Property="Foreground" Value="OrangeRed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDropDownOpen" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>

                                    <TextBlock x:Name="lbConditions" Text="{ext:Localization Main173_lbConditions}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" FontFamily="{StaticResource LithosProRegular}" Foreground="#FFDBDCDC" FontSize="10" TextAlignment="Center" Margin="0,3,0,0" Visibility="{Binding Form.Visible.Conditions, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <ComboBox x:Name="cbConditions" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" IsEditable="True" IsReadOnly="True" Focusable="True" IsTextSearchEnabled="False" StaysOpenOnEdit="True" Width="72" Margin="4,16,0,0" SnapsToDevicePixels="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="14"
                                              ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" IsSynchronizedWithCurrentItem="True" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" TextBlock.TextAlignment="Center" Text="{Binding Form.CheckComboCondition.Text}" ToolTip="{Binding Form.CheckComboCondition.ToolTip}"
                                              VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" Visibility="{Binding Form.Visible.Conditions, Converter={StaticResource bool2VisibilityConverter}}">
                                        <ComboBox.Resources>
                                            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                                            <!--<SolidColorBrush x:Key="TextBox.Static.Background" Color="White"/>-->
                                        </ComboBox.Resources>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="DropDownClosed">
                                                <i:InvokeCommandAction Command="{Binding Commands.ClearFocusCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Form.Condition.FreePrefix}" Value="False"/>
                                                            <Condition Binding="{Binding Form.Condition.FreeSuffix}" Value="False"/>
                                                            <Condition Binding="{Binding Form.Condition.SocketColors}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="IsDropDownOpen" Value="True"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDropDownOpen" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        <!--
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text}" Value="{ext:Localization Main036_None}">
                                                        <Setter Property="Foreground" Value="DarkGray"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        -->
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Width="72" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" >
                                                    <CheckBox Height="22" x:Name="cbFreePrefix" Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckConditionCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                                              d:ToolTip="{ext:Localization Main175_cbFreePrefixTip}" ToolTip="{Binding Form.Condition.FreePrefixToolTip}" IsChecked="{Binding Form.Condition.FreePrefix}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main174_cbFreePrefix}" Text="{Binding Form.Condition.FreePrefixText}" />
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Width="72" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                    <CheckBox Height="22" x:Name="cbFreeSuffix"  Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckConditionCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                                              d:ToolTip="{ext:Localization Main177_cbFreeSuffixTip}" ToolTip="{Binding Form.Condition.FreeSuffixToolTip}" IsChecked="{Binding Form.Condition.FreeSuffix}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main176_cbFreeSuffix}" Text="{Binding Form.Condition.FreeSuffixText}"/>
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Width="72" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                    <CheckBox Height="22" x:Name="cbSocketColors"  Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckConditionCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                                              d:ToolTip="{ext:Localization Main210_cbSocketColorsTip}" ToolTip="{Binding Form.Condition.SocketColorsToolTip}" IsChecked="{Binding Form.Condition.SocketColors}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main209_cbSocketColors}" Text="{Binding Form.Condition.SocketColorsText}"/>
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                    </ComboBox>

                                    <TextBlock x:Name="lbReward" Text="{ext:Localization General071_Reward}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="206" FontFamily="{StaticResource LithosProRegular}" Foreground="#FFDBDCDC" FontSize="10" TextAlignment="Center" Margin="10,0,0,0" Height="22" d:Opacity="0" d:Panel.ZIndex="-1" Visibility="{Binding Form.Visible.Reward, Converter={StaticResource bool2VisibilityConverter}}" ToolTip="{Binding Form.Panel.Reward.Tip}"/>
                                    <TextBox x:Name="tbReward" HorizontalAlignment="Left" Height="22" Margin="11,16,0,0" HorizontalContentAlignment="Center" d:Text="" VerticalAlignment="Top" Width="199" IsReadOnly="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="12"  d:Opacity="0" d:Panel.ZIndex="-1" Visibility="{Binding Form.Visible.Reward, Converter={StaticResource bool2VisibilityConverter}}" Text="{Binding Form.Panel.Reward.Text}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Form.Panel.Reward.FgColor}" Value="Gold">
                                                        <Setter Property="Foreground" Value="Gold"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Form.Panel.Reward.FgColor}" Value="Peru">
                                                        <Setter Property="Foreground" Value="Peru"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Form.Panel.Reward.FgColor}" Value="DeepSkyBlue">
                                                        <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>

                                    <TextBlock x:Name="lbInfluence" Text="{ext:Localization Main079_lbInfluence}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" FontFamily="{StaticResource LithosProRegular}" Foreground="#FFDBDCDC" FontSize="10" TextAlignment="Center" Margin="0,47,0,0" Visibility="{Binding Form.Visible.Influences, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <ComboBox x:Name="cbInfluence" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" IsEditable="True" IsReadOnly="True" Focusable="True" IsTextSearchEnabled="False" StaysOpenOnEdit="True" Width="72" Margin="4,60,0,0" SnapsToDevicePixels="True" FontFamily="{StaticResource FontinSmallCaps}" FontSize="14"
                                              ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" IsSynchronizedWithCurrentItem="True" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" TextBlock.TextAlignment="Center" Text="{Binding Form.CheckComboInfluence.Text}" ToolTip="{Binding Form.CheckComboInfluence.ToolTip}"
                                              VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" Visibility="{Binding Form.Visible.Influences, Converter={StaticResource bool2VisibilityConverter}}">
                                        <ComboBox.Resources>
                                            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</sys:Double>
                                            <!--<SolidColorBrush x:Key="TextBox.Static.Background" Color="White"/>-->
                                        </ComboBox.Resources>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="DropDownClosed">
                                                <i:InvokeCommandAction Command="{Binding Commands.ClearFocusCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Form.Influence.Shaper}" Value="False"/>
                                                            <Condition Binding="{Binding Form.Influence.Elder}" Value="False"/>
                                                            <Condition Binding="{Binding Form.Influence.Crusader}" Value="False"/>
                                                            <Condition Binding="{Binding Form.Influence.Redeemer}" Value="False"/>
                                                            <Condition Binding="{Binding Form.Influence.Hunter}" Value="False"/>
                                                            <Condition Binding="{Binding Form.Influence.Warlord}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="IsDropDownOpen" Value="True"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDropDownOpen" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        <!--
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="IsDropDownOpen" Value="True"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        -->
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Width="72" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                    <CheckBox Height="22" x:Name="cbShaper" Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckInfluenceCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Form.Influence.Shaper}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main037_Shaper}" Text="{Binding Form.Influence.ShaperText}"/>
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Width="72" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                    <CheckBox Height="22" x:Name="cbElder"  Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckInfluenceCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Form.Influence.Elder}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main038_Elder}" Text="{Binding Form.Influence.ElderText}"/>
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Width="72" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                    <CheckBox Height="22" x:Name="cbCrusader"  Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckInfluenceCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Form.Influence.Crusader}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main039_Crusader}" Text="{Binding Form.Influence.CrusaderText}"/>
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Width="72" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                    <CheckBox Height="22" x:Name="cbRedeemer"  Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckInfluenceCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Form.Influence.Redeemer}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main040_Redeemer}" Text="{Binding Form.Influence.RedeemerText}"/>
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Width="72" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                    <CheckBox Height="22" x:Name="cbHunter" Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckInfluenceCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Form.Influence.Hunter}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main041_Hunter}" Text="{Binding Form.Influence.HunterText}"/>
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <ComboBoxItem.Content>
                                                <ToggleButton Height="22" Margin="-5,-2,-6,-2" Padding="3,0,0,0" Background="Transparent" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                    <CheckBox Height="22" x:Name="cbWarlord"  Margin="0,3,0,0" Padding="0,-2,0,-2" Command="{Binding Commands.CheckInfluenceCommand}" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding Form.Influence.Warlord}">
                                                        <CheckBox.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                        </CheckBox.LayoutTransform>
                                                        <TextBlock Padding="3,0,0,6" FontFamily="{StaticResource FontinSmallCaps}" Foreground="White" VerticalAlignment="Top" Width="72" TextAlignment="Left" d:Text="{ext:Localization Main042_Warlord}" Text="{Binding Form.Influence.WarlordText}"/>
                                                    </CheckBox>
                                                </ToggleButton>
                                            </ComboBoxItem.Content>
                                        </ComboBoxItem>
                                    </ComboBox>

                                    <TextBlock x:Name="lbCheckAll" Text="{ext:Localization Main082_lbCheckAll}" TextAlignment="Center" FontFamily="{StaticResource LithosProRegular}" Foreground="#FFDBDCDC" FontSize="10" Margin="210,3,0,70" Visibility="{Binding Form.Visible.CheckAll, Converter={StaticResource bool2VisibilityConverter}}"/>
                                    <CheckBox x:Name="cbAllCheck" HorizontalAlignment="Left" Margin="220,18,0,0" VerticalAlignment="Top" Command="{Binding Commands.CheckAllModsCommand}" Width="12" Height="12" ToolTip="{ext:Localization Main144_cbAllCheckTip}" Visibility="{Binding Form.Visible.CheckAll, Converter={StaticResource bool2VisibilityConverter}}" IsChecked="{Binding Form.AllCheck}">
                                        <CheckBox.LayoutTransform>
                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                        </CheckBox.LayoutTransform>
                                    </CheckBox>
                                    <!--
                                    <Label x:Name="lbSliderMin" Content="100%" HorizontalAlignment="Left" Margin="129,-1,0,0" VerticalAlignment="Top" Width="42" FontFamily="Arial" Foreground="#FFDBDCDC" FontSize="10" HorizontalContentAlignment="Center" Visibility="Hidden"/>
                                    <Slider x:Name="sliderMinMods" HorizontalAlignment="Left" Margin="130,18,0,0" VerticalAlignment="Top" Width="40" Minimum="80" Maximum="120" Value="100" ValueChanged="SliderMinMods_ValueChanged" Ticks="80,85,90,95,100,105,110,115,120" TickFrequency="5" IsSnapToTickEnabled="True" Height="24" MouseDoubleClick="SliderMinMods_MouseDoubleClick" ToolTip="{ext:Localization Main143_sliderModsTip}" Visibility="Hidden">
                                        <Slider.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black" />
                                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey}" Color="Silver" />

                                        </Slider.Resources>
                                    </Slider>
                                    <Label x:Name="lbSliderMax" Content="100%" HorizontalAlignment="Left" Margin="171,-1,0,0" VerticalAlignment="Top" Width="42" FontFamily="Arial" Foreground="#FFDBDCDC" FontSize="10" HorizontalContentAlignment="Center" Visibility="Hidden"/>
                                    <Slider x:Name="sliderMaxMods" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="172,18,0,0" Width="40" Minimum="80" Maximum="120" Value="100" ValueChanged="SliderMaxMods_ValueChanged" Ticks="80,85,90,95,100,105,110,115,120" TickFrequency="5" IsSnapToTickEnabled="True" Height="24" MouseDoubleClick="SliderMaxMods_MouseDoubleClick" ToolTip="{ext:Localization Main143_sliderModsTip}" Visibility="Hidden"/>
                                    -->
                                </Grid>
                            </Border>
                            <!--HIDDENS PARTS-->
                            <Border x:Name="bdDetail" Background="{DynamicResource DarkBg}" BorderBrush="{DynamicResource DarkBg}" BorderThickness="1" CornerRadius="3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="507" Height="283" Margin="-2,0,0,0" Visibility="{Binding Form.Visible.Detail, Converter={StaticResource bool2VisibilityConverter}}" d:Opacity="0" d:Panel.ZIndex="-1">
                                <TextBlock x:Name="tkDetail" TextWrapping="Wrap" d:Text="TextBlock" Padding="5" Text="{Binding Form.Detail}"/>
                            </Border>

                            <Border x:Name="bdExtraControls" Background="{DynamicResource LightBg}" Margin="-6,288,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="514" Height="94" d:Opacity="0" d:Panel.ZIndex="-1" Visibility="{Binding Form.Visible.Facetor, Converter={StaticResource bool2VisibilityConverter}}">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Height="94" Width="514">
                                    <TextBlock x:Name="tbFacetor" Text="{ext:Localization Main154_tbFacetor}" FontFamily="{StaticResource FontinSmallCaps}" Foreground="#FFDBDCDC" VerticalAlignment="Top" HorizontalAlignment="Center" TextAlignment="Center" FontSize="12" Width="184" Margin="0,25,0,0"/>
                                    <TextBox x:Name="tbFaceMin" HorizontalAlignment="Left" Height="22" Margin="166,42,0,0" d:Text="" VerticalAlignment="Top" Width="90"  Tag="textbox" FontFamily="Arial"  IsEnabled="True" Text="{Binding Form.Panel.FacetorMin}"/>
                                    <TextBox x:Name="tbFaceMax" HorizontalAlignment="Left" Height="22" Margin="260,42,0,0" d:Text="" VerticalAlignment="Top" Width="90"  Tag="textbox" FontFamily="Arial"  IsEnabled="True" Text="{Binding Form.Panel.FacetorMax}"/>
                                </Grid>
                            </Border>
                            <Border x:Name="bdRect1" Margin="-2,383,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
                                <!-- MouseLeftButtonDown="RefreshSearch"-->
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                                    <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="quick" MouseAction="RightClick"/>
                                </Border.InputBindings>
                                <Grid Margin="0,0,0,0">
                                    <TextBlock x:Name="tkPriceQuickBis" d:Text="Search Results 1 bis" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Quick.PriceBis}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect1}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock x:Name="tkPriceQuick" d:Text="Search Results 1" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Panel.ZIndex="2" FontFamily="Consolas" TextAlignment="Right" Margin="0,5,7,0" Text="{Binding Result.Quick.Price}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect1}" Value="True">
                                                        <Setter Property="Foreground" Value="Lime"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="cbTotalSearch" d:Text="0" HorizontalAlignment="Right" Margin="0,436,9,-1" VerticalAlignment="Top" Panel.ZIndex="2" RenderTransformOrigin="0.571,2.792" FontFamily="Consolas" FontSize="10" d:DataContext="{d:DesignInstance Type=t:MainViewModel}"> <!-- Text="{Binding Result.Quick.Total}"-->
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                <Setter Property="Text" Value="{Binding Result.Quick.Total}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                <Setter Property="Text" Value="{Binding Form.RateText}"/>
                                                <Setter Property="Foreground" Value="Yellow"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </TabItem>

                    <!--Detailed Search-->
                    <TabItem x:Name="tabItemDetailed" Header="{ext:Localization Main085_tabItemDetailed}" FontFamily="{StaticResource LithosProRegular}"  IsSelected="{Binding Form.Tab.DetailSelected}">
                        <!-- IsEnabled="{Binding Form.Tab.DetailEnable}"-->
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.DetailEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="2,0,-2,0">
                            <TextBlock x:Name="lblPrice" Text="{ext:Localization Main087_lblPrice}" HorizontalAlignment="Left" Margin="25,1,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="98"/>
                            <TextBlock x:Name="lblIndexed" Text="{ext:Localization Main088_lblIndexed}" HorizontalAlignment="Left" Margin="140,1,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="128" TextAlignment="Left"/>
                            <TextBlock x:Name="lblSellers" Text="{ext:Localization Main089_lblSellers}" HorizontalAlignment="Left" Margin="323,1,0,0" VerticalAlignment="Top" FontSize="10" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="125"/>
                            <Grid x:Name="grPriceLayout" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="505" Height="323">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="liPriceDetail" Height="{Binding ActualHeight, ElementName=grPriceLayout}" FontFamily="Consolas" BorderThickness="1" ItemsSource="{Binding Path=Result.DetailList}" 
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                <ListBoxItem.Style>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                <Setter Property="Foreground" Value="YellowGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                <Setter Property="Foreground" Value="Yellow"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                <Setter Property="Foreground" Value="DarkRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                <Setter Property="Foreground" Value="Azure"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBoxItem.Style>
                                            </ListBoxItem>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                            <!-- Hidden price min-->
                            <TextBox x:Name="tbPriceFilterMin"  Height="22" Margin="457,346,14,73" Text="1"  Width="34" BorderThickness="0,0,0,0" TextAlignment="Center" FontFamily="Arial"   Visibility="Hidden"/>
                            <Button x:Name="btnFetchResultsDetail" Content="{ext:Localization Main091_fetchResultsDetail}"  HorizontalAlignment="Left" Height="20" Margin="15,351,0,0" VerticalAlignment="Top" Width="160" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.FetchCommand}" ToolTipService.ShowDuration="12000" ToolTip="{ext:Localization Main103_fetchResultsDetailTip}" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                                <!-- IsEnabled="{Binding Form.Button.FetchDetailIsEnabled}"-->
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                <Setter Property="IsEnabled" Value="{Binding Form.FetchDetailIsEnabled}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Border Margin="190,351,90,71" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto">
                                <CheckBox x:Name="cbSameUser" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{ext:Localization Main104_cbSameUserTip}" Height="14" IsChecked="{Binding Path=Form.SameUser}">
                                    <CheckBox.LayoutTransform>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </CheckBox.LayoutTransform>
                                    <TextBlock x:Name="tbAggregate" Text="{ext:Localization Main090_tbAggregate}" Margin="0,2,0,0" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" FontSize="8"/>
                                </CheckBox>
                            </Border>
                            <Border Margin="345,351,0,71" VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                <CheckBox x:Name="cbChaosDiv" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{ext:Localization Main215_ChaosDivTip}" Height="14" IsChecked="{Binding Path=Form.ChaosDiv}">
                                    <CheckBox.LayoutTransform>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </CheckBox.LayoutTransform>
                                    <TextBlock x:Name="tbChaosDiv" Text="{ext:Localization Main214_tbChaosDiv}" Margin="0,2,0,0" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" FontSize="8"/>
                                </CheckBox>
                            </Border>
                            <Border Margin="345,351,0,71" VerticalAlignment="Top" HorizontalAlignment="Left" d:Visibility="Collapsed" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                                <CheckBox x:Name="cbExalt" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{ext:Localization Main226_ExaltTip}" Height="14" IsChecked="{Binding Path=Form.Exalt}">
                                    <CheckBox.LayoutTransform>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </CheckBox.LayoutTransform>
                                    <TextBlock x:Name="tbExalt" Text="Exalted" Margin="0,2,0,0" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" FontSize="8"/>
                                </CheckBox>
                            </Border>

                            <Border x:Name="bdRect2" Margin="0,383,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                                    <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="detail" MouseAction="RightClick"/>
                                </Border.InputBindings>
                                <Grid Margin="0,0,0,0">
                                    <TextBlock x:Name="tkPriceDetailBis" d:Text="Search Results 1 bis" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Detail.PriceBis}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect2}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock x:Name="tkPriceDetail" d:Text="Search Results 1" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Panel.ZIndex="2" FontFamily="Consolas" TextAlignment="Right" Margin="0,5,7,0" Text="{Binding Result.Detail.Price}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect2}" Value="True">
                                                        <Setter Property="Foreground" Value="Lime"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="cbTotalDetail" d:Text="0" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Consolas" Visibility="Visible" Panel.ZIndex="1" FontSize="10" Margin="9,436,0,-1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}"> <!-- Text="{Binding Result.Detail.Total}"-->
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                <Setter Property="Text" Value="{Binding Result.Detail.Total}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                <Setter Property="Text" Value="{Binding Form.RateText}"/>
                                                <Setter Property="Foreground" Value="Yellow"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </TabItem>
                    <!-- Bulk Tab-->
                    <TabItem x:Name="tabItemExchange" Header="{ext:Localization Main086_tabItemExchange}"  FontFamily="{StaticResource LithosProRegular}"  IsSelected="{Binding Form.Tab.BulkSelected}">
                        <!-- IsEnabled="{Binding Form.Tab.BulkEnable}"-->
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.BulkEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="2,0,-2,0">
                            <Label x:Name="lblGP" Content="{ext:Localization Main102_lblGP}" HorizontalAlignment="Left" Margin="27,-6,0,0" VerticalAlignment="Top" FontSize="12" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="412"/>
                            <Grid x:Name="gridPriceLayoutBulk" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="505" Height="271">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="liPriceBulk" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Path=Result.BulkList}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch" SelectedIndex="{Binding Result.SelectedIndex.Bulk}">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" x:Name="lbItemStyle">
                                            <!--
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            -->
                                            <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            <!--
                                            <Setter Property="Focusable" Value="False" />
                                            -->
                                            <!--
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <ContentPresenter ContentSource="Content"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            -->
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                <ListBoxItem.InputBindings>
                                                    <MouseBinding MouseAction="LeftClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.SelectBulkIndexCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.ShowBulkWhisperCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                </ListBoxItem.InputBindings>
                                                <ListBoxItem.Style>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                <Setter Property="Foreground" Value="YellowGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                <Setter Property="Foreground" Value="Yellow"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                <Setter Property="Foreground" Value="DarkRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                <Setter Property="Foreground" Value="Azure"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBoxItem.Style>
                                            </ListBoxItem>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <ListBox x:Name="liWhisper" Visibility="Hidden" ItemsSource="{Binding Path=Result.BulkList}"/>
                            </Grid>
                            <Grid x:Name="gridBulk" Margin="0,286,0,0" VerticalAlignment="Top" Height="92">
                                <ComboBox x:Name="cbBulkPay1" HorizontalAlignment="Left" Margin="299,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="130" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.CategoryIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="pay"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                            <Style.Triggers>
                                                <Trigger Property="SelectedIndex" Value="0">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="SelectedIndex" Value="-1">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsDropDownOpen" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <Grid x:Name="scopePay" Margin="382,5,62,68" Panel.ZIndex="1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Form.Bulk.Pay.Search}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Ellipse Stroke="Gray" StrokeThickness="1" Margin="3,3,51,6" />
                                    <Rectangle Stroke="Gray" StrokeThickness="1" Margin="14,11,47,6">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="50"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <TextBox x:Name="tbPay" Margin="382,5,62,0" d:Text="" BorderThickness="1" TextAlignment="Left" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main116_Keywords}" VerticalAlignment="Top" IsEnabled="True"  Text="{Binding Form.Bulk.Pay.Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding Commands.SearchCurrencyCommand}" CommandParameter="pay" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <Grid Margin="291,3,128,65" ToolTip="{ext:Localization Main093_lbPay}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto" MaxWidth="68"/>
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="24" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="lbPay" Text="{ext:Localization Main093_lbPay}" Grid.Column="1" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="#FFDBDCDC" Margin="0,3,0,0"/>
                                    <Image x:Name="imgPayLoad" Grid.Column="3" Height="24" Width="24" d:Source="{StaticResource ImgExalt}" Source="{Binding Form.Bulk.Pay.Image}"/>
                                </Grid>
                                <TextBlock x:Name="lbTierPay" Text="{ext:Localization Main094_lbTier}"  Margin="421,65,25,11" FontFamily="{StaticResource FontinSmallCaps}" Width="42" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center" Visibility="{Binding Form.Bulk.Pay.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <ComboBox x:Name="cbTierPay" HorizontalAlignment="Left" Margin="444,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="55" Height="24" FontFamily="{StaticResource FontinSmallCaps}"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Tier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.TierIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Pay.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="pay/tier"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ComboBox>
                                <ComboBox x:Name="cbBulkPay2" HorizontalAlignment="Left" Margin="299,62,0,0" VerticalAlignment="Top" MaxDropDownHeight="160" Width="200" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Currency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.CurrencyIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Pay.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.ChangeCommand}" CommandParameter="pay"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <Image x:Name="imgPayChaos" Margin="450,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ChaosImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paychaos" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgPayExalt" Margin="450,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ExaltImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="payexalt" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgPayDivine" Margin="469,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DivineImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paydivine" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgPayNothing" Margin="486,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource NothingImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paynothing" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>


                                <Border x:Name="borderBulk1" BorderBrush="{DynamicResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="82" Margin="212,5,0,0" VerticalAlignment="Top" Width="1" RenderTransformOrigin="0.5,0.5" />
                                <!--
                                <Button x:Name="btnGetMoreBulk" Content="{ext:Localization Main095_getMoreBulk}"  HorizontalAlignment="Left" Height="20" Margin="216,6,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.Fetch}" ToolTipService.ShowDuration="12000" ToolTip="{ext:Localization Main113_getMoreBulkTip}" d:DataContext="{d:DesignInstance Type=t:MainViewModel}" Visibility="Hidden">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                    <Setter Property="IsEnabled" Value="{Binding Form.Button.FetchBulksEnabled}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                -->
                                <Button x:Name="btnInvert" Content="{ext:Localization Main096_btnInvert}"  HorizontalAlignment="Left" Height="20" Margin="216,64,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.InvertBulkCommand}" ToolTip="{ext:Localization Main115_btnInvertTip}"/>
                                <Border x:Name="borderBulk2" BorderBrush="{DynamicResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="82" Margin="291,5,0,0" VerticalAlignment="Top" Width="1" RenderTransformOrigin="0.5,0.5" />
                                <ComboBox x:Name="cbBulkGet1" HorizontalAlignment="Left" Margin="5,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="130" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.CategoryIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="get"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                            <Style.Triggers>
                                                <Trigger Property="SelectedIndex" Value="0">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="SelectedIndex" Value="-1">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsDropDownOpen" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <Grid Margin="-6,2,425,65" ToolTip="{ext:Localization Main092_lbGet}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto" MaxWidth="65"/>
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="24" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="lbGet" Text="{ext:Localization Main092_lbGet}" Grid.Column="1" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="#FFDBDCDC" Margin="0,3,0,2"/>
                                    <Image x:Name="imgGetLoad" Grid.Column="3" Height="24" Width="24" d:Source="{StaticResource ImgChaos}" Source="{Binding Form.Bulk.Get.Image}"/>
                                </Grid>
                                <TextBlock x:Name="lbTierGet" Text="{ext:Localization Main094_lbTier}"  Margin="128,65,320,11" FontFamily="{StaticResource FontinSmallCaps}" Width="42" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center" Visibility="{Binding Form.Bulk.Get.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>

                                <ComboBox x:Name="cbTierGet" HorizontalAlignment="Left" Margin="150,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="55" Height="24" FontFamily="{StaticResource FontinSmallCaps}"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Tier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.TierIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Get.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="get/tier"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ComboBox>
                                <ComboBox x:Name="cbBulkGet2" HorizontalAlignment="Left" Margin="5,62,0,0" VerticalAlignment="Top" MaxDropDownHeight="160" Width="200" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Currency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.CurrencyIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.ChangeCommand}" CommandParameter="get"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <TextBlock x:Name="lbMinStock" Text="{ext:Localization Main097_lbMinStock}"  Margin="230,20,236,59" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}"/>
                                <TextBox x:Name="tbMinStock" Margin="230,-6,0,0" d:Text="1" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center" Foreground="#FFDBDCDC" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main114_tbMinStockTip}" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}" Text="{Binding Form.Bulk.Stock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="44"/>
                                <Grid x:Name="scopeGet" Margin="86,5,355,68" Panel.ZIndex="1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Form.Bulk.Get.Search}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Ellipse Stroke="Gray" StrokeThickness="1" Margin="3,3,54,6" />
                                    <Rectangle Stroke="Gray" StrokeThickness="1" Margin="14,11,50,6">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="50"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <TextBox x:Name="tbGet" Margin="86,5,355,0" d:Text="" BorderThickness="1" TextAlignment="Left" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main116_Keywords}" VerticalAlignment="Top" IsEnabled="True"  Text="{Binding Form.Bulk.Get.Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding Commands.SearchCurrencyCommand}" CommandParameter="get" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <Image x:Name="imgGetChaos" Margin="156,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ChaosImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getchaos" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgGetExalt" Margin="156,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ExaltImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getexalt" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgGetDivine" Margin="175,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DivineImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getdivine" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgGetNothing" Margin="192,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource NothingImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getnothing" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                            </Grid>

                            <Border x:Name="bdRect3" Margin="0,383,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                                    <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="bulk" MouseAction="RightClick"/>
                                </Border.InputBindings>
                                <Grid Margin="0,0,0,0">
                                    <TextBlock x:Name="tkPriceBulkBis" d:Text="" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Bulk.PriceBis}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect3}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock x:Name="tkPriceBulk" d:Text="{ext:Localization Main001_PriceSelect}" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Panel.ZIndex="2" FontFamily="Consolas" TextAlignment="Right" Margin="0,5,7,0" Text="{Binding Result.Bulk.Price}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect3}" Value="True">
                                                        <Setter Property="Foreground" Value="Lime"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="cbTotalExchange" d:Text="{ext:Localization Main032_cbTotalExchange}" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Consolas" Visibility="Visible" Panel.ZIndex="1" FontSize="10" Margin="9,436,0,-1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}"> <!-- Text="{Binding Result.Bulk.Total}"-->
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                                <Setter Property="Text" Value="{Binding Result.Bulk.Total}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                                <Setter Property="Text" Value="{Binding Form.RateText}"/>
                                                <Setter Property="Foreground" Value="Yellow"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </TabItem>



                    <!-- Shop Tab-->
                    <TabItem x:Name="tabItemShop" Header="{ext:Localization Main206_tabItemShop}" FontFamily="{StaticResource LithosProRegular}"  IsSelected="{Binding Form.Tab.ShopSelected}">
                        <!-- IsEnabled="{Binding Form.Tab.BulkEnable}"-->
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.ShopEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="2,0,-2,0">
                            <Label x:Name="lblGPShop" Content="{ext:Localization Main102_lblGP}" HorizontalAlignment="Left" Margin="27,-6,0,0" VerticalAlignment="Top" FontSize="12" Foreground="#FFDBDCDC" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="412"/>
                            <Grid x:Name="gridPriceLayoutShop" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="505" Height="240">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="liPriceShop" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Path=Result.ShopList}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch" SelectedIndex="{Binding Result.SelectedIndex.Shop}">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <!--
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            -->
                                            <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            <!--
                                            <Setter Property="Focusable" Value="False" />
                                            -->
                                            <!--
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <ContentPresenter ContentSource="Content"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            -->
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                <ListBoxItem.InputBindings>
                                                    <MouseBinding MouseAction="LeftClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.SelectShopIndexCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.ShowShopWhisperCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                </ListBoxItem.InputBindings>
                                                <ListBoxItem.Style>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                <Setter Property="Foreground" Value="YellowGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                <Setter Property="Foreground" Value="Yellow"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                <Setter Property="Foreground" Value="DarkRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                <Setter Property="Foreground" Value="Azure"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBoxItem.Style>
                                            </ListBoxItem>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <ListBox x:Name="liWhisperShop" Visibility="Hidden" ItemsSource="{Binding Path=Result.ShopList}"/>
                            </Grid>
                            <Grid x:Name="gridShop" Margin="0,256,0,0" VerticalAlignment="Top" Height="122">
                                <TextBlock x:Name="lbAddToList" Text="{ext:Localization Main202_AddList}"  Margin="216,6,223,104" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center"/>
                                <Button x:Name="btnGetList" Content="{ext:Localization Main092_lbGet}"  HorizontalAlignment="Left" Height="20" Margin="216,19,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.AddShopListCommand}" CommandParameter="get" />
                                <Button x:Name="btnPayList" Content="{ext:Localization Main093_lbPay}" HorizontalAlignment="Left" Height="20" Margin="216,41,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.AddShopListCommand}" CommandParameter="pay" />

                                <Border x:Name="borderBulk1Shop" BorderBrush="{DynamicResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="120" Margin="212,0,0,0" VerticalAlignment="Center" Width="1" RenderTransformOrigin="0.5,0.5" />
                                <Button x:Name="btnResetList" Content="{ext:Localization Main203_Reset}"  HorizontalAlignment="Left" Height="20" Margin="216,100,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.ResetShopListsCommand}" />
                                <Border x:Name="borderBulk2Shop" BorderBrush="{DynamicResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="120" Margin="291,0,0,0" VerticalAlignment="Center" Width="1" RenderTransformOrigin="0.5,0.5" />

                                <Button x:Name="btnInvertShop" Content="{ext:Localization Main096_btnInvert}"  HorizontalAlignment="Left" Height="20" Margin="365,0,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.InvertShopListsCommand}" />
                                <TextBlock x:Name="lbGetShop" Text="{ext:Localization Main092_lbGet}" FontFamily="{StaticResource FontinSmallCaps}" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="298,2,0,0" Width="67"/>
                                <Grid x:Name="gridListGet" Margin="298,22,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="90">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <ListBox x:Name="liGet" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Form.Shop.GetList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch">
                                        <ListBox.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="3"/>
                                            </Style>
                                        </ListBox.Resources>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>

                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                    <ListBoxItem.InputBindings>
                                                        <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.RemoveGetListCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    </ListBoxItem.InputBindings>
                                                    <ListBoxItem.Style>
                                                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                    <Setter Property="Foreground" Value="Red"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                    <Setter Property="Foreground" Value="YellowGreen"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                    <Setter Property="Foreground" Value="LimeGreen"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                    <Setter Property="Foreground" Value="Yellow"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                    <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                    <Setter Property="Foreground" Value="DarkRed"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                    <Setter Property="Foreground" Value="Azure"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                    <Setter Property="Foreground" Value="Gray"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBoxItem.Style>
                                                </ListBoxItem>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>

                                <TextBlock x:Name="lbPayShop" Text="{ext:Localization Main093_lbPay}" FontFamily="{StaticResource FontinSmallCaps}" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="436,2,0,0" Width="70"/>
                                <Grid x:Name="gridListPay" Margin="405,22,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="90">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <ListBox x:Name="liPay" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Form.Shop.PayList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch">
                                        <ListBox.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="3"/>
                                            </Style>
                                        </ListBox.Resources>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>

                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                    <ListBoxItem.InputBindings>
                                                        <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.RemovePayListCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    </ListBoxItem.InputBindings>
                                                    <ListBoxItem.Style>
                                                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                    <Setter Property="Foreground" Value="Red"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                    <Setter Property="Foreground" Value="YellowGreen"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                    <Setter Property="Foreground" Value="LimeGreen"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                    <Setter Property="Foreground" Value="Yellow"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                    <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                    <Setter Property="Foreground" Value="DarkRed"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                    <Setter Property="Foreground" Value="Azure"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                    <Setter Property="Foreground" Value="Gray"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBoxItem.Style>
                                                </ListBoxItem>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                                <TextBlock x:Name="lbRemove" Text="{ext:Localization Main204_ShopTip}" Margin="298,112,5,-3" FontFamily="{StaticResource FontinSmallCaps}" FontStyle="Italic" FontSize="8" Foreground="#FFB2B0B0" TextAlignment="Center"/>

                                <ComboBox x:Name="cbShop1" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Center" MaxDropDownHeight="190" Width="130" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Shop.Exchange.Category}" SelectedIndex="{Binding Form.Shop.Exchange.CategoryIndex}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="shop"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                            <Style.Triggers>
                                                <Trigger Property="SelectedIndex" Value="0">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="SelectedIndex" Value="-1">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsDropDownOpen" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <Grid Margin="5,21,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="25" Width="45">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="imgLoadShop" Grid.Column="0" Height="24" Width="24" d:Source="{StaticResource ImgChaos}" Source="{Binding Form.Shop.Exchange.Image}"/>
                                </Grid>
                                <TextBlock x:Name="lbTierShop" Text="{ext:Localization Main094_lbTier}"  Margin="138,84,330,-8" FontFamily="{StaticResource FontinSmallCaps}" Width="42" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center" Visibility="{Binding Form.Shop.Exchange.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>

                                <ComboBox x:Name="cbTierShop" HorizontalAlignment="Left" Margin="150,0,0,0" VerticalAlignment="Center" MaxDropDownHeight="190" Width="55" Height="24" FontFamily="{StaticResource FontinSmallCaps}"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Shop.Exchange.Tier}" SelectedIndex="{Binding Form.Shop.Exchange.TierIndex}" Visibility="{Binding Form.Shop.Exchange.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="shop/tier"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ComboBox>
                                <ComboBox x:Name="cbShop2" HorizontalAlignment="Left" Margin="5,81,0,0" VerticalAlignment="Top" MaxDropDownHeight="160" Width="200" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                          VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Shop.Exchange.Currency}" SelectedIndex="{Binding Form.Shop.Exchange.CurrencyIndex}" Visibility="{Binding Form.Shop.Exchange.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding Commands.ChangeCommand}" CommandParameter="shop"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </ComboBox>
                                <TextBlock x:Name="lbMinStockShop" Text="{ext:Localization Main097_lbMinStock}"  Margin="230,64,236,44" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" Foreground="#FFB2B0B0" TextAlignment="Center"/>
                                <TextBox x:Name="tbMinStockShop" Margin="230,76,0,0" d:Text="1" TextAlignment="Center" Foreground="#FFDBDCDC" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Left" VerticalAlignment="Top"   ToolTip="{ext:Localization Main114_tbMinStockTip}" Text="{Binding Form.Shop.Stock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="44"/>
                                <TextBlock x:Name="lbSelectShop" Text="{ext:Localization Main205_CurrencySelection}" FontFamily="{StaticResource FontinSmallCaps}" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" FontSize="14" Foreground="#FFB2B0B0" Margin="5,2,0,0" Width="200"/>
                                <Grid x:Name="scopeShop" Margin="55,24,355,79" Panel.ZIndex="1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Form.Bulk.Get.Search}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Stroke="Gray" StrokeThickness="1" Margin="3,-3,0,0" Height="10" Width="12" />
                                    <Rectangle HorizontalAlignment="Left" VerticalAlignment="Top" Stroke="Gray" StrokeThickness="1" Margin="12,12,0,0" Height="2" Width="6">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="50"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <TextBox x:Name="tbShop" Margin="55,24,355,0" d:Text="" BorderThickness="1" TextAlignment="Left" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main116_Keywords}" VerticalAlignment="Top" IsEnabled="True"  Text="{Binding Form.Shop.Exchange.Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding Commands.SearchCurrencyCommand}" CommandParameter="shop" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <Image x:Name="imgShopChaos" Margin="156,24,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ChaosImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="shopchaos" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgShopExalt" Margin="156,24,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ExaltImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="shopexalt" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgShopDivine" Margin="175,25,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DivineImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="shopdivine" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                                <Image x:Name="imgShopNothing" Margin="192,25,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource NothingImage}"/>
                                    </Image.Style>
                                    <Image.InputBindings>
                                        <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="shopnothing" MouseAction="LeftClick"/>
                                    </Image.InputBindings>
                                </Image>
                            </Grid>

                            <Border x:Name="bdRect4" Margin="0,383,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                                    <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="shop" MouseAction="RightClick"/>
                                </Border.InputBindings>
                                <Grid Margin="0,0,0,0">
                                    <TextBlock x:Name="tkPriceBulkBisShop" d:Text="" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Shop.PriceBis}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect4}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock x:Name="tkPriceBulkShop" d:Text="{ext:Localization Main001_PriceSelect}" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Panel.ZIndex="2" FontFamily="Consolas" TextAlignment="Right" Margin="0,5,7,0" Text="{Binding Result.Shop.Price}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect4}" Value="True">
                                                        <Setter Property="Foreground" Value="Lime"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                            
                        </Grid>
                    </TabItem>



                    <!-- Poeprice Tab-->
                    <TabItem x:Name="tabPoeprices" Header="poeprices" FontFamily="{StaticResource LithosProRegular}"  Visibility="{Binding Form.Visible.Poeprices, Converter={StaticResource bool2VisibilityConverter}}" IsSelected="{Binding Form.Tab.PoePriceSelected}">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.PoePriceEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <Grid Margin="2,0,-2,0">
                            <TextBlock Text="BE CAREFUL : poeprices.info does not reflect real time market !" HorizontalAlignment="Left" Margin="2,1,0,0" VerticalAlignment="Top" FontSize="10" FontFamily="{StaticResource LithosProRegular}" Foreground="#FFDBDCDC" TextAlignment="Center" Visibility="Visible" Width="501"/>
                            <Grid x:Name="grPoePriceLayout" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="492" Height="271">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="liPoePriceInfo" Grid.IsSharedSizeScope="True" BorderThickness="1" Margin="0,0,-13,0" FontFamily="Arial" ItemsSource="{Binding Path=Result.PoepricesList}"
                                         VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch" Cursor="">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                                                <ListBoxItem.Style>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                                                <Setter Property="Foreground" Value="YellowGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                                                <Setter Property="Foreground" Value="LimeGreen"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                                                <Setter Property="Foreground" Value="Yellow"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                                                <Setter Property="Foreground" Value="DarkRed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                                                <Setter Property="Foreground" Value="Azure"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                                                <Setter Property="Foreground" Value="Gray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBoxItem.Style>
                                            </ListBoxItem>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button Content="Search item on www.poeprices.info" FontFamily="{StaticResource LithosProRegular}" HorizontalAlignment="Left" Margin="127,287,0,-39" VerticalAlignment="Top" Width="250" Height="23" Command="{Binding Commands.SearchPoepricesCommand}"/>
                                <!-- Click="BtnPoePrices_Search"-->
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>

            </Grid>
        </Grid>
    </Border>
</view:ViewBase>