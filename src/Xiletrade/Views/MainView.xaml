<view:ViewBase x:Class="Xiletrade.Views.MainView"    
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:t="clr-namespace:Xiletrade.Library.ViewModels.Main;assembly=Xiletrade.Library"
        xmlns:ext="clr-namespace:Xiletrade.Util.Extensions"
        xmlns:view="clr-namespace:Xiletrade.Views"
        xmlns:help="clr-namespace:Xiletrade.Util.Helper"
        xmlns:uc="clr-namespace:Xiletrade.UserControls.Main"
        d:DataContext="{d:DesignInstance Type=t:MainViewModel}"
        mc:Ignorable="d" ResizeMode="NoResize" x:Name="myWindow" Topmost="True"
        Title="XileTrade" WindowStartupLocation="CenterScreen" WindowStyle="None"
        Foreground="{StaticResource ForegroundBrush}" FontFamily="Malgun Gothic" FontSize="12"
        AllowsTransparency="True" Background="Transparent" Opacity="1" SizeToContent="WidthAndHeight"
        RenderTransformOrigin="0.5,0.5" Visibility="Hidden" d:Visibility="Visible">
    <view:ViewBase.Resources>
        <!-- Redefine theme brushes to be able to control opacity level -->
        <SolidColorBrush x:Key="ButtonMouse" Color="{StaticResource ButtonMouseColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="ButtonMouseDown" Color="{StaticResource ButtonMouseDownColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="ButtonMouseLeave" Color="{StaticResource LightBackgroundColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="LightBg" Color="{StaticResource LightBackgroundColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="HotBg" Color="{StaticResource HotColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="DarkBg" Color="{StaticResource DarkBackgroundColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="Dark2Bg" Color="{StaticResource WindowBackgroundColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="RedBg" Color="{StaticResource RedColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="GrayBg" Color="{StaticResource GrayColor}" Opacity="{Binding Form.Opacity}" />

        <SolidColorBrush x:Key="SliderTrackRight.Normal" Color="{StaticResource SliderTrackRightNormalColor}" Opacity="{Binding Form.Opacity}" />
        <SolidColorBrush x:Key="SliderTrackRight.Hover" Color="{StaticResource LightBlueColor}" Opacity="{Binding Form.Opacity}" />
        <!--<SolidColorBrush x:Key="SliderTrackLeft.Normal" Color="{StaticResource SliderTrackLeftNormalColor}" Opacity="{Binding Form.Opacity}" />-->
        <SolidColorBrush x:Key="SliderTrackLeft.Hover" Color="{StaticResource SliderTrackLeftHoverColor}" Opacity="{Binding Form.Opacity}" />
    </view:ViewBase.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Command="{Binding Commands.WindowLoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Commands.WindowClosedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Commands.WindowDeactivatedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Commands.WindowActivatedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Border Width="550" Height="664" VerticalAlignment="Top" Background="Transparent" BorderBrush="{StaticResource DarkBg}" BorderThickness="2" CornerRadius="3">
        <Border.LayoutTransform>
            <TransformGroup>
                <ScaleTransform ScaleX="{Binding ViewScale}" ScaleY="{Binding ViewScale}"/>
            </TransformGroup>
        </Border.LayoutTransform>
        <Border.Resources>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Form.Minimized}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="664" To="130" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" From="130" To="664" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Resources>
        <Grid x:Name="gridMain" Background="{StaticResource Dark2Bg}">
            <!-- Generate non-blocking error 40 BindingExpression on launch : instantiation order -->
            <tb:TaskbarIcon IconSource="pack://application:,,,/Xiletrade;component/Assets/AppIcon.ico" Visibility="Visible" DataContext="{Binding}">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu Placement="Mouse">
                        <MenuItem Header="{ext:Localization Main146_TrayAbout}" Height="22" Command="{Binding TrayCommands.OpenAboutCommand}"/>
                        <MenuItem Header="{ext:Localization Main199_CheckUpdate}" Height="22" Command="{Binding TrayCommands.CheckUpdateCommand}"/>
                        <MenuItem Header="{ext:Localization Main147_TraySettings}" Height="22" Command="{Binding TrayCommands.OpenConfigCommand}"/>
                        <MenuItem Header="{ext:Localization Main148_TrayClose}" Height="22" Command="{Binding TrayCommands.CloseApplicationCommand}" CommandParameter="terminate"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
                <tb:TaskbarIcon.TrayToolTip>
                    <Border Opacity="1" Background="{StaticResource DarkBackgroundBrush}" BorderBrush="{StaticResource ForegroundShadeBrush}" BorderThickness="2" CornerRadius="4">
                        <Grid>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding NotifyName}" Margin="5,5,5,5" Foreground="White" FontSize="10" FontFamily="{StaticResource LithosProRegular}"/>
                        </Grid>
                    </Border>
                </tb:TaskbarIcon.TrayToolTip>
            </tb:TaskbarIcon>
            <!-- Header -->
            <uc:Header/>
            
            <Grid Margin="13,123,12,10">
                <!-- Body -->
                <TabControl x:Name="tabControl1" BorderThickness="1" Height="476" Margin="0,0,0,0" VerticalAlignment="Top" TabStripPlacement="Bottom" HorizontalAlignment="Left" Width="520" BorderBrush="{StaticResource DarkBg}" Background="{StaticResource LightBg}">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabPanel}">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                    </TabControl.Resources>
                    
                    <!-- Quick Search -->
                    <TabItem x:Name="tabItemBasic" Header="{ext:Localization Main084_tabItemBasic}" FontFamily="{StaticResource LithosProRegular}"  d:IsSelected="True" IsSelected="{Binding Form.Tab.QuickSelected}">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.QuickEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <uc:Quick/>
                    </TabItem>
                    
                    <!-- Detailed Search -->
                    <TabItem x:Name="tabItemDetailed" Header="{ext:Localization Main085_tabItemDetailed}" FontFamily="{StaticResource LithosProRegular}"  IsSelected="{Binding Form.Tab.DetailSelected}">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.DetailEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <uc:Detail/>
                    </TabItem>
                    
                    <!-- Bulk Tab -->
                    <TabItem x:Name="tabItemExchange" Header="{ext:Localization Main086_tabItemExchange}"  FontFamily="{StaticResource LithosProRegular}"  IsSelected="{Binding Form.Tab.BulkSelected}">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.BulkEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <uc:Bulk/>
                    </TabItem>

                    <!-- Shop Tab -->
                    <TabItem x:Name="tabItemShop" Header="{ext:Localization Main206_tabItemShop}" FontFamily="{StaticResource LithosProRegular}" IsSelected="{Binding Form.Tab.ShopSelected}">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.ShopEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <uc:Shop/>
                    </TabItem>

                    <!-- Poeprice Tab -->
                    <TabItem x:Name="tabPoeprices" Header="poeprices" FontFamily="{StaticResource LithosProRegular}"  Visibility="{Binding Form.Visible.Poeprices, Converter={StaticResource bool2VisibilityConverter}}" IsSelected="{Binding Form.Tab.PoePriceSelected}">
                        <TabItem.Style>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                                        <Setter Property="IsEnabled" Value="{Binding Form.Tab.PoePriceEnable}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TabItem.Style>
                        <uc:PoePrices/>
                    </TabItem>
                </TabControl>
                
                <!-- Footer -->
                <Button x:Name="btnSearch" Content="{ext:Localization Main098_btnSearch}" HorizontalAlignment="Left" Margin="10,487,0,5"  Width="177" Height="35" FontWeight="Bold" d:IsEnabled="True" Command="{Binding Commands.OpenSearchCommand}" FontFamily="{StaticResource LithosProRegular}" FontSize="16" ToolTip="{ext:Localization Main107_btnSearchTip}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, ElementName=tabItemBasic}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, ElementName=tabItemDetailed}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, ElementName=tabItemExchange}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Bulk.Pay.CurrencyIndex, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Bulk.Get.CurrencyIndex, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, ElementName=tabItemShop}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Shop.GetList.Count, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                        <Condition Binding="{Binding Path=Form.Shop.PayList.Count, Converter={StaticResource greaterThanZeroConverter}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="btnClose" Content="{ext:Localization Main100_btnClose}" HorizontalAlignment="Left" Margin="378,487,0,5" Width="130" Height="35" FontWeight="Bold" FontFamily="{StaticResource LithosProRegular}" FontSize="16" ToolTip="{ext:Localization Main109_btnCloseTip}" Command="{Binding TrayCommands.CloseApplicationCommand}"/>
            </Grid>
        </Grid>
    </Border>
</view:ViewBase>