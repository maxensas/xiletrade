<UserControl x:Class="Xiletrade.UserControls.Main.Bulk"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:t="clr-namespace:Xiletrade.Library.ViewModels.Main;assembly=Xiletrade.Library"
             xmlns:ext="clr-namespace:Xiletrade.Util.Extensions"
             xmlns:uc="clr-namespace:Xiletrade.UserControls.Main"
             xmlns:local="clr-namespace:Xiletrade.UserControls.Main"
             mc:Ignorable="d" 
             d:DesignHeight="476" d:DesignWidth="520"
             d:DataContext="{d:DesignInstance Type=t:MainViewModel}" d:Background="{StaticResource LightBg}">
    <Grid Margin="2,0,-2,0">
        <Label x:Name="lblGP" Content="{ext:Localization Main102_lblGP}" HorizontalAlignment="Left" Margin="27,-6,0,0" VerticalAlignment="Top" FontSize="12" Foreground="{StaticResource ForegroundTextBrush}" FontFamily="{StaticResource LithosProRegular}" Visibility="Visible" Width="412"/>
        <Grid x:Name="gridPriceLayoutBulk" Margin="0,16,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="505" Height="271">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <ListBox x:Name="liPriceBulk" FontFamily="Consolas" Margin="0,0,0,2" BorderThickness="1" ItemsSource="{Binding Path=Result.BulkList}"
                 VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" HorizontalContentAlignment="Stretch" SelectedIndex="{Binding Result.SelectedIndex.Bulk}">
                <ListBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </ListBox.Resources>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" x:Name="lbItemStyle">
                        <!--
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    -->
                        <Setter Property="BorderThickness" Value="0,0,0,0" />
                        <!--
                    <Setter Property="Focusable" Value="False" />
                    -->
                        <!--
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter ContentSource="Content"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    -->
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ListBoxItem Content="{Binding Content}" ToolTip="{Binding ToolTip}" Tag="{Binding Tag}">
                            <ListBoxItem.InputBindings>
                                <MouseBinding MouseAction="LeftClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.SelectBulkIndexCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding Index}" Command="{Binding Path=DataContext.Commands.ShowBulkWhisperCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                            </ListBoxItem.InputBindings>
                            <ListBoxItem.Style>
                                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FgColor}" Value="Red">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding FgColor}" Value="YellowGreen">
                                            <Setter Property="Foreground" Value="YellowGreen"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding FgColor}" Value="LimeGreen">
                                            <Setter Property="Foreground" Value="LimeGreen"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding FgColor}" Value="Yellow">
                                            <Setter Property="Foreground" Value="Yellow"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding FgColor}" Value="DeepSkyBlue">
                                            <Setter Property="Foreground" Value="DeepSkyBlue"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding FgColor}" Value="DarkRed">
                                            <Setter Property="Foreground" Value="DarkRed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding FgColor}" Value="LightGray">
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding FgColor}" Value="Azure">
                                            <Setter Property="Foreground" Value="Azure"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding FgColor}" Value="Gray">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBoxItem.Style>
                        </ListBoxItem>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <ListBox x:Name="liWhisper" Visibility="Hidden" ItemsSource="{Binding Path=Result.BulkList}"/>
        </Grid>
        <Grid x:Name="gridBulk" Margin="0,286,0,0" VerticalAlignment="Top" Height="92">
            <ComboBox x:Name="cbBulkPay1" HorizontalAlignment="Left" Margin="299,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="130" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                  VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.CategoryIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="pay" IsEnabled="{Binding Form.IsSelectionEnabled}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Foreground" Value="DarkGray"/>
                        <Style.Triggers>
                            <Trigger Property="SelectedIndex" Value="0">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="SelectedIndex" Value="-1">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Grid x:Name="scopePay" Margin="382,5,62,68" Panel.ZIndex="1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Form.Bulk.Pay.Search}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Ellipse Stroke="Gray" StrokeThickness="1" Margin="3,3,51,6" />
                <Rectangle Stroke="Gray" StrokeThickness="1" Margin="14,11,47,6">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="50"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
            <TextBox x:Name="tbPay" Margin="382,5,62,0" d:Text="" BorderThickness="1" TextAlignment="Left" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main116_Keywords}" VerticalAlignment="Top" IsEnabled="True"  Text="{Binding Form.Bulk.Pay.Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding Commands.SearchCurrencyCommand}" CommandParameter="pay" />
                </TextBox.InputBindings>
            </TextBox>
            <Grid Margin="291,3,128,65" ToolTip="{ext:Localization Main093_lbPay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" MaxWidth="68"/>
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="24" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="lbPay" Text="{ext:Localization Main093_lbPay}" Grid.Column="1" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="{StaticResource ForegroundTextBrush}" Margin="0,3,0,0"/>
                <Image x:Name="imgPayLoad" Grid.Column="3" Height="24" Width="24" d:Source="{StaticResource ImgExalt}" Source="{Binding Form.Bulk.Pay.Image, Converter={StaticResource imageSourceConverter}}"/>
            </Grid>
            <TextBlock x:Name="lbTierPay" Text="{ext:Localization Main094_lbTier}"  Margin="421,65,25,11" FontFamily="{StaticResource FontinSmallCaps}" Width="42" FontSize="10" Foreground="{StaticResource GrayForegoundBrush}" TextAlignment="Center" Visibility="{Binding Form.Bulk.Pay.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
            <ComboBox x:Name="cbTierPay" HorizontalAlignment="Left" Margin="444,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="55" Height="24" FontFamily="{StaticResource FontinSmallCaps}"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                  VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Tier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.TierIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Pay.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="pay/tier" IsEnabled="{Binding Form.IsSelectionEnabled}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ComboBox>
            <ComboBox x:Name="cbBulkPay2" HorizontalAlignment="Left" Margin="299,62,0,0" VerticalAlignment="Top" MaxDropDownHeight="160" Width="200" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                  VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Pay.Currency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Pay.CurrencyIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Pay.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Commands.ChangeCommand}" CommandParameter="pay" IsEnabled="{Binding Form.IsSelectionEnabled}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <Image x:Name="imgPayChaos" Margin="450,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ChaosImage}"/>
                </Image.Style>
                <Image.InputBindings>
                    <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paychaos" MouseAction="LeftClick"/>
                </Image.InputBindings>
            </Image>
            <Image x:Name="imgPayExalt" Margin="450,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ExaltImage}"/>
                </Image.Style>
                <Image.InputBindings>
                    <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="payexalt" MouseAction="LeftClick"/>
                </Image.InputBindings>
            </Image>
            <Image x:Name="imgPayDivine" Margin="469,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DivineImage}"/>
                </Image.Style>
                <Image.InputBindings>
                    <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paydivine" MouseAction="LeftClick"/>
                </Image.InputBindings>
            </Image>
            <Image x:Name="imgPayNothing" Margin="486,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource NothingImage}"/>
                </Image.Style>
                <Image.InputBindings>
                    <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="paynothing" MouseAction="LeftClick"/>
                </Image.InputBindings>
            </Image>


            <Border x:Name="borderBulk1" BorderBrush="{StaticResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="82" Margin="212,5,0,0" VerticalAlignment="Top" Width="1" RenderTransformOrigin="0.5,0.5" />
            <!--
        <Button x:Name="btnGetMoreBulk" Content="{ext:Localization Main095_getMoreBulk}"  HorizontalAlignment="Left" Height="20" Margin="216,6,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.Fetch}" ToolTipService.ShowDuration="12000" ToolTip="{ext:Localization Main113_getMoreBulkTip}" d:DataContext="{d:DesignInstance Type=t:MainViewModel}" Visibility="Hidden">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                            <Setter Property="IsEnabled" Value="{Binding Form.Button.FetchBulksEnabled}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        -->
            <Button x:Name="btnInvert" Content="{ext:Localization Main096_btnInvert}"  HorizontalAlignment="Left" Height="20" Margin="216,64,0,0" VerticalAlignment="Top" Width="71" FontSize="12" FontFamily="{StaticResource LithosProRegular}" Command="{Binding Commands.InvertBulkCommand}" ToolTip="{ext:Localization Main115_btnInvertTip}"/>
            <Border x:Name="borderBulk2" BorderBrush="{StaticResource Dark2Bg}" BorderThickness="1" HorizontalAlignment="Left" Height="82" Margin="291,5,0,0" VerticalAlignment="Top" Width="1" RenderTransformOrigin="0.5,0.5" />
            <ComboBox x:Name="cbBulkGet1" HorizontalAlignment="Left" Margin="5,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="130" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                  VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.CategoryIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="get" IsEnabled="{Binding Form.IsSelectionEnabled}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Foreground" Value="DarkGray"/>
                        <Style.Triggers>
                            <Trigger Property="SelectedIndex" Value="0">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="SelectedIndex" Value="-1">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Grid Margin="-6,2,425,65" ToolTip="{ext:Localization Main092_lbGet}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" MaxWidth="65"/>
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="24" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="lbGet" Text="{ext:Localization Main092_lbGet}" Grid.Column="1" FontFamily="{StaticResource FontinSmallCaps}" HorizontalAlignment="Center" FontSize="14" Foreground="{StaticResource ForegroundTextBrush}" Margin="0,3,0,2"/>
                <Image x:Name="imgGetLoad" Grid.Column="3" Height="24" Width="24" d:Source="{StaticResource ImgChaos}" Source="{Binding Form.Bulk.Get.Image, Converter={StaticResource imageSourceConverter}}"/>
            </Grid>
            <TextBlock x:Name="lbTierGet" Text="{ext:Localization Main094_lbTier}"  Margin="128,65,320,11" FontFamily="{StaticResource FontinSmallCaps}" Width="42" FontSize="10" Foreground="{StaticResource GrayForegoundBrush}" TextAlignment="Center" Visibility="{Binding Form.Bulk.Get.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>

            <ComboBox x:Name="cbTierGet" HorizontalAlignment="Left" Margin="150,31,0,0" VerticalAlignment="Top" MaxDropDownHeight="190" Width="55" Height="24" FontFamily="{StaticResource FontinSmallCaps}"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                  VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Tier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.TierIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Get.TierVisible, Converter={StaticResource bool2VisibilityConverter}}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Commands.SelectBulkCommand}" CommandParameter="get/tier" IsEnabled="{Binding Form.IsSelectionEnabled}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ComboBox>
            <ComboBox x:Name="cbBulkGet2" HorizontalAlignment="Left" Margin="5,62,0,0" VerticalAlignment="Top" MaxDropDownHeight="160" Width="200" Height="24" FontFamily="{StaticResource FontinSmallCaps}" FontWeight="Normal"   HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                  VirtualizingStackPanel.IsVirtualizing="False" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemsSource="{Binding Form.Bulk.Get.Currency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Form.Bulk.Get.CurrencyIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Commands.ChangeCommand}" CommandParameter="get" IsEnabled="{Binding Form.IsSelectionEnabled}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <TextBlock x:Name="lbMinStock" Text="{ext:Localization Main097_lbMinStock}"  Margin="230,20,236,59" FontFamily="{StaticResource FontinSmallCaps}" FontSize="10" Foreground="{StaticResource GrayForegoundBrush}" TextAlignment="Center" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}"/>
            <TextBox x:Name="tbMinStock" Margin="230,-6,0,0" d:Text="1" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center" Foreground="{StaticResource ForegroundTextBrush}" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main114_tbMinStockTip}" Visibility="{Binding Form.Bulk.Get.CurrencyVisible, Converter={StaticResource bool2VisibilityConverter}}" Text="{Binding Form.Bulk.Stock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="44"/>
            <Grid x:Name="scopeGet" Margin="86,5,355,68" Panel.ZIndex="1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Form.Bulk.Get.Search}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Ellipse Stroke="Gray" StrokeThickness="1" Margin="3,3,54,6" />
                <Rectangle Stroke="Gray" StrokeThickness="1" Margin="14,11,50,6">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="50"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
            <TextBox x:Name="tbGet" Margin="86,5,355,0" d:Text="" BorderThickness="1" TextAlignment="Left" FontFamily="{StaticResource FontinSmallCaps}"   ToolTip="{ext:Localization Main116_Keywords}" VerticalAlignment="Top" IsEnabled="True"  Text="{Binding Form.Bulk.Get.Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding Commands.SearchCurrencyCommand}" CommandParameter="get" />
                </TextBox.InputBindings>
            </TextBox>
            <Image x:Name="imgGetChaos" Margin="156,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource inverseBool2VisibilityConverter}}">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ChaosImage}"/>
                </Image.Style>
                <Image.InputBindings>
                    <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getchaos" MouseAction="LeftClick"/>
                </Image.InputBindings>
            </Image>
            <Image x:Name="imgGetExalt" Margin="156,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="18" Visibility="{Binding Form.IsPoeTwo, Converter={StaticResource bool2VisibilityConverter}}">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ExaltImage}"/>
                </Image.Style>
                <Image.InputBindings>
                    <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getexalt" MouseAction="LeftClick"/>
                </Image.InputBindings>
            </Image>
            <Image x:Name="imgGetDivine" Margin="175,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DivineImage}"/>
                </Image.Style>
                <Image.InputBindings>
                    <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getdivine" MouseAction="LeftClick"/>
                </Image.InputBindings>
            </Image>
            <Image x:Name="imgGetNothing" Margin="192,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource NothingImage}"/>
                </Image.Style>
                <Image.InputBindings>
                    <MouseBinding Command="{Binding Commands.ResetBulkImageCommand}" CommandParameter="getnothing" MouseAction="LeftClick"/>
                </Image.InputBindings>
            </Image>
        </Grid>

        <Border x:Name="bdRect3" Margin="0,383,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="506" Height="52" Visibility="Visible" BorderThickness="1" Grid.Row="0" CornerRadius="3" IsEnabled="{Binding Path=Form.Freeze, Converter={StaticResource inverseBooleanConverter}}">
            <Border.Style>
                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource BorderResult}"/>
            </Border.Style>
            <Border.InputBindings>
                <MouseBinding Command="{Binding Commands.RefreshSearchCommand}" MouseAction="LeftClick"/>
                <MouseBinding Command="{Binding Commands.SwitchTabCommand}" CommandParameter="bulk" MouseAction="RightClick"/>
            </Border.InputBindings>
            <Grid Margin="0,0,0,0" Cursor="Hand">
                <TextBlock x:Name="tkPriceBulkBis" d:Text="" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="2" FontFamily="Consolas" Margin="8,5,0,0" Text="{Binding Result.Bulk.LeftString}" Opacity="0.5">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="LightGray"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect3}" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock x:Name="tkPriceBulk" d:Text="{ext:Localization Main001_PriceSelect}" Cursor="Hand" FontWeight="Bold" Height="43" Width="250" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Panel.ZIndex="2" FontFamily="Consolas" TextAlignment="Right" Margin="0,5,7,0" Text="{Binding Result.Bulk.RightString}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="LightGray"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=bdRect3}" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>
        <TextBlock x:Name="cbTotalExchange" d:Text="{ext:Localization Main032_cbTotalExchange}" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Consolas" Visibility="Visible" Panel.ZIndex="1" FontSize="10" Margin="9,436,0,-1" d:DataContext="{d:DesignInstance Type=t:MainViewModel}"> <!-- Text="{Binding Result.Bulk.Total}"-->
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Form.Freeze}" Value="False">
                            <Setter Property="Text" Value="{Binding Result.Bulk.Total}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Form.Freeze}" Value="True">
                            <Setter Property="Text" Value="{Binding Form.RateText}"/>
                            <Setter Property="Foreground" Value="Yellow"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </Grid>
</UserControl>
